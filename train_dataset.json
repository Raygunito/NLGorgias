[
    {
        "Example Number": 58,
        "Gorgias Code": ":- dynamic subscription_due/0, client_feedback/0.\nrule(r1, cycle_to_work, []) :- subscription_due.\nrule(r2, rent_car, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- subscription_due, client_feedback.\nrule(p2, prefer(r2, r1), []) :- subscription_due, client_feedback, expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, cycle_to_work).\ncomplement(cycle_to_work, rent_car).\ncomplement(subscription_due, client_feedback).\ncomplement(client_feedback, subscription_due).",
        "NL Translation": "\"If there is a subscription due, I cycle to work. If there is client feedback, I rent a car. If both subscription is due and there is client feedback, I prefer to cycle to work. However, if there is also an expensive event, I prefer to rent a car. I can't at the same time cycle to work and rent a car, and subscription due and client feedback are not compatible.\""
    },
    {
        "Example Number": 156,
        "Gorgias Code": ":- dynamic humid_day/0, discount_on_flight/0.\nrule(r1, buy_groceries, []) :- humid_day.\nrule(r2, water_plants, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- humid_day, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- humid_day, discount_on_flight, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, buy_groceries).\ncomplement(buy_groceries, water_plants).\ncomplement(humid_day, discount_on_flight).\ncomplement(discount_on_flight, humid_day).",
        "NL Translation": "\"If it is a humid day, I buy groceries. If there is a discount on flights, I water plants. However, if it is both a humid day and there is a discount on flights, I prefer to buy groceries. But if it is a humid day, there is a discount on flights, and it is also a rainy day, I prefer to water plants. I can't at the same time water plants and buy groceries, and humid day and discount on flights are not compatible.\""
    },
    {
        "Example Number": 914,
        "Gorgias Code": ":- dynamic tax_refund/0, feeling_sick/0.\nrule(r1, cycle_to_work, []) :- tax_refund.\nrule(r2, dispose_trash, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- tax_refund, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- tax_refund, feeling_sick, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, cycle_to_work).\ncomplement(cycle_to_work, dispose_trash).\ncomplement(tax_refund, feeling_sick).\ncomplement(feeling_sick, tax_refund).",
        "NL Translation": "If I have a tax refund, I cycle to work. If I am feeling sick, I dispose of trash. If I have both a tax refund and feeling sick, I prefer to cycle to work; however, if there is also an invitation from a friend, I prefer to dispose of trash. Cycling to work and disposing of trash are incompatible, as well as having a tax refund and feeling sick."
    },
    {
        "Example Number": 370,
        "Gorgias Code": ":- dynamic family_emergency/0, morning_rush/0.\nrule(r1, go_to(theater), []) :- family_emergency.\nrule(r2, evening_walk, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- family_emergency, morning_rush.\nrule(p2, prefer(r2, r1), []) :- family_emergency, morning_rush, weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, go_to(theater)).\ncomplement(go_to(theater), evening_walk).\ncomplement(family_emergency, morning_rush).\ncomplement(morning_rush, family_emergency).",
        "NL Translation": "If there is a family emergency, I go to the theater. In case of a morning rush, I take an evening walk. If both a family emergency and morning rush occur, I prefer to go to the theater; however, if it's also the weekend, I prefer to take an evening walk."
    },
    {
        "Example Number": 29,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, do_laundry, []) :- lunch_time.\nrule(r2, cycle_to_work, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycle_to_work, do_laundry).\ncomplement(do_laundry, cycle_to_work).",
        "NL Translation": "\"When it is lunch time, I do laundry or cycle to work. Generally, I prefer to do laundry over cycling to work.\""
    },
    {
        "Example Number": 544,
        "Gorgias Code": ":- dynamic expensive_event/0, party_invitation/0, networking_event/0, concert_nearby/0, subscription_due/0.\nrule(r1, go_to(theater), []) :- expensive_event.\nrule(r2, go_gym, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- expensive_event, party_invitation.\nrule(p2, prefer(r2, r1), []) :- expensive_event, party_invitation, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- subscription_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_gym, go_to(theater)).\ncomplement(go_to(theater), go_gym).\ncomplement(expensive_event, party_invitation).\ncomplement(party_invitation, expensive_event).",
        "NL Translation": "If there is an expensive event, I go to the theater. If I receive a party invitation, I go to the gym. However, if there is an expensive event and a party invitation, I prefer to go to the theater, but if it is also my wedding anniversary, I prefer to go to the gym. If there is a networking event, I prefer to go to the gym. If there is a concert nearby, I prefer to go to the theater. If there is a subscription due, I prefer to go to the gym over going to the theater."
    },
    {
        "Example Number": 513,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, join_fitness_class, []) :- team_project_due.\nrule(r2, visit_doctor, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_doctor, join_fitness_class).\ncomplement(join_fitness_class, visit_doctor).",
        "NL Translation": "If I have a team project due, I join a fitness class. If I have a team project due, I visit the doctor. I prefer to join a fitness class over visiting the doctor. I can't at the same time join a fitness class and visit the doctor."
    },
    {
        "Example Number": 312,
        "Gorgias Code": ":- dynamic project_extension/0, rainy_day/0, night_time/0.\nrule(r1, host_dinner_party, []) :- project_extension.\nrule(r2, submit_timesheet, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- project_extension, rainy_day.\nrule(p2, prefer(r2, r1), []) :- project_extension, rainy_day, concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(submit_timesheet, host_dinner_party).\ncomplement(host_dinner_party, submit_timesheet).\ncomplement(project_extension, rainy_day).\ncomplement(rainy_day, project_extension).",
        "NL Translation": "If there is a project extension, I host a dinner party. If it's a rainy day, I submit my timesheet. If I have both a project extension and a rainy day, I prefer to host a dinner party; however, if there is also a concert nearby, I prefer to submit my timesheet. I cannot host a dinner party and submit my timesheet at the same time, and project extension and rainy day are not compatible. If it's night time, I prefer to submit my timesheet over hosting a dinner party."
    },
    {
        "Example Number": 956,
        "Gorgias Code": ":- dynamic job_interview/0, dusk/0\nrule(r1, update_project_plan, []) :- job_interview.\nrule(r2, visit_museum, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, update_project_plan).\ncomplement(update_project_plan, visit_museum).",
        "NL Translation": "When there is a job interview, I update the project plan. If it is dusk, I visit the museum. I prefer to update the project plan over visiting the museum. If it is dusk, I prefer to visit the museum over updating the project plan."
    },
    {
        "Example Number": 243,
        "Gorgias Code": ":- dynamic good_weather/0, financial_aid/0, relationship_break/0\nrule(r1, visit_family, []) :- good_weather.\nrule(r2, visit_museum, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, visit_family).\ncomplement(visit_family, visit_museum).",
        "NL Translation": "\"When there is good weather, I visit family or visit the museum. Generally, I prefer to visit family but if there is financial aid, I prefer to visit the museum. However, if there is a relationship break, I prefer to visit family. I can't at the same time visit family and visit the museum.\""
    },
    {
        "Example Number": 145,
        "Gorgias Code": ":- dynamic early_morning/0, wedding_anniversary/0, hail_storm/0, team_project_due/0, new_restaurant_to_try/0.\nrule(r1, rent_car, []) :- early_morning.\nrule(r2, ride_bike, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- early_morning, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- early_morning, wedding_anniversary, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_restaurant_to_try.\nrule(c5, prefer(c4, c3), []).\ncomplement(ride_bike, rent_car).\ncomplement(rent_car, ride_bike).\ncomplement(early_morning, wedding_anniversary).\ncomplement(wedding_anniversary, early_morning).",
        "NL Translation": "\"If it is early morning, I rent a car. If it is my wedding anniversary, I ride a bike. However, if it is both early morning and my wedding anniversary, I prefer to rent a car, but if it is also a low budget situation, I prefer to ride a bike. In case of a hail storm, I prefer riding a bike. If there is a team project due, I prefer renting a car. If there is a new restaurant to try, I prefer renting a car over riding a bike.\""
    },
    {
        "Example Number": 202,
        "Gorgias Code": ":- dynamic project_extension/0, night_time/0.\nrule(r1, host_dinner_party, []) :- project_extension.\nrule(r2, organize_workspace, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- project_extension, night_time.\nrule(p2, prefer(r2, r1), []) :- project_extension, night_time, financial_aid.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, host_dinner_party).\ncomplement(host_dinner_party, organize_workspace).\ncomplement(project_extension, night_time).\ncomplement(night_time, project_extension).",
        "NL Translation": "\"If there is a project extension, I host a dinner party. If it's night time, I organize the workspace. However, if I have both a project extension and it's night time, I prefer to host a dinner party. But if I also have financial aid, I prefer to organize the workspace. I can't at the same time organize the workspace and host a dinner party, and project extension and night time are not compatible.\""
    },
    {
        "Example Number": 623,
        "Gorgias Code": ":- dynamic unexpected_guest/0, dusk/0, rainy_day/0, friend_in_town/0, financial_aid/0.\nrule(r1, rent_car, []) :- unexpected_guest.\nrule(r2, finish_report, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, dusk.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, dusk, hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- financial_aid.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, rent_car).\ncomplement(rent_car, finish_report).\ncomplement(unexpected_guest, dusk).\ncomplement(dusk, unexpected_guest).",
        "NL Translation": "\"If there is an unexpected guest, I rent a car. If it is dusk, I finish the report. If both conditions are met, I prefer to rent a car; however, if there is also a hail storm, I prefer to finish the report. If it is a rainy day, I prefer to finish the report. If a friend is in town, I prefer to rent a car. If I receive financial aid, I prefer to rent a car over finishing the report.\""
    },
    {
        "Example Number": 656,
        "Gorgias Code": ":- dynamic feeling_sick/0, financial_aid/0.\nrule(r1, book_flight, []) :- feeling_sick.\nrule(r2, evening_walk, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, financial_aid.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, financial_aid, important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, book_flight).\ncomplement(book_flight, evening_walk).\ncomplement(feeling_sick, financial_aid).\ncomplement(financial_aid, feeling_sick).",
        "NL Translation": "\"If feeling sick, book a flight. If receiving financial aid, take an evening walk. If both feeling sick and receiving financial aid, prefer to book a flight. However, if feeling sick, receiving financial aid, and having an important meeting, prefer to take an evening walk. Cannot both take an evening walk and book a flight, and feeling sick and receiving financial aid are not compatible.\""
    },
    {
        "Example Number": 206,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, call_client, []) :- extended_work_hours.\nrule(r2, visit_museum, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_museum, call_client).\ncomplement(call_client, visit_museum).",
        "NL Translation": "When extended work hours, I either call the client or visit the museum. I prefer to call the client over visiting the museum. I cannot do both at the same time."
    },
    {
        "Example Number": 147,
        "Gorgias Code": ":- dynamic good_investment/0, relationship_break/0.\nrule(r1, clean_house, []) :- good_investment.\nrule(r2, take_bus, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- good_investment, relationship_break.\nrule(p2, prefer(r2, r1), []) :- good_investment, relationship_break, cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_bus, clean_house).\ncomplement(clean_house, take_bus).\ncomplement(good_investment, relationship_break).\ncomplement(relationship_break, good_investment).",
        "NL Translation": "\"If there is a good investment, I clean the house. If there is a relationship break, I take the bus. If both a good investment and relationship break occur, I prefer to clean the house; however, if it's also a cloudy day, I prefer to take the bus. I can't at the same time take the bus and clean the house, and good investment and relationship break are not compatible.\""
    },
    {
        "Example Number": 445,
        "Gorgias Code": ":- dynamic urgent_deadline/0, networking_event/0, rainy_day/0\nrule(r1, go_to(theater), []) :- urgent_deadline.\nrule(r2, organize_workspace, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, go_to(theater)).\ncomplement(go_to(theater), organize_workspace).",
        "NL Translation": "If there is an urgent deadline, I either go to the theater or organize my workspace. Generally, I prefer to go to the theater, but if there is a networking event, I prefer to organize my workspace. However, if it is a rainy day, I prefer to go to the theater. I cannot go to the theater and organize my workspace at the same time."
    },
    {
        "Example Number": 503,
        "Gorgias Code": ":- dynamic lunch_time/0, school_reunion/0, early_morning/0\nrule(r1, join_fitness_class, []) :- lunch_time.\nrule(r2, plan_meals, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, join_fitness_class).\ncomplement(join_fitness_class, plan_meals).",
        "NL Translation": "\"When it is lunch time, I either join a fitness class or plan meals. Generally, I prefer to join a fitness class but if there is a school reunion, I prefer to plan meals. However, if it is early morning, I prefer to plan meals over joining a fitness class.\""
    },
    {
        "Example Number": 138,
        "Gorgias Code": ":- dynamic holiday_season/0, humid_day/0\nrule(r1, call_client, []) :- holiday_season.\nrule(r2, water_plants, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, call_client).\ncomplement(call_client, water_plants).",
        "NL Translation": "When it is holiday season, I either call the client or water plants. Generally, I prefer to call the client but if it is a humid day, I prefer to water plants. I can't at the same time water plants and call the client."
    },
    {
        "Example Number": 220,
        "Gorgias Code": ":- dynamic important_meeting/0, team_project_due/0, rainy_day/0.\nrule(r1, pay_bills, []) :- important_meeting.\nrule(r2, water_plants, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- important_meeting, team_project_due.\nrule(p2, prefer(r2, r1), []) :- important_meeting, team_project_due, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, pay_bills).\ncomplement(pay_bills, water_plants).\ncomplement(important_meeting, team_project_due).\ncomplement(team_project_due, important_meeting).",
        "NL Translation": "If there is an important meeting, I pay bills. If there is a team project due, I water plants. However, if both are present, I prefer to pay bills; but if it's also good weather, I prefer to water plants. If it's a rainy day, I prefer to pay bills over watering plants."
    },
    {
        "Example Number": 823,
        "Gorgias Code": ":- dynamic weekend/0, new_restaurant_to_try/0, friend_in_town/0.\nrule(r1, rent_car, []) :- weekend.\nrule(r2, swim_session, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- weekend, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- weekend, new_restaurant_to_try, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, rent_car).\ncomplement(rent_car, swim_session).\ncomplement(weekend, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, weekend).",
        "NL Translation": "\"If it is the weekend, I rent a car. If there is a new restaurant to try, I have a swim session. If it is both the weekend and there is a new restaurant to try, I prefer to rent a car; however, if there is also a vacation planned, I prefer to have a swim session. I can't at the same time rent a car and have a swim session, and the weekend and having a new restaurant to try are not compatible.\""
    },
    {
        "Example Number": 450,
        "Gorgias Code": ":- dynamic unexpected_guest/0.\nrule(r1, morning_run, []) :- unexpected_guest.\nrule(r2, take_bus, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\ncomplement(take_bus, morning_run).\ncomplement(morning_run, take_bus).",
        "NL Translation": "If there is an unexpected guest, I either go for a morning run or take the bus. I prefer to go for a morning run over taking the bus. I cannot go for a morning run and take the bus at the same time."
    },
    {
        "Example Number": 25,
        "Gorgias Code": ":- dynamic vacation_planned/0, financial_aid/0.\nrule(r1, join_fitness_class, []) :- vacation_planned.\nrule(r2, do_laundry, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, financial_aid.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, financial_aid, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(do_laundry, join_fitness_class).\ncomplement(join_fitness_class, do_laundry).\ncomplement(vacation_planned, financial_aid).\ncomplement(financial_aid, vacation_planned).",
        "NL Translation": "If vacation is planned, I join fitness class. If financial aid is available, I do laundry. If both vacation is planned and financial aid is available, I prefer to join fitness class, however if there is also a medical appointment, I prefer to do laundry. I can't at the same time join fitness class and do laundry, and vacation planned and financial aid aren't compatible."
    },
    {
        "Example Number": 141,
        "Gorgias Code": ":- dynamic concert_nearby/0, medical_appointment/0, night_time/0, urgent_deadline/0, project_extension/0.\nrule(r1, finish_report, []) :- concert_nearby.\nrule(r2, explore_city, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, medical_appointment, hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- project_extension.\nrule(c5, prefer(c4, c3), []).\ncomplement(explore_city, finish_report).\ncomplement(finish_report, explore_city).\ncomplement(concert_nearby, medical_appointment).\ncomplement(medical_appointment, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I finish the report. If I have a medical appointment, I explore the city. If both the concert is nearby and I have a medical appointment, I prefer to finish the report; however, if there is also a hail storm, I prefer to explore the city. If it is night time, I prefer to finish the report. If there is an urgent deadline, I prefer to explore the city. If there is a project extension, I prefer to finish the report over exploring the city."
    },
    {
        "Example Number": 930,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, rent_car, []) :- extended_work_hours.\nrule(r2, cycling_session, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycling_session, rent_car).\ncomplement(rent_car, cycling_session).",
        "NL Translation": "When I have extended work hours, I either rent a car or have a cycling session. I generally prefer to rent a car over having a cycling session. I cannot rent a car and have a cycling session at the same time."
    },
    {
        "Example Number": 499,
        "Gorgias Code": ":- dynamic unexpected_guest/0, project_extension/0, feeling_sick/0, party_invitation/0, client_feedback/0.\nrule(r1, go_gym, []) :- unexpected_guest.\nrule(r2, take_picnic, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, project_extension.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, project_extension, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- client_feedback.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_picnic, go_gym).\ncomplement(go_gym, take_picnic).\ncomplement(unexpected_guest, project_extension).\ncomplement(project_extension, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I go to the gym. If there is a project extension, I take a picnic. If there is both an unexpected guest and a project extension, I prefer to go to the gym. However, if there is an unexpected guest, a project extension, and it's a hot day, I prefer to take a picnic. If I'm feeling sick, I prefer to go to the gym. If there is a party invitation, I prefer to take a picnic. If there is client feedback, I prefer going to the gym over taking a picnic."
    },
    {
        "Example Number": 324,
        "Gorgias Code": ":- dynamic humid_day/0, boss_in_office/0\nrule(r1, read_book, []) :- humid_day.\nrule(r2, go_gym, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, read_book).\ncomplement(read_book, go_gym).",
        "NL Translation": "If it is a humid day, I read a book or go to the gym. Generally, I prefer to read a book but if the boss is in the office, I prefer to go to the gym. I cannot do both at the same time."
    },
    {
        "Example Number": 987,
        "Gorgias Code": ":- dynamic concert_nearby/0, expensive_event/0.\nrule(r1, visit_family, []) :- concert_nearby.\nrule(r2, order_taxi, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, expensive_event.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, expensive_event, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, visit_family).\ncomplement(visit_family, order_taxi).\ncomplement(concert_nearby, expensive_event).\ncomplement(expensive_event, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I visit family. If there is an expensive event, I order a taxi. If there is both a concert nearby and an expensive event, I prefer to visit family, however if it's also lunch time I prefer to order a taxi."
    },
    {
        "Example Number": 536,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, do_laundry, []) :- job_interview.\nrule(r2, reply_emails, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(reply_emails, do_laundry).\ncomplement(do_laundry, reply_emails).",
        "NL Translation": "When there is a job interview, I do laundry or reply to emails. Generally, I prefer to do laundry over replying to emails."
    },
    {
        "Example Number": 23,
        "Gorgias Code": ":- dynamic cloudy_day/0, invitation_from_friend/0, got_bonus/0\nrule(r1, cycle_to_work, []) :- cloudy_day.\nrule(r2, reply_emails, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, cycle_to_work).\ncomplement(cycle_to_work, reply_emails).",
        "NL Translation": "If it is a cloudy day, I either cycle to work or reply to emails. Generally, I prefer to cycle to work, but if there is an invitation from a friend, I prefer to reply to emails. If I have received a bonus, I prefer to reply to emails over cycling to work. Cycling to work and replying to emails are not compatible."
    },
    {
        "Example Number": 200,
        "Gorgias Code": ":- dynamic family_gathering/0, good_weather/0, good_investment/0.\nrule(r1, go_to(cinema), []) :- family_gathering.\nrule(r2, book_ride_share, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- family_gathering, good_weather.\nrule(p2, prefer(r2, r1), []) :- family_gathering, good_weather, subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, go_to(cinema)).\ncomplement(go_to(cinema), book_ride_share).\ncomplement(family_gathering, good_weather).\ncomplement(good_weather, family_gathering).",
        "NL Translation": "If there is a family gathering, I go to the cinema. If the weather is good, I book a ride share. If there is a family gathering and the weather is good, I prefer to go to the cinema. If there is a family gathering, the weather is good, and there is a subscription due, I prefer to book a ride share. I cannot go to the cinema and book a ride share at the same time, and family gathering and good weather are not compatible. If it is a good investment, I prefer to book a ride share over going to the cinema."
    },
    {
        "Example Number": 361,
        "Gorgias Code": ":- dynamic tax_refund/0, expensive_event/0\nrule(r1, host_dinner_party, []) :- tax_refund.\nrule(r2, visit_family, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, host_dinner_party).\ncomplement(host_dinner_party, visit_family).",
        "NL Translation": "If there is a tax refund, I host a dinner party. If there is a tax refund, I visit family. Generally, I prefer to host a dinner party over visiting family. However, if there is an expensive event, I prefer to visit family."
    },
    {
        "Example Number": 632,
        "Gorgias Code": ":- dynamic holiday_season/0.\nrule(r1, review_documents, []) :- holiday_season.\nrule(r2, attend_concert, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_concert, review_documents).\ncomplement(review_documents, attend_concert).",
        "NL Translation": "When it is holiday season, I review documents or attend a concert. Generally, I prefer to review documents over attending a concert. I can't at the same time attend a concert and review documents."
    },
    {
        "Example Number": 314,
        "Gorgias Code": ":- dynamic cloudy_day/0, feeling_sick/0, family_gathering/0\nrule(r1, go_to(cinema), []) :- cloudy_day.\nrule(r2, finish_report, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, go_to(cinema)).\ncomplement(go_to(cinema), finish_report).",
        "NL Translation": "\"If it is a cloudy day, I either go to the cinema or finish a report. Generally, I prefer to go to the cinema but if I am feeling sick, I prefer to finish the report. However, if there is a family gathering, I prefer to go to the cinema. I can't at the same time go to the cinema and finish the report.\""
    },
    {
        "Example Number": 693,
        "Gorgias Code": ":- dynamic early_morning/0, good_weather/0, night_time/0, morning_rush/0, financial_aid/0.\nrule(r1, review_documents, []) :- early_morning.\nrule(r2, attend_meeting, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- early_morning, good_weather.\nrule(p2, prefer(r2, r1), []) :- early_morning, good_weather, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- financial_aid.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_meeting, review_documents).\ncomplement(review_documents, attend_meeting).\ncomplement(early_morning, good_weather).\ncomplement(good_weather, early_morning).",
        "NL Translation": "If it is early morning, I review documents. If the weather is good, I attend a meeting. I prefer to review documents over attending a meeting if it is early morning and the weather is good. However, if it is afternoon, I prefer to attend a meeting. I cannot review documents and attend a meeting at the same time. If it is night time, I prefer to attend a meeting. If there is a morning rush, I prefer to review documents. If I have financial aid, I prefer to attend a meeting over reviewing documents."
    },
    {
        "Example Number": 522,
        "Gorgias Code": ":- dynamic early_morning/0.\nrule(r1, book_flight, []) :- early_morning.\nrule(r2, buy_groceries, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\ncomplement(buy_groceries, book_flight).\ncomplement(book_flight, buy_groceries).",
        "NL Translation": "When it is early morning, I book a flight or buy groceries. Generally, I prefer to book a flight over buying groceries. I can't at the same time book a flight and buy groceries."
    },
    {
        "Example Number": 690,
        "Gorgias Code": ":- dynamic unexpected_guest/0, tax_refund/0, holiday_season/0\nrule(r1, give_presentation, []) :- unexpected_guest.\nrule(r2, visit_family, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_family, give_presentation).\ncomplement(give_presentation, visit_family).",
        "NL Translation": "\"If there is an unexpected guest, I give a presentation or visit family. Generally, I prefer to give a presentation but if there is a tax refund, I prefer to visit family. However, if it is the holiday season, I prefer to give a presentation over visiting family.\""
    },
    {
        "Example Number": 586,
        "Gorgias Code": ":- dynamic moving_house/0, vacation_planned/0, concert_nearby/0.\nrule(r1, ride_bike, []) :- moving_house.\nrule(r2, visit_doctor, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- moving_house, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- moving_house, vacation_planned, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, ride_bike).\ncomplement(ride_bike, visit_doctor).\ncomplement(moving_house, vacation_planned).\ncomplement(vacation_planned, moving_house).",
        "NL Translation": "If I am moving house, I ride a bike. If I have a vacation planned, I visit the doctor. If I have both moving house and a vacation planned, I prefer to ride a bike; however, if I also missed a deadline, I prefer to visit the doctor. I cannot at the same time ride a bike and visit the doctor, and moving house and a vacation planned are not compatible. If there is a concert nearby, I prefer to ride a bike over visiting the doctor."
    },
    {
        "Example Number": 541,
        "Gorgias Code": ":- dynamic discount_on_flight/0.\nrule(r1, attend_meeting, []) :- discount_on_flight.\nrule(r2, attend_concert, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_concert, attend_meeting).\ncomplement(attend_meeting, attend_concert).",
        "NL Translation": "When there is a discount on the flight, I attend a meeting or a concert. Generally, I prefer to attend the meeting over the concert."
    },
    {
        "Example Number": 931,
        "Gorgias Code": ":- dynamic school_reunion/0, good_investment/0, hail_storm/0, client_feedback/0, got_bonus/0.\nrule(r1, rent_car, []) :- school_reunion.\nrule(r2, do_laundry, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- school_reunion, good_investment.\nrule(p2, prefer(r2, r1), []) :- school_reunion, good_investment, night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- got_bonus.\nrule(c5, prefer(c4, c3), []).\ncomplement(do_laundry, rent_car).\ncomplement(rent_car, do_laundry).\ncomplement(school_reunion, good_investment).\ncomplement(good_investment, school_reunion).",
        "NL Translation": "If there is a school reunion, I rent a car. If it's a good investment, I do laundry. If both the school reunion and good investment are true, I prefer to rent a car; however, if it's also night time, I prefer to do laundry. If there is a hail storm, I prefer to do laundry. If there is client feedback, I prefer to rent a car. If I got a bonus, I prefer to rent a car over doing laundry. If I have client feedback, I prefer to do laundry over renting a car."
    },
    {
        "Example Number": 756,
        "Gorgias Code": ":- dynamic good_weather/0, early_morning/0\nrule(r1, pay_bills, []) :- good_weather.\nrule(r2, organize_workspace, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, pay_bills).\ncomplement(pay_bills, organize_workspace).",
        "NL Translation": "When there is good weather, I either pay bills or organize workspace. Generally, I prefer to pay bills but if it is early morning, I prefer to organize workspace. I cannot do both pay bills and organize workspace."
    },
    {
        "Example Number": 777,
        "Gorgias Code": ":- dynamic subscription_due/0, project_extension/0, afternoon/0\nrule(r1, update_project_plan, []) :- subscription_due.\nrule(r2, visit_museum, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, update_project_plan).\ncomplement(update_project_plan, visit_museum).",
        "NL Translation": "\"When subscription is due, I update the project plan or visit the museum. Generally, I prefer to update the project plan but if there is a project extension, I prefer to visit the museum. If it is afternoon, I prefer to update the project plan over visiting the museum.\""
    },
    {
        "Example Number": 164,
        "Gorgias Code": ":- dynamic concert_nearby/0, networking_event/0\nrule(r1, cycle_to_work, []) :- concert_nearby.\nrule(r2, meditate, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, cycle_to_work).\ncomplement(cycle_to_work, meditate).",
        "NL Translation": "When there is a nearby concert, I either cycle to work or meditate. Generally, I prefer to cycle to work but if there is a networking event, I prefer to meditate."
    },
    {
        "Example Number": 320,
        "Gorgias Code": ":- dynamic community_event/0, vacation_planned/0, school_reunion/0, client_feedback/0, discount_on_flight/0.\nrule(r1, clean_house, []) :- community_event.\nrule(r2, cycle_to_work, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- community_event, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- community_event, vacation_planned, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- discount_on_flight.\nrule(c5, prefer(c4, c3), []).\ncomplement(cycle_to_work, clean_house).\ncomplement(clean_house, cycle_to_work).\ncomplement(community_event, vacation_planned).\ncomplement(vacation_planned, community_event).",
        "NL Translation": "If there is a community event, I clean the house. If I have a vacation planned, I cycle to work. If both the community event and vacation are happening, I prefer to clean the house, but if it's also a good investment, I prefer to cycle to work. If there is a school reunion, I prefer to clean the house, but if there is client feedback, I prefer to cycle to work. If there is a discount on the flight, I prefer to clean the house over cycling to work."
    },
    {
        "Example Number": 368,
        "Gorgias Code": ":- dynamic team_project_due/0, got_bonus/0, unexpected_guest/0.\nrule(r1, go_to(park), []) :- team_project_due.\nrule(r2, travel_abroad, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- team_project_due, got_bonus.\nrule(p2, prefer(r2, r1), []) :- team_project_due, got_bonus, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(travel_abroad, go_to(park)).\ncomplement(go_to(park), travel_abroad).\ncomplement(team_project_due, got_bonus).\ncomplement(got_bonus, team_project_due).",
        "NL Translation": "\"If there is a team project due, I go to the park. If I got a bonus, I travel abroad. If I have both the team project due and got a bonus, I prefer to go to the park; however, if it's also in the afternoon, I prefer to travel abroad. If there is an unexpected guest, I prefer to go to the park over traveling abroad. I can't at the same time travel abroad and go to the park, and team project due and getting a bonus aren't compatible.\""
    },
    {
        "Example Number": 292,
        "Gorgias Code": ":- dynamic got_bonus/0, dusk/0, weekend/0, relationship_break/0, moving_house/0.\nrule(r1, swim_session, []) :- got_bonus.\nrule(r2, cycling_session, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- got_bonus, dusk.\nrule(p2, prefer(r2, r1), []) :- got_bonus, dusk, subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(cycling_session, swim_session).\ncomplement(swim_session, cycling_session).\ncomplement(got_bonus, dusk).\ncomplement(dusk, got_bonus).",
        "NL Translation": "\"If I got a bonus, I have a swim session. If it's dusk, I have a cycling session. If I have both a bonus and it's dusk, I prefer the swim session, however if there's also a subscription due, I prefer the cycling session. If it's the weekend, I prefer the swim session. If there's a relationship break, I prefer the cycling session. If I'm moving house, I prefer the swim session over the cycling session.\""
    },
    {
        "Example Number": 861,
        "Gorgias Code": ":- dynamic school_reunion/0, early_morning/0\nrule(r1, go_to(restaurant), []) :- school_reunion.\nrule(r2, update_project_plan, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, go_to(restaurant)).\ncomplement(go_to(restaurant), update_project_plan).",
        "NL Translation": "When there is a school reunion, I go to a restaurant. If it is early morning, I update the project plan. I generally prefer to go to a restaurant, but if it is early morning, I prefer to update the project plan."
    },
    {
        "Example Number": 272,
        "Gorgias Code": ":- dynamic birthday_today/0, cloudy_day/0, got_bonus/0, hail_storm/0, feeling_sick/0.\nrule(r1, go_shopping, []) :- birthday_today.\nrule(r2, plan_meals, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- birthday_today, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- birthday_today, cloudy_day, boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- feeling_sick.\nrule(c5, prefer(c4, c3), []).\ncomplement(plan_meals, go_shopping).\ncomplement(go_shopping, plan_meals).\ncomplement(birthday_today, cloudy_day).\ncomplement(cloudy_day, birthday_today).",
        "NL Translation": "\"If it is my birthday today, I go shopping. If it is a cloudy day, I plan meals. If it is both my birthday and a cloudy day, I prefer to go shopping; however, if my boss is in the office, I prefer to plan meals. If I got a bonus, I prefer to plan meals over going shopping. If there is a hail storm, I prefer to plan meals over going shopping. If I am feeling sick, I prefer to plan meals over going shopping. If I am feeling sick, I prefer to plan meals over going shopping in case of a bonus. If there is a hail storm, I prefer to plan meals over going shopping in case of a bonus.\""
    },
    {
        "Example Number": 44,
        "Gorgias Code": ":- dynamic dusk/0, networking_event/0.\nrule(r1, attend_workshop, []) :- dusk.\nrule(r2, finish_report, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- dusk, networking_event.\nrule(p2, prefer(r2, r1), []) :- dusk, networking_event, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(finish_report, attend_workshop).\ncomplement(attend_workshop, finish_report).\ncomplement(dusk, networking_event).\ncomplement(networking_event, dusk).",
        "NL Translation": "\"If it is dusk, I attend a workshop. If there is a networking event, I finish a report. If both dusk and a networking event occur, I prefer to attend the workshop. However, if there is also a tax refund, I prefer to finish the report. I cannot attend the workshop and finish the report at the same time, and dusk and a networking event are not compatible.\""
    },
    {
        "Example Number": 789,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, invitation_from_friend/0, unexpected_expense/0, financial_aid/0, boss_in_office/0.\nrule(r1, travel_abroad, []) :- new_restaurant_to_try.\nrule(r2, finish_report, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, invitation_from_friend, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, travel_abroad).\ncomplement(travel_abroad, finish_report).\ncomplement(new_restaurant_to_try, invitation_from_friend).\ncomplement(invitation_from_friend, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I travel abroad. If I receive an invitation from a friend, I finish the report. If both are present, I prefer to travel abroad, but if there is also a friend in town, I prefer to finish the report. If there is an unexpected expense, I prefer to finish the report over traveling abroad. If there is financial aid, I prefer to travel abroad over finishing the report. If the boss is in the office, I prefer to finish the report over traveling abroad. The preferences cascade accordingly.\""
    },
    {
        "Example Number": 598,
        "Gorgias Code": ":- dynamic good_investment/0, unexpected_guest/0.\nrule(r1, yoga_session, []) :- good_investment.\nrule(r2, swim_session, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- good_investment, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- good_investment, unexpected_guest, school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(swim_session, yoga_session).\ncomplement(yoga_session, swim_session).\ncomplement(good_investment, unexpected_guest).\ncomplement(unexpected_guest, good_investment).",
        "NL Translation": "\"If there is a good investment, I have a yoga session. If there is an unexpected guest, I have a swim session. However, if there is both a good investment and an unexpected guest, I prefer to have a yoga session. If there is also a school reunion, I prefer to have a swim session. I cannot have a swim session and a yoga session at the same time, and good investment and unexpected guest are not compatible.\""
    },
    {
        "Example Number": 92,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, afternoon/0, medical_appointment/0, unexpected_guest/0, job_interview/0.\nrule(r1, drive_car, []) :- wedding_anniversary.\nrule(r2, order_taxi, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, afternoon.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, afternoon, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- job_interview.\nrule(c5, prefer(c4, c3), []).\ncomplement(order_taxi, drive_car).\ncomplement(drive_car, order_taxi).\ncomplement(wedding_anniversary, afternoon).\ncomplement(afternoon, wedding_anniversary).",
        "NL Translation": "If there is a wedding anniversary, I drive the car. If it's in the afternoon, I order a taxi. If both the wedding anniversary and afternoon are present, I prefer to drive the car; however, if it's also a low-budget situation, I prefer to order a taxi. If there is a medical appointment, I prefer to order a taxi over driving the car. If there is an unexpected guest, I prefer to drive the car over ordering a taxi. If there is a job interview, I prefer to drive the car over ordering a taxi. If there is a medical appointment, I prefer to order a taxi over driving the car."
    },
    {
        "Example Number": 358,
        "Gorgias Code": ":- dynamic boss_in_office/0, new_restaurant_to_try/0, morning_rush/0, vacation_planned/0, wedding_anniversary/0.\nrule(r1, cook_dinner, []) :- boss_in_office.\nrule(r2, visit_doctor, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, new_restaurant_to_try, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, cook_dinner).\ncomplement(cook_dinner, visit_doctor).\ncomplement(boss_in_office, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, boss_in_office).",
        "NL Translation": "If the boss is in the office, I cook dinner. If there is a new restaurant to try, I visit the doctor. If both the boss is in the office and there is a new restaurant to try, I prefer to cook dinner. If there is an important meeting, I prefer to visit the doctor. If there is a morning rush, I prefer to cook dinner. If there is a vacation planned, I prefer to visit the doctor. If there is a wedding anniversary, I prefer the morning rush over the vacation planned."
    },
    {
        "Example Number": 333,
        "Gorgias Code": ":- dynamic hot_day/0, discount_on_flight/0, unexpected_guest/0, holiday_season/0, medical_appointment/0.\nrule(r1, attend_meeting, []) :- hot_day.\nrule(r2, water_plants, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- hot_day, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- hot_day, discount_on_flight, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- medical_appointment.\nrule(c5, prefer(c4, c3), []).\ncomplement(water_plants, attend_meeting).\ncomplement(attend_meeting, water_plants).\ncomplement(hot_day, discount_on_flight).\ncomplement(discount_on_flight, hot_day).",
        "NL Translation": "If it is a hot day, I attend a meeting. If there is a discount on flights, I water plants. If both conditions are met, I prefer to attend a meeting; however, if I also received a bonus, I prefer to water plants. If an unexpected guest arrives, I prefer to attend a meeting. If it is the holiday season, I prefer to water plants. If I have a medical appointment, I prefer to attend a meeting. If I have a medical appointment, I prefer to water plants over attending a meeting."
    },
    {
        "Example Number": 212,
        "Gorgias Code": ":- dynamic morning_rush/0, community_event/0.\nrule(r1, take_train, []) :- morning_rush.\nrule(r2, cycle_to_work, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- morning_rush, community_event.\nrule(p2, prefer(r2, r1), []) :- morning_rush, community_event, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, take_train).\ncomplement(take_train, cycle_to_work).\ncomplement(morning_rush, community_event).\ncomplement(community_event, morning_rush).",
        "NL Translation": "If there is a morning rush, I take the train. If there is a community event, I cycle to work. If there is both a morning rush and a community event, I prefer to take the train, but if there is also a discount on a flight, I prefer to cycle to work."
    },
    {
        "Example Number": 327,
        "Gorgias Code": ":- dynamic urgent_deadline/0.\nrule(r1, go_to_bar, []) :- urgent_deadline.\nrule(r2, attend_workshop, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_workshop, go_to_bar).\ncomplement(go_to_bar, attend_workshop).",
        "NL Translation": "When there is an urgent deadline, I either go to the bar or attend a workshop. I generally prefer to go to the bar over attending a workshop."
    },
    {
        "Example Number": 832,
        "Gorgias Code": ":- dynamic moving_house/0, new_neighbor/0, cloudy_day/0\nrule(r1, go_shopping, []) :- moving_house.\nrule(r2, go_to(cinema), []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(cinema), go_shopping).\ncomplement(go_shopping, go_to(cinema)).",
        "NL Translation": "\"If I am moving house, I either go shopping or go to the cinema. Generally, I prefer to go shopping, but if there is a new neighbor, I prefer to go to the cinema. However, if it is a cloudy day, I prefer to go shopping. I can't at the same time go shopping and go to the cinema.\""
    },
    {
        "Example Number": 281,
        "Gorgias Code": ":- dynamic party_invitation/0, medical_appointment/0, client_feedback/0\nrule(r1, pay_bills, []) :- party_invitation.\nrule(r2, join_fitness_class, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, pay_bills).\ncomplement(pay_bills, join_fitness_class).",
        "NL Translation": "If there is a party invitation, I pay bills or join a fitness class. Generally, I prefer to pay bills, but if there is a medical appointment, I prefer to join a fitness class. If there is client feedback, I prefer to pay bills over joining a fitness class. I can't pay bills and join a fitness class at the same time."
    },
    {
        "Example Number": 918,
        "Gorgias Code": ":- dynamic family_emergency/0, subscription_due/0, good_investment/0\nrule(r1, take_bus, []) :- family_emergency.\nrule(r2, book_ride_share, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, take_bus).\ncomplement(take_bus, book_ride_share).",
        "NL Translation": "If there is a family emergency, I take the bus or book a ride share. Generally, I prefer to take the bus but if there is a subscription due, I prefer to book a ride share. However, if it is a good investment, I prefer to take the bus over booking a ride share. I cannot take the bus and book a ride share at the same time."
    },
    {
        "Example Number": 378,
        "Gorgias Code": ":- dynamic cloudy_day/0, got_bonus/0, afternoon/0.\nrule(r1, take_picnic, []) :- cloudy_day.\nrule(r2, update_project_plan, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, got_bonus.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, got_bonus, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, take_picnic).\ncomplement(take_picnic, update_project_plan).\ncomplement(cloudy_day, got_bonus).\ncomplement(got_bonus, cloudy_day).",
        "NL Translation": "If it is a cloudy day, I take a picnic. If I got a bonus, I update the project plan. If both conditions are met, I prefer to take a picnic, but if there is also a new restaurant to try, I prefer to update the project plan. In the afternoon, I prefer to update the project plan over taking a picnic."
    },
    {
        "Example Number": 697,
        "Gorgias Code": ":- dynamic afternoon/0, school_reunion/0\nrule(r1, update_project_plan, []) :- afternoon.\nrule(r2, rent_car, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, update_project_plan).\ncomplement(update_project_plan, rent_car).",
        "NL Translation": "When it is afternoon, I update the project plan or rent a car. Generally, I prefer to update the project plan but if there is a school reunion, I prefer to rent a car. I can't at the same time update the project plan and rent a car."
    },
    {
        "Example Number": 437,
        "Gorgias Code": ":- dynamic deadline_missed/0, job_interview/0.\nrule(r1, finish_report, []) :- deadline_missed.\nrule(r2, call_client, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, job_interview.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, job_interview, vacation_planned.\nrule(c1, prefer(p2, p1), []).\ncomplement(call_client, finish_report).\ncomplement(finish_report, call_client).\ncomplement(deadline_missed, job_interview).\ncomplement(job_interview, deadline_missed).",
        "NL Translation": "If the deadline is missed, I finish the report. If there is a job interview, I call the client. However, if both the deadline is missed and there is a job interview, I prefer to call the client. If there is a job interview and a vacation planned, I prefer to finish the report. I cannot at the same time call the client and finish the report, and a missed deadline and a job interview are not compatible."
    },
    {
        "Example Number": 701,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, discount_on_flight/0, medical_appointment/0.\nrule(r1, cycling_session, []) :- wedding_anniversary.\nrule(r2, book_ride_share, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, discount_on_flight, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, cycling_session).\ncomplement(cycling_session, book_ride_share).\ncomplement(wedding_anniversary, discount_on_flight).\ncomplement(discount_on_flight, wedding_anniversary).",
        "NL Translation": "If there is a wedding anniversary, I have a cycling session. If there is a discount on flight, I book a ride share. If there is both a wedding anniversary and a discount on flight, I prefer a cycling session; however, if there is also a job interview, I prefer to book a ride share. I can't at the same time have a cycling session and book a ride share, and wedding anniversary and discount on flight are not compatible. If there is a medical appointment, I prefer to book a ride share over having a cycling session."
    },
    {
        "Example Number": 279,
        "Gorgias Code": ":- dynamic got_bonus/0, medical_appointment/0, snowstorm/0.\nrule(r1, plan_meals, []) :- got_bonus.\nrule(r2, attend_concert, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- got_bonus, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- got_bonus, medical_appointment, client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, plan_meals).\ncomplement(plan_meals, attend_concert).\ncomplement(got_bonus, medical_appointment).\ncomplement(medical_appointment, got_bonus).",
        "NL Translation": "If I got a bonus, I plan meals. If I have a medical appointment, I attend a concert. But if I have both a bonus and a medical appointment, I prefer to plan meals; however, if there is also client feedback, I prefer to attend a concert. I can't at the same time plan meals and attend a concert, and having a bonus and a medical appointment are not compatible. If there is a snowstorm, I prefer to attend a concert over planning meals."
    },
    {
        "Example Number": 30,
        "Gorgias Code": ":- dynamic networking_event/0, vacation_planned/0.\nrule(r1, ride_bike, []) :- networking_event.\nrule(r2, plan_meals, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- networking_event, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- networking_event, vacation_planned, new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, ride_bike).\ncomplement(ride_bike, plan_meals).\ncomplement(networking_event, vacation_planned).\ncomplement(vacation_planned, networking_event).",
        "NL Translation": "If there is a networking event, I ride a bike. If I have a vacation planned, I plan meals. If both a networking event and a vacation are planned, I prefer to ride a bike; however, if there is also a new neighbor, I prefer to plan meals. I cannot ride a bike and plan meals at the same time, and a networking event and a planned vacation are not compatible."
    },
    {
        "Example Number": 441,
        "Gorgias Code": ":- dynamic family_gathering/0, good_weather/0, weekend/0, good_investment/0, holiday_season/0.\nrule(r1, rent_car, []) :- family_gathering.\nrule(r2, visit_doctor, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- family_gathering, good_weather.\nrule(p2, prefer(r2, r1), []) :- family_gathering, good_weather, hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- holiday_season.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, rent_car).\ncomplement(rent_car, visit_doctor).\ncomplement(family_gathering, good_weather).\ncomplement(good_weather, family_gathering).",
        "NL Translation": "\"If there is a family gathering, I rent a car. If the weather is good, I visit the doctor. If both the family gathering and good weather are present, I prefer to rent a car; however, if there is also a hail storm, I prefer to visit the doctor. I can't at the same time rent a car and visit the doctor. If it is the weekend, I prefer to visit the doctor over renting a car. If it is a good investment, I prefer to rent a car over visiting the doctor. If it is the holiday season, I prefer renting a car over visiting the doctor.\""
    },
    {
        "Example Number": 999,
        "Gorgias Code": ":- dynamic friend_in_town/0, night_time/0, lunch_time/0, low_budget/0, urgent_deadline/0.\nrule(r1, morning_run, []) :- friend_in_town.\nrule(r2, buy_groceries, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, night_time.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, night_time, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(buy_groceries, morning_run).\ncomplement(morning_run, buy_groceries).\ncomplement(friend_in_town, night_time).\ncomplement(night_time, friend_in_town).",
        "NL Translation": "\"If a friend is in town, I go for a morning run. If it's night time, I buy groceries. If I have a friend in town and it's night time, I prefer to go for a morning run, but if there is a relationship break, I prefer to buy groceries. I can't at the same time buy groceries and go for a morning run. Additionally, if it's lunch time, I prefer to go for a morning run. If I have a low budget, I prefer to buy groceries. If there is an urgent deadline, I prefer to buy groceries over going for a morning run.\""
    },
    {
        "Example Number": 530,
        "Gorgias Code": ":- dynamic rainy_day/0.\nrule(r1, go_shopping, []) :- rainy_day.\nrule(r2, water_plants, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(water_plants, go_shopping).\ncomplement(go_shopping, water_plants).",
        "NL Translation": "If it is a rainy day, I go shopping or water plants. I generally prefer to go shopping over watering plants. I can't go shopping and water plants at the same time."
    },
    {
        "Example Number": 961,
        "Gorgias Code": ":- dynamic community_event/0, feeling_sick/0, early_morning/0.\nrule(r1, join_fitness_class, []) :- community_event.\nrule(r2, go_shopping, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- community_event, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- community_event, feeling_sick, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, join_fitness_class).\ncomplement(join_fitness_class, go_shopping).\ncomplement(community_event, feeling_sick).\ncomplement(feeling_sick, community_event).",
        "NL Translation": "\"When there is a community event, I join the fitness class. If I am feeling sick, I go shopping. I prefer to join the fitness class over going shopping when there is a community event and I am feeling sick. However, during the holiday season, I prefer to go shopping instead. If it is early morning, I prefer to join the fitness class over going shopping.\""
    },
    {
        "Example Number": 771,
        "Gorgias Code": ":- dynamic extended_work_hours/0, dusk/0.\nrule(r1, review_documents, []) :- extended_work_hours.\nrule(r2, go_to(cinema), []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, dusk.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, dusk, friend_in_town.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(cinema), review_documents).\ncomplement(review_documents, go_to(cinema)).\ncomplement(extended_work_hours, dusk).\ncomplement(dusk, extended_work_hours).",
        "NL Translation": "\"If I have extended work hours, I review documents. If it's dusk, I go to the cinema. But if I have both extended work hours and dusk, I prefer to go to the cinema; however, if there is also a friend in town, I prefer to review documents. I can't at the same time go to the cinema and review documents, and extended work hours and dusk are not compatible.\""
    },
    {
        "Example Number": 847,
        "Gorgias Code": ":- dynamic urgent_deadline/0, job_interview/0\nrule(r1, host_dinner_party, []) :- urgent_deadline.\nrule(r2, swim_session, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(swim_session, host_dinner_party).\ncomplement(host_dinner_party, swim_session).",
        "NL Translation": "When there is an urgent deadline, I either host a dinner party or have a swim session. Generally, I prefer to host a dinner party but if there is a job interview, I prefer to have a swim session. I can't at the same time host a dinner party and have a swim session."
    },
    {
        "Example Number": 5,
        "Gorgias Code": ":- dynamic community_event/0.\nrule(r1, attend_concert, []) :- community_event.\nrule(r2, attend_workshop, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_workshop, attend_concert).\ncomplement(attend_concert, attend_workshop).",
        "NL Translation": "When there is a community event, I attend either a concert or a workshop. I prefer to attend a concert over a workshop. I cannot attend both a concert and a workshop."
    },
    {
        "Example Number": 76,
        "Gorgias Code": ":- dynamic team_project_due/0, humid_day/0, feeling_sick/0.\nrule(r1, prepare_report, []) :- team_project_due.\nrule(r2, meditate, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- team_project_due, humid_day.\nrule(p2, prefer(r2, r1), []) :- team_project_due, humid_day, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, prepare_report).\ncomplement(prepare_report, meditate).\ncomplement(team_project_due, humid_day).\ncomplement(humid_day, team_project_due).",
        "NL Translation": "\"If there is a team project due, I prepare a report. If it's a humid day, I meditate. But if I have both, I prefer to prepare a report; however, if there is also financial aid available, I prefer to meditate. If I'm feeling sick, I prefer to prepare a report over meditating.\""
    },
    {
        "Example Number": 222,
        "Gorgias Code": ":- dynamic discount_on_flight/0, good_investment/0, humid_day/0.\nrule(r1, make_coffee, []) :- discount_on_flight.\nrule(r2, clean_house, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, good_investment.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, good_investment, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(clean_house, make_coffee).\ncomplement(make_coffee, clean_house).\ncomplement(discount_on_flight, good_investment).\ncomplement(good_investment, discount_on_flight).",
        "NL Translation": "If there is a discount on flight, I make coffee or clean the house. Generally, I prefer to make coffee but if it is a good investment, I prefer to clean the house. However, if it is a hot day, I prefer to clean the house. If it is a humid day, I prefer to make coffee. I cannot make coffee and clean the house at the same time, and having a discount on flight and a good investment are not compatible."
    },
    {
        "Example Number": 982,
        "Gorgias Code": ":- dynamic snowstorm/0, holiday_season/0, good_investment/0, windy_day/0, early_morning/0.\nrule(r1, go_to(theater), []) :- snowstorm.\nrule(r2, book_ride_share, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- snowstorm, holiday_season.\nrule(p2, prefer(r2, r1), []) :- snowstorm, holiday_season, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- early_morning.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_ride_share, go_to(theater)).\ncomplement(go_to(theater), book_ride_share).\ncomplement(snowstorm, holiday_season).\ncomplement(holiday_season, snowstorm).",
        "NL Translation": "If there is a snowstorm, I go to the theater. If it's the holiday season, I book a ride share. If there is both a snowstorm and holiday season, I prefer to go to the theater, but if it's also the morning rush, I prefer to book a ride share. I can't at the same time go to the theater and book a ride share, and snowstorm and holiday season are not compatible. If it's a good investment, I prefer to go to the theater. If it's a windy day, I prefer to book a ride share. If it's early morning, I prefer to book a ride share over going to the theater."
    },
    {
        "Example Number": 13,
        "Gorgias Code": ":- dynamic weekend/0, lunch_time/0, new_neighbor/0\nrule(r1, drive_car, []) :- weekend.\nrule(r2, take_bus, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, drive_car).\ncomplement(drive_car, take_bus).",
        "NL Translation": "\"When it is the weekend, I either drive the car or take the bus. Generally, I prefer to drive the car but if it is lunchtime, I prefer to take the bus. However, if there is a new neighbor, I prefer to drive the car. I can't at the same time drive the car and take the bus.\""
    },
    {
        "Example Number": 574,
        "Gorgias Code": ":- dynamic deadline_missed/0, afternoon/0, hail_storm/0.\nrule(r1, visit_doctor, []) :- deadline_missed.\nrule(r2, take_train, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, afternoon.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, afternoon, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, visit_doctor).\ncomplement(visit_doctor, take_train).\ncomplement(deadline_missed, afternoon).\ncomplement(afternoon, deadline_missed).",
        "NL Translation": "If the deadline is missed, I visit the doctor. If it is afternoon, I take the train. I prefer to visit the doctor over taking the train if the deadline is missed and it is afternoon. However, if the deadline is missed, it is afternoon, and there is a discount on a flight, I prefer to take the train. If there is a hail storm, I prefer to take the train over visiting the doctor."
    },
    {
        "Example Number": 283,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, expensive_event/0\nrule(r1, finish_report, []) :- new_restaurant_to_try.\nrule(r2, buy_groceries, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(buy_groceries, finish_report).\ncomplement(finish_report, buy_groceries).",
        "NL Translation": "\"When there is a new restaurant to try, I finish the report or buy groceries. Generally, I prefer to finish the report but if there is an expensive event, I prefer to buy groceries. I can't at the same time finish the report and buy groceries.\""
    },
    {
        "Example Number": 662,
        "Gorgias Code": ":- dynamic networking_event/0, dusk/0, urgent_deadline/0\nrule(r1, morning_run, []) :- networking_event.\nrule(r2, rent_car, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, morning_run).\ncomplement(morning_run, rent_car).",
        "NL Translation": "If there is a networking event, I do a morning run or rent a car. Generally, I prefer doing a morning run but if it is dusk, I prefer to rent a car. However, if there is an urgent deadline, I prefer renting a car over doing a morning run. I cannot do both a morning run and rent a car."
    },
    {
        "Example Number": 814,
        "Gorgias Code": ":- dynamic subscription_due/0, family_gathering/0, team_project_due/0.\nrule(r1, go_gym, []) :- subscription_due.\nrule(r2, make_coffee, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- subscription_due, family_gathering.\nrule(p2, prefer(r2, r1), []) :- subscription_due, family_gathering, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, go_gym).\ncomplement(go_gym, make_coffee).\ncomplement(subscription_due, family_gathering).\ncomplement(family_gathering, subscription_due).",
        "NL Translation": "\"If the subscription is due, I go to the gym. If there is a family gathering, I make coffee. If both the subscription is due and there is a family gathering, I prefer to go to the gym, however if it's also my birthday today I prefer to make coffee. I can't at the same time go to the gym and make coffee, and subscription due and family gathering aren't compatible. If there is a team project due, I prefer to make coffee over going to the gym.\""
    },
    {
        "Example Number": 673,
        "Gorgias Code": ":- dynamic important_meeting/0, community_event/0, morning_rush/0, family_gathering/0, invitation_from_friend/0.\nrule(r1, schedule_meeting, []) :- important_meeting.\nrule(r2, clean_house, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- important_meeting, community_event.\nrule(p2, prefer(r2, r1), []) :- important_meeting, community_event, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(clean_house, schedule_meeting).\ncomplement(schedule_meeting, clean_house).\ncomplement(important_meeting, community_event).\ncomplement(community_event, important_meeting).",
        "NL Translation": "If there is an important meeting, I schedule a meeting. If there is a community event, I clean the house. I prefer to schedule a meeting over cleaning the house if there is an important meeting and a community event, especially if the weather is good. However, if there is a morning rush, I prefer to clean the house. If there is a family gathering, I also prefer to clean the house. If there is an invitation from a friend, I prefer to schedule a meeting over cleaning the house."
    },
    {
        "Example Number": 468,
        "Gorgias Code": ":- dynamic important_meeting/0, low_budget/0.\nrule(r1, read_book, []) :- important_meeting.\nrule(r2, organize_workspace, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- important_meeting, low_budget.\nrule(p2, prefer(r2, r1), []) :- important_meeting, low_budget, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, read_book).\ncomplement(read_book, organize_workspace).\ncomplement(important_meeting, low_budget).\ncomplement(low_budget, important_meeting).",
        "NL Translation": "\"If there is an important meeting, I read a book. If there is a low budget, I organize my workspace. If both an important meeting and low budget are present, I prefer to read a book; however, if there is also a medical appointment, I prefer to organize my workspace. I cannot at the same time read a book and organize my workspace, and important meeting and low budget are not compatible.\""
    },
    {
        "Example Number": 301,
        "Gorgias Code": ":- dynamic deadline_missed/0, job_interview/0, expensive_event/0\nrule(r1, visit_museum, []) :- deadline_missed.\nrule(r2, finish_report, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, visit_museum).\ncomplement(visit_museum, finish_report).",
        "NL Translation": "If the deadline is missed, I visit the museum or finish the report. Generally, I prefer to visit the museum but if there is a job interview, I prefer to finish the report. However, if there is an expensive event, I prefer to finish the report over visiting the museum. I cannot both finish the report and visit the museum."
    },
    {
        "Example Number": 925,
        "Gorgias Code": ":- dynamic birthday_today/0, vacation_planned/0, community_event/0.\nrule(r1, yoga_session, []) :- birthday_today.\nrule(r2, visit_museum, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- birthday_today, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- birthday_today, vacation_planned, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, yoga_session).\ncomplement(yoga_session, visit_museum).\ncomplement(birthday_today, vacation_planned).\ncomplement(vacation_planned, birthday_today).",
        "NL Translation": "If it is your birthday today, you will attend a yoga session. If you have a planned vacation, you will visit a museum. If it is both your birthday and you have a planned vacation, you prefer to attend a yoga session; however, if it is also dusk, you prefer to visit a museum. You cannot attend both a yoga session and visit a museum, and having a birthday today and a planned vacation are not compatible. If there is a community event, you prefer to attend a yoga session over visiting a museum."
    },
    {
        "Example Number": 911,
        "Gorgias Code": ":- dynamic new_neighbor/0, deadline_missed/0, weekend/0, feeling_sick/0, moving_house/0.\nrule(r1, host_dinner_party, []) :- new_neighbor.\nrule(r2, review_documents, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, deadline_missed, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(review_documents, host_dinner_party).\ncomplement(host_dinner_party, review_documents).\ncomplement(new_neighbor, deadline_missed).\ncomplement(deadline_missed, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I host a dinner party. If a deadline is missed, I review documents. If both conditions are met, I prefer to host a dinner party; however, if it is also the holiday season, I prefer to review documents. If it's the weekend, I prefer to host a dinner party. If I'm feeling sick, I prefer to review documents. If I'm moving house, I prefer to review documents over hosting a dinner party."
    },
    {
        "Example Number": 719,
        "Gorgias Code": ":- dynamic urgent_deadline/0, new_neighbor/0.\nrule(r1, call_client, []) :- urgent_deadline.\nrule(r2, dispose_trash, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, new_neighbor, dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, call_client).\ncomplement(call_client, dispose_trash).\ncomplement(urgent_deadline, new_neighbor).\ncomplement(new_neighbor, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I call the client. If there is a new neighbor, I dispose of the trash. If there is both an urgent deadline and a new neighbor, I prefer to call the client. However, if there is an urgent deadline, a new neighbor, and it is dusk, I prefer to dispose of the trash."
    },
    {
        "Example Number": 784,
        "Gorgias Code": ":- dynamic moving_house/0, new_neighbor/0, night_time/0\nrule(r1, cook_dinner, []) :- moving_house.\nrule(r2, morning_run, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, cook_dinner).\ncomplement(cook_dinner, morning_run).",
        "NL Translation": "\"If I am moving house, I cook dinner or go for a morning run. Generally, I prefer to cook dinner but if there is a new neighbor, I prefer to go for a morning run. However, if it is night time, I prefer to go for a morning run over cooking dinner.\""
    },
    {
        "Example Number": 217,
        "Gorgias Code": ":- dynamic medical_appointment/0, moving_house/0\nrule(r1, morning_run, []) :- medical_appointment.\nrule(r2, water_plants, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, morning_run).\ncomplement(morning_run, water_plants).",
        "NL Translation": "If I have a medical appointment, I either go for a morning run or water the plants. Generally, I prefer to go for a morning run but if I am moving house, I prefer to water the plants. I can't at the same time go for a morning run and water the plants."
    },
    {
        "Example Number": 637,
        "Gorgias Code": ":- dynamic urgent_deadline/0, networking_event/0, financial_aid/0.\nrule(r1, host_dinner_party, []) :- urgent_deadline.\nrule(r2, reply_emails, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, networking_event.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, networking_event, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, host_dinner_party).\ncomplement(host_dinner_party, reply_emails).\ncomplement(urgent_deadline, networking_event).\ncomplement(networking_event, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I host a dinner party. If there is a networking event, I reply to emails. If both the urgent deadline and networking event are present, I prefer to host a dinner party; however, if I also received a bonus, I prefer to reply to emails. I cannot host a dinner party and reply to emails at the same time, and urgent deadlines and networking events are not compatible. If there is financial aid, I prefer to reply to emails over hosting a dinner party."
    },
    {
        "Example Number": 887,
        "Gorgias Code": ":- dynamic school_reunion/0, weekend/0\nrule(r1, finish_report, []) :- school_reunion.\nrule(r2, buy_groceries, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(buy_groceries, finish_report).\ncomplement(finish_report, buy_groceries).",
        "NL Translation": "\"When there is a school reunion, I finish the report. If it's the weekend, I buy groceries. I generally prefer to finish the report over buying groceries on the weekend.\""
    },
    {
        "Example Number": 548,
        "Gorgias Code": ":- dynamic financial_aid/0, snowstorm/0\nrule(r1, join_fitness_class, []) :- financial_aid.\nrule(r2, rent_car, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, join_fitness_class).\ncomplement(join_fitness_class, rent_car).",
        "NL Translation": "\"When I have financial aid, I join the fitness class. When I have financial aid, I rent a car. If there is a snowstorm, I prefer to rent a car. I can't at the same time rent a car and join the fitness class.\""
    },
    {
        "Example Number": 62,
        "Gorgias Code": ":- dynamic client_feedback/0, weekend/0\nrule(r1, explore_city, []) :- client_feedback.\nrule(r2, cycle_to_work, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, explore_city).\ncomplement(explore_city, cycle_to_work).",
        "NL Translation": "When there is client feedback, I explore the city. When there is client feedback, I cycle to work. Generally, I prefer to explore the city but if it is the weekend, I prefer to cycle to work. I cannot explore the city and cycle to work at the same time."
    },
    {
        "Example Number": 695,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, evening_walk, []) :- good_investment.\nrule(r2, reply_emails, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(reply_emails, evening_walk).\ncomplement(evening_walk, reply_emails).",
        "NL Translation": "When there is a good investment, I either go for an evening walk or reply to emails. I generally prefer to go for an evening walk over replying to emails."
    },
    {
        "Example Number": 813,
        "Gorgias Code": ":- dynamic feeling_sick/0, boss_in_office/0, weekend/0\nrule(r1, visit_family, []) :- feeling_sick.\nrule(r2, visit_doctor, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, visit_family).\ncomplement(visit_family, visit_doctor).",
        "NL Translation": "If feeling sick, visit family or visit the doctor. Generally prefer to visit family but if the boss is in office, prefer to visit the doctor. Prefer to visit the doctor over visiting family if the boss is in the office, but prefer to visit family over the doctor on the weekend."
    },
    {
        "Example Number": 543,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, call_client, []) :- relationship_break.\nrule(r2, visit_family, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, call_client).\ncomplement(call_client, visit_family).",
        "NL Translation": "\"When there is a relationship break, I either call the client or visit family. Generally, I prefer to call the client.\""
    },
    {
        "Example Number": 868,
        "Gorgias Code": ":- dynamic unexpected_expense/0, humid_day/0, night_time/0, expensive_event/0, hot_day/0.\nrule(r1, update_project_plan, []) :- unexpected_expense.\nrule(r2, review_documents, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, humid_day.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, humid_day, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hot_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(review_documents, update_project_plan).\ncomplement(update_project_plan, review_documents).\ncomplement(unexpected_expense, humid_day).\ncomplement(humid_day, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I update the project plan. On a humid day, I review documents. I prefer to update the project plan over reviewing documents if there is an unexpected expense and it's a humid day. However, if there is an unexpected expense, it's a humid day, and there is an important meeting, I prefer to review documents. I prefer to review documents over updating the project plan at night. I prefer to update the project plan over reviewing documents if there is an expensive event. I prefer to review documents over updating the project plan on a hot day."
    },
    {
        "Example Number": 806,
        "Gorgias Code": ":- dynamic unexpected_expense/0, tax_refund/0.\nrule(r1, go_to(theater), []) :- unexpected_expense.\nrule(r2, cycle_to_work, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, tax_refund.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, tax_refund, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, go_to(theater)).\ncomplement(go_to(theater), cycle_to_work).\ncomplement(unexpected_expense, tax_refund).\ncomplement(tax_refund, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I go to the theater. If I receive a tax refund, I cycle to work. If both the unexpected expense and tax refund occur, I prefer to go to the theater; however, if there is also an urgent deadline, I prefer to cycle to work. Cycling to work and going to the theater are not compatible, and unexpected expenses and tax refunds are not compatible."
    },
    {
        "Example Number": 184,
        "Gorgias Code": ":- dynamic family_emergency/0, hot_day/0\nrule(r1, schedule_meeting, []) :- family_emergency.\nrule(r2, travel_abroad, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hot_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(travel_abroad, schedule_meeting).\ncomplement(schedule_meeting, travel_abroad).",
        "NL Translation": "If there is a family emergency, I schedule a meeting. If there is a family emergency and it is a hot day, I prefer to travel abroad."
    },
    {
        "Example Number": 785,
        "Gorgias Code": ":- dynamic good_weather/0, feeling_sick/0, humid_day/0, networking_event/0, low_budget/0.\nrule(r1, do_laundry, []) :- good_weather.\nrule(r2, cycle_to_work, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- good_weather, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- good_weather, feeling_sick, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- low_budget.\nrule(c5, prefer(c4, c3), []).\ncomplement(cycle_to_work, do_laundry).\ncomplement(do_laundry, cycle_to_work).\ncomplement(good_weather, feeling_sick).\ncomplement(feeling_sick, good_weather).",
        "NL Translation": "\"If it's good weather, I do laundry. If I'm feeling sick, I cycle to work. However, if both conditions are met, I prefer to do laundry; unless there is a vacation planned, then I prefer to cycle to work. If it's a humid day, I prefer to cycle to work. If there is a networking event, I prefer to do laundry. If I have a low budget, I prefer to do laundry over cycling to work. I can't do laundry and cycle to work at the same time, and good weather and feeling sick are not compatible.\""
    },
    {
        "Example Number": 237,
        "Gorgias Code": ":- dynamic unexpected_expense/0, deadline_missed/0, concert_nearby/0\nrule(r1, travel_abroad, []) :- unexpected_expense.\nrule(r2, visit_doctor, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, travel_abroad).\ncomplement(travel_abroad, visit_doctor).",
        "NL Translation": "\"If there is an unexpected expense, I travel abroad or visit the doctor. Generally, I prefer to travel abroad but if there is a missed deadline, I prefer to visit the doctor. However, if there is a concert nearby, I prefer to travel abroad. I can't at the same time travel abroad and visit the doctor.\""
    },
    {
        "Example Number": 508,
        "Gorgias Code": ":- dynamic extended_work_hours/0, moving_house/0, hot_day/0.\nrule(r1, buy_groceries, []) :- extended_work_hours.\nrule(r2, yoga_session, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, moving_house.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, moving_house, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, buy_groceries).\ncomplement(buy_groceries, yoga_session).\ncomplement(extended_work_hours, moving_house).\ncomplement(moving_house, extended_work_hours).",
        "NL Translation": "\"If I have extended work hours, I buy groceries. If I am moving house, I attend a yoga session. If I have both extended work hours and moving house, I prefer to buy groceries; however, if there is a project extension as well, I prefer to attend a yoga session. Additionally, if it is a hot day, I prefer to buy groceries over attending a yoga session. I cannot buy groceries and attend a yoga session at the same time, and extended work hours and moving house are not compatible.\""
    },
    {
        "Example Number": 69,
        "Gorgias Code": ":- dynamic good_investment/0, unexpected_guest/0, relationship_break/0\nrule(r1, plan_meals, []) :- good_investment.\nrule(r2, prepare_report, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, plan_meals).\ncomplement(plan_meals, prepare_report).",
        "NL Translation": "If there is a good investment, I plan meals or prepare a report. Generally, I prefer to plan meals but if there is an unexpected guest, I prefer to prepare a report. However, if there is a relationship break, I prefer to plan meals instead of preparing a report. I cannot plan meals and prepare a report at the same time."
    },
    {
        "Example Number": 84,
        "Gorgias Code": ":- dynamic concert_nearby/0, morning_rush/0.\nrule(r1, go_to(restaurant), []) :- concert_nearby.\nrule(r2, take_train, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, morning_rush.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, morning_rush, dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, go_to(restaurant)).\ncomplement(go_to(restaurant), take_train).\ncomplement(concert_nearby, morning_rush).\ncomplement(morning_rush, concert_nearby).",
        "NL Translation": "If there is a nearby concert, I go to a restaurant. If there is a morning rush, I take the train. If there is both a nearby concert and a morning rush, I prefer to go to a restaurant; however, if it's also dusk, I prefer to take the train. I can't at the same time go to a restaurant and take the train, and concert nearby and morning rush aren't compatible."
    },
    {
        "Example Number": 807,
        "Gorgias Code": ":- dynamic networking_event/0, boss_in_office/0, early_morning/0\nrule(r1, review_documents, []) :- networking_event.\nrule(r2, yoga_session, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, review_documents).\ncomplement(review_documents, yoga_session).",
        "NL Translation": "\"If there is a networking event, I review documents or attend a yoga session. Generally, I prefer to review documents but if the boss is in the office, I prefer to attend a yoga session. If it is early morning, I prefer to review documents over attending a yoga session.\""
    },
    {
        "Example Number": 757,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, organize_workspace, []) :- relationship_break.\nrule(r2, meditate, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(meditate, organize_workspace).\ncomplement(organize_workspace, meditate).",
        "NL Translation": "\"When there is a relationship break, I either organize my workspace or meditate. I generally prefer to organize my workspace over meditating.\""
    },
    {
        "Example Number": 936,
        "Gorgias Code": ":- dynamic windy_day/0, expensive_event/0, snowstorm/0.\nrule(r1, morning_run, []) :- windy_day.\nrule(r2, evening_walk, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- windy_day, expensive_event.\nrule(p2, prefer(r2, r1), []) :- windy_day, expensive_event, cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(evening_walk, morning_run).\ncomplement(morning_run, evening_walk).\ncomplement(windy_day, expensive_event).\ncomplement(expensive_event, windy_day).",
        "NL Translation": "\"If it is a windy day, I go for a morning run. If there is an expensive event, I go for an evening walk. If both conditions are met, I prefer the morning run; however, if it is also a cloudy day, I prefer the evening walk. In case of a snowstorm, I prefer the morning run over the evening walk.\""
    },
    {
        "Example Number": 130,
        "Gorgias Code": ":- dynamic rainy_day/0, dusk/0, new_restaurant_to_try/0\nrule(r1, take_train, []) :- rainy_day.\nrule(r2, finish_report, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, take_train).\ncomplement(take_train, finish_report).",
        "NL Translation": "\"If it is a rainy day, I take the train or finish the report. Generally, I prefer to take the train but if it is dusk, I prefer to finish the report. If there is a new restaurant to try, I prefer to finish the report over taking the train. I can't at the same time take the train and finish the report.\""
    },
    {
        "Example Number": 464,
        "Gorgias Code": ":- dynamic invitation_from_friend/0.\nrule(r1, go_to(cinema), []) :- invitation_from_friend.\nrule(r2, host_dinner_party, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, go_to(cinema)).\ncomplement(go_to(cinema), host_dinner_party).",
        "NL Translation": "When there is an invitation from a friend, I either go to the cinema or host a dinner party. Generally, I prefer to go to the cinema over hosting a dinner party. I cannot go to the cinema and host a dinner party at the same time."
    },
    {
        "Example Number": 799,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, go_shopping, []) :- lunch_time.\nrule(r2, visit_doctor, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_doctor, go_shopping).\ncomplement(go_shopping, visit_doctor).",
        "NL Translation": "When it is lunchtime, I go shopping or visit the doctor. I prefer to go shopping over visiting the doctor. I cannot go shopping and visit the doctor at the same time."
    },
    {
        "Example Number": 165,
        "Gorgias Code": ":- dynamic family_gathering/0, project_extension/0\nrule(r1, go_to(restaurant), []) :- family_gathering.\nrule(r2, host_dinner_party, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, go_to(restaurant)).\ncomplement(go_to(restaurant), host_dinner_party).",
        "NL Translation": "If there is a family gathering, I go to a restaurant or host a dinner party. Generally, I prefer to go to a restaurant but if there is a project extension, I prefer to host a dinner party."
    },
    {
        "Example Number": 139,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, buy_groceries, []) :- relationship_break.\nrule(r2, host_dinner_party, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, buy_groceries).\ncomplement(buy_groceries, host_dinner_party).",
        "NL Translation": "\"When there is a relationship break, I buy groceries or host a dinner party. I prefer to buy groceries over hosting a dinner party.\""
    },
    {
        "Example Number": 119,
        "Gorgias Code": ":- dynamic good_weather/0, vacation_planned/0.\nrule(r1, order_taxi, []) :- good_weather.\nrule(r2, meditate, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- good_weather, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- good_weather, vacation_planned, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, order_taxi).\ncomplement(order_taxi, meditate).\ncomplement(good_weather, vacation_planned).\ncomplement(vacation_planned, good_weather).",
        "NL Translation": "\"If the weather is good, I order a taxi. If I have a planned vacation, I meditate. However, if both conditions are met, I prefer to order a taxi, but if there is also an urgent deadline, I prefer to meditate.\""
    },
    {
        "Example Number": 70,
        "Gorgias Code": ":- dynamic medical_appointment/0, unexpected_guest/0, new_neighbor/0.\nrule(r1, take_train, []) :- medical_appointment.\nrule(r2, meditate, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, unexpected_guest, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, take_train).\ncomplement(take_train, meditate).\ncomplement(medical_appointment, unexpected_guest).\ncomplement(unexpected_guest, medical_appointment).",
        "NL Translation": "If there is a medical appointment, I take the train. If there is an unexpected guest, I meditate. If I have both a medical appointment and an unexpected guest, I prefer to take the train; however, if there is also a relationship break, I prefer to meditate. If there is a new neighbor, I prefer to take the train over meditating."
    },
    {
        "Example Number": 318,
        "Gorgias Code": ":- dynamic hail_storm/0, urgent_deadline/0, invitation_from_friend/0.\nrule(r1, evening_walk, []) :- hail_storm.\nrule(r2, organize_workspace, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- hail_storm, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- hail_storm, urgent_deadline, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, evening_walk).\ncomplement(evening_walk, organize_workspace).\ncomplement(hail_storm, urgent_deadline).\ncomplement(urgent_deadline, hail_storm).",
        "NL Translation": "If there is a hail storm, I go for an evening walk. If there is an urgent deadline, I organize my workspace. If both the hail storm and urgent deadline occur, I prefer to go for an evening walk. However, if there is also a team project due, I prefer to organize my workspace. If there is an invitation from a friend, I prefer to go for an evening walk over organizing my workspace."
    },
    {
        "Example Number": 386,
        "Gorgias Code": ":- dynamic afternoon/0.\nrule(r1, go_to(restaurant), []) :- afternoon.\nrule(r2, plan_meals, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\ncomplement(plan_meals, go_to(restaurant)).\ncomplement(go_to(restaurant), plan_meals).",
        "NL Translation": "When it is afternoon, I either go to a restaurant or plan meals. Generally, I prefer to go to a restaurant over planning meals. I cannot go to a restaurant and plan meals at the same time."
    },
    {
        "Example Number": 248,
        "Gorgias Code": ":- dynamic holiday_season/0, new_restaurant_to_try/0, discount_on_flight/0.\nrule(r1, visit_doctor, []) :- holiday_season.\nrule(r2, cook_dinner, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- holiday_season, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- holiday_season, new_restaurant_to_try, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, visit_doctor).\ncomplement(visit_doctor, cook_dinner).\ncomplement(holiday_season, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, holiday_season).",
        "NL Translation": "\"When it is holiday season, I visit the doctor. If there is a new restaurant to try, I cook dinner. If both holiday season and new restaurant to try are present, I prefer to visit the doctor; however, if it is also dusk, I prefer to cook dinner. I cannot cook dinner and visit the doctor at the same time, and holiday season and new restaurant to try are not compatible. Additionally, if there is a discount on flight, I prefer to cook dinner over visiting the doctor.\""
    },
    {
        "Example Number": 346,
        "Gorgias Code": ":- dynamic family_emergency/0, unexpected_guest/0, morning_rush/0.\nrule(r1, book_ride_share, []) :- family_emergency.\nrule(r2, attend_meeting, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- family_emergency, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- family_emergency, unexpected_guest, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_meeting, book_ride_share).\ncomplement(book_ride_share, attend_meeting).\ncomplement(family_emergency, unexpected_guest).\ncomplement(unexpected_guest, family_emergency).",
        "NL Translation": "If there is a family emergency, I book a ride share. If there is an unexpected guest, I attend a meeting. If both a family emergency and unexpected guest occur, I prefer to book a ride share; however, if there is also financial aid available, I prefer to attend the meeting. I cannot book a ride share and attend a meeting at the same time, and family emergency and unexpected guest are not compatible. If there is a morning rush, I prefer to attend the meeting over booking a ride share."
    },
    {
        "Example Number": 766,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, morning_rush/0.\nrule(r1, water_plants, []) :- new_restaurant_to_try.\nrule(r2, cycle_to_work, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, morning_rush.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, morning_rush, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, water_plants).\ncomplement(water_plants, cycle_to_work).\ncomplement(new_restaurant_to_try, morning_rush).\ncomplement(morning_rush, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I water plants. If there is a morning rush, I cycle to work. If there is both a new restaurant to try and a morning rush, I prefer to water plants; however, if it is also lunch time, I prefer to cycle to work.\""
    },
    {
        "Example Number": 167,
        "Gorgias Code": ":- dynamic moving_house/0, good_investment/0.\nrule(r1, join_fitness_class, []) :- moving_house.\nrule(r2, water_plants, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- moving_house, good_investment.\nrule(p2, prefer(r2, r1), []) :- moving_house, good_investment, networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, join_fitness_class).\ncomplement(join_fitness_class, water_plants).\ncomplement(moving_house, good_investment).\ncomplement(good_investment, moving_house).",
        "NL Translation": "If I am moving house, I join a fitness class. If it's a good investment, I water plants. If both moving house and good investment are true, I prefer to join a fitness class; however, if there is also a networking event, I prefer to water plants. I cannot at the same time water plants and join a fitness class, and moving house and good investment are not compatible."
    },
    {
        "Example Number": 718,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, family_gathering/0.\nrule(r1, make_coffee, []) :- invitation_from_friend.\nrule(r2, plan_meals, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, family_gathering.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, family_gathering, networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, make_coffee).\ncomplement(make_coffee, plan_meals).\ncomplement(invitation_from_friend, family_gathering).\ncomplement(family_gathering, invitation_from_friend).",
        "NL Translation": "\"If there is an invitation from a friend, I make coffee. If there is a family gathering, I plan meals. But if there is both an invitation from a friend and a family gathering, I prefer to plan meals. However, if there is also a networking event, I prefer to make coffee. I can't at the same time make coffee and plan meals, and invitation from a friend and family gathering are not compatible.\""
    },
    {
        "Example Number": 860,
        "Gorgias Code": ":- dynamic good_weather/0, networking_event/0, hail_storm/0.\nrule(r1, go_shopping, []) :- good_weather.\nrule(r2, meditate, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- good_weather, networking_event.\nrule(p2, prefer(r2, r1), []) :- good_weather, networking_event, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, go_shopping).\ncomplement(go_shopping, meditate).\ncomplement(good_weather, networking_event).\ncomplement(networking_event, good_weather).",
        "NL Translation": "If it is good weather, I go shopping. If there is a networking event, I meditate. I prefer to go shopping if it is good weather and there is a networking event. However, if it is a humid day, I prefer to meditate. If there is a hail storm, I prefer to meditate over going shopping."
    },
    {
        "Example Number": 669,
        "Gorgias Code": ":- dynamic team_project_due/0, boss_in_office/0\nrule(r1, attend_meeting, []) :- team_project_due.\nrule(r2, go_shopping, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, attend_meeting).\ncomplement(attend_meeting, go_shopping).",
        "NL Translation": "If there is a team project due, I attend a meeting. If the boss is in the office, I prefer to go shopping. I cannot attend a meeting and go shopping at the same time."
    },
    {
        "Example Number": 869,
        "Gorgias Code": ":- dynamic vacation_planned/0.\nrule(r1, attend_meeting, []) :- vacation_planned.\nrule(r2, go_shopping, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_shopping, attend_meeting).\ncomplement(attend_meeting, go_shopping).",
        "NL Translation": "When I have a vacation planned, I attend a meeting. When I have a vacation planned, I go shopping. I prefer to attend a meeting over going shopping. I can't go shopping and attend a meeting at the same time."
    },
    {
        "Example Number": 453,
        "Gorgias Code": ":- dynamic birthday_today/0, family_emergency/0, school_reunion/0.\nrule(r1, clean_house, []) :- birthday_today.\nrule(r2, attend_workshop, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- birthday_today, family_emergency.\nrule(p2, prefer(r2, r1), []) :- birthday_today, family_emergency, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, clean_house).\ncomplement(clean_house, attend_workshop).\ncomplement(birthday_today, family_emergency).\ncomplement(family_emergency, birthday_today).",
        "NL Translation": "If it is your birthday today, you clean the house. If there is a family emergency, you attend a workshop. If it's both your birthday and a family emergency, you prefer to clean the house; however, if there is also financial aid available, you prefer to attend the workshop. If there is a school reunion, you prefer to clean the house over attending the workshop."
    },
    {
        "Example Number": 680,
        "Gorgias Code": ":- dynamic rainy_day/0, family_emergency/0\nrule(r1, clean_house, []) :- rainy_day.\nrule(r2, review_documents, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(review_documents, clean_house).\ncomplement(clean_house, review_documents).",
        "NL Translation": "If it is a rainy day, I clean the house or review documents. Generally, I prefer to clean the house, but if there is a family emergency, I prefer to review documents. I cannot clean the house and review documents at the same time."
    },
    {
        "Example Number": 355,
        "Gorgias Code": ":- dynamic cloudy_day/0.\nrule(r1, finish_report, []) :- cloudy_day.\nrule(r2, read_book, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(read_book, finish_report).\ncomplement(finish_report, read_book).",
        "NL Translation": "When it is a cloudy day, I finish the report or read a book. Generally, I prefer to finish the report over reading a book. I cannot finish the report and read a book at the same time."
    },
    {
        "Example Number": 66,
        "Gorgias Code": ":- dynamic new_neighbor/0, moving_house/0\nrule(r1, go_shopping, []) :- new_neighbor.\nrule(r2, reply_emails, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, go_shopping).\ncomplement(go_shopping, reply_emails).",
        "NL Translation": "\"When there is a new neighbor, I either go shopping or reply to emails. Generally, I prefer to go shopping but if I am moving house, I prefer to reply to emails. I cannot go shopping and reply to emails at the same time.\""
    },
    {
        "Example Number": 65,
        "Gorgias Code": ":- dynamic early_morning/0, hot_day/0, morning_rush/0, low_budget/0, wedding_anniversary/0.\nrule(r1, submit_timesheet, []) :- early_morning.\nrule(r2, do_laundry, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- early_morning, hot_day.\nrule(p2, prefer(r2, r1), []) :- early_morning, hot_day, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(do_laundry, submit_timesheet).\ncomplement(submit_timesheet, do_laundry).\ncomplement(early_morning, hot_day).\ncomplement(hot_day, early_morning).",
        "NL Translation": "\"If it is early morning, I submit the timesheet. If it is a hot day, I do laundry. If it is both early morning and a hot day, I prefer to submit the timesheet; however, if it is also the holiday season, I prefer to do laundry. If there is a morning rush, I prefer to submit the timesheet. If there is a low budget, I prefer to do laundry. If it is a wedding anniversary, I prefer to submit the timesheet. If it is a wedding anniversary, I prefer to submit the timesheet over doing laundry.\""
    },
    {
        "Example Number": 734,
        "Gorgias Code": ":- dynamic project_extension/0, relationship_break/0, unexpected_guest/0, networking_event/0, invitation_from_friend/0.\nrule(r1, travel_abroad, []) :- project_extension.\nrule(r2, cook_dinner, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- project_extension, relationship_break.\nrule(p2, prefer(r2, r1), []) :- project_extension, relationship_break, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(cook_dinner, travel_abroad).\ncomplement(travel_abroad, cook_dinner).\ncomplement(project_extension, relationship_break).\ncomplement(relationship_break, project_extension).",
        "NL Translation": "\"If there is a project extension, I travel abroad. If there is a relationship break, I cook dinner. If both project extension and relationship break occur, I prefer to travel abroad, but if there is also a family emergency, I prefer to cook dinner. If there is an unexpected guest, I prefer to cook dinner. If there is a networking event, I prefer to travel abroad. If there is an invitation from a friend, I prefer to cook dinner.\""
    },
    {
        "Example Number": 391,
        "Gorgias Code": ":- dynamic snowstorm/0.\nrule(r1, book_ride_share, []) :- snowstorm.\nrule(r2, use_subway, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\ncomplement(use_subway, book_ride_share).\ncomplement(book_ride_share, use_subway).",
        "NL Translation": "When there is a snowstorm, I book a ride share or use the subway. Generally, I prefer to book a ride share over using the subway."
    },
    {
        "Example Number": 923,
        "Gorgias Code": ":- dynamic got_bonus/0, party_invitation/0, family_emergency/0, early_morning/0, cloudy_day/0.\nrule(r1, go_gym, []) :- got_bonus.\nrule(r2, visit_doctor, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- got_bonus, party_invitation.\nrule(p2, prefer(r2, r1), []) :- got_bonus, party_invitation, hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- cloudy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, go_gym).\ncomplement(go_gym, visit_doctor).\ncomplement(got_bonus, party_invitation).\ncomplement(party_invitation, got_bonus).",
        "NL Translation": "\"If I got a bonus, I go to the gym. If I have a party invitation, I visit the doctor. But if I have both a bonus and a party invitation, I prefer to go to the gym. However, if there is a family emergency, I prefer to visit the doctor. Also, if it's early morning, I prefer to go to the gym. I can't at the same time go to the gym and visit the doctor, have a bonus and a party invitation, or have a family emergency and prefer to go to the gym. Cloudy day is preferred over family emergency, and family emergency is preferred over having a bonus and a party invitation.\""
    },
    {
        "Example Number": 613,
        "Gorgias Code": ":- dynamic snowstorm/0, good_weather/0.\nrule(r1, water_plants, []) :- snowstorm.\nrule(r2, review_documents, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- snowstorm, good_weather.\nrule(p2, prefer(r2, r1), []) :- snowstorm, good_weather, job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(review_documents, water_plants).\ncomplement(water_plants, review_documents).\ncomplement(snowstorm, good_weather).\ncomplement(good_weather, snowstorm).",
        "NL Translation": "If there is a snowstorm, I water plants. If the weather is good, I review documents. However, if there is both a snowstorm and good weather, I prefer to water plants; but if there is also a job interview, I prefer to review documents."
    },
    {
        "Example Number": 94,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, unexpected_expense/0, family_emergency/0, rainy_day/0, expensive_event/0.\nrule(r1, reply_emails, []) :- new_restaurant_to_try.\nrule(r2, visit_family, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, unexpected_expense, new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- expensive_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_family, reply_emails).\ncomplement(reply_emails, visit_family).\ncomplement(new_restaurant_to_try, unexpected_expense).\ncomplement(unexpected_expense, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I reply to emails. If there is an unexpected expense, I visit family. If both occur, I prefer to reply to emails; however, if there is also a new neighbor, I prefer to visit family. In case of a family emergency, I prefer to reply to emails. In case of a rainy day, I prefer to visit family. In case of an expensive event, I prefer to visit family over replying to emails.\""
    },
    {
        "Example Number": 429,
        "Gorgias Code": ":- dynamic afternoon/0, windy_day/0.\nrule(r1, prepare_report, []) :- afternoon.\nrule(r2, attend_meeting, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- afternoon, windy_day.\nrule(p2, prefer(r2, r1), []) :- afternoon, windy_day, humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, prepare_report).\ncomplement(prepare_report, attend_meeting).\ncomplement(afternoon, windy_day).\ncomplement(windy_day, afternoon).",
        "NL Translation": "\"If it is afternoon, I prepare a report. If it is a windy day, I attend a meeting. If it is both afternoon and a windy day, I prefer to prepare a report. However, if it is also a humid day, I prefer to attend a meeting. I cannot at the same time prepare a report and attend a meeting, and afternoon and windy day are not compatible.\""
    },
    {
        "Example Number": 262,
        "Gorgias Code": ":- dynamic night_time/0, rainy_day/0, subscription_due/0\nrule(r1, clean_house, []) :- night_time.\nrule(r2, rent_car, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, clean_house).\ncomplement(clean_house, rent_car).",
        "NL Translation": "If it is night time, I clean the house or rent a car. Generally, I prefer to clean the house but if it is a rainy day, I prefer to rent a car. However, if the subscription is due, I prefer to clean the house. I cannot clean the house and rent a car at the same time."
    },
    {
        "Example Number": 609,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, schedule_meeting, []) :- job_interview.\nrule(r2, go_to(theater), []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(theater), schedule_meeting).\ncomplement(schedule_meeting, go_to(theater)).",
        "NL Translation": "When there is a job interview, I schedule a meeting. If there is a job interview, I go to the theater. I prefer to schedule a meeting over going to the theater. I can't at the same time go to the theater and schedule a meeting."
    },
    {
        "Example Number": 347,
        "Gorgias Code": ":- dynamic night_time/0, moving_house/0, holiday_season/0, humid_day/0, friend_in_town/0.\nrule(r1, cycle_to_work, []) :- night_time.\nrule(r2, buy_groceries, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- night_time, moving_house.\nrule(p2, prefer(r2, r1), []) :- night_time, moving_house, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- friend_in_town.\nrule(c5, prefer(c4, c3), []).\ncomplement(buy_groceries, cycle_to_work).\ncomplement(cycle_to_work, buy_groceries).\ncomplement(night_time, moving_house).\ncomplement(moving_house, night_time).",
        "NL Translation": "\"If it is night time, I cycle to work. If I am moving house, I buy groceries. If both are true, I prefer to cycle to work; however, if it's also a vacation planned, I prefer to buy groceries. During the holiday season, I prefer to cycle to work. If it's a humid day, I prefer to buy groceries. If a friend is in town, I prefer to buy groceries over cycling to work.\""
    },
    {
        "Example Number": 635,
        "Gorgias Code": ":- dynamic concert_nearby/0, vacation_planned/0, tax_refund/0.\nrule(r1, reply_emails, []) :- concert_nearby.\nrule(r2, morning_run, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, vacation_planned, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, reply_emails).\ncomplement(reply_emails, morning_run).\ncomplement(concert_nearby, vacation_planned).\ncomplement(vacation_planned, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I reply to emails. If I have a vacation planned, I go for a morning run. If both the concert is nearby and I have a vacation planned, I prefer to reply to emails; however, if there is also a discount on the flight, I prefer to go for a morning run. I can't at the same time reply to emails and go for a morning run, and concert nearby and vacation planned are not compatible. If I have a tax refund, I prefer to reply to emails over going for a morning run."
    },
    {
        "Example Number": 723,
        "Gorgias Code": ":- dynamic new_neighbor/0, financial_aid/0, school_reunion/0.\nrule(r1, take_bus, []) :- new_neighbor.\nrule(r2, take_picnic, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, financial_aid.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, financial_aid, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, take_bus).\ncomplement(take_bus, take_picnic).\ncomplement(new_neighbor, financial_aid).\ncomplement(financial_aid, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I take the bus. If there is financial aid, I take a picnic. If there is both a new neighbor and financial aid, I prefer to take the bus, but if there are extended work hours as well, I prefer to take a picnic. If there is a school reunion, I prefer to take the bus over a picnic. I can't at the same time take a picnic and the bus, and having a new neighbor and financial aid are not compatible."
    },
    {
        "Example Number": 305,
        "Gorgias Code": ":- dynamic unexpected_expense/0, family_gathering/0, low_budget/0, school_reunion/0, new_neighbor/0.\nrule(r1, evening_walk, []) :- unexpected_expense.\nrule(r2, order_taxi, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, family_gathering.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, family_gathering, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_neighbor.\nrule(c5, prefer(c4, c3), []).\ncomplement(order_taxi, evening_walk).\ncomplement(evening_walk, order_taxi).\ncomplement(unexpected_expense, family_gathering).\ncomplement(family_gathering, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I go for an evening walk. If there is a family gathering, I order a taxi. If both the unexpected expense and family gathering occur, I prefer ordering a taxi; however, if I also received a bonus, I prefer going for an evening walk. If there is a low budget, I prefer ordering a taxi over going for an evening walk. If there is a school reunion, I prefer going for an evening walk over ordering a taxi. If there is a new neighbor, I prefer ordering a taxi over going for an evening walk."
    },
    {
        "Example Number": 397,
        "Gorgias Code": ":- dynamic lunch_time/0, cloudy_day/0, wedding_anniversary/0\nrule(r1, prepare_report, []) :- lunch_time.\nrule(r2, go_to(park), []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(park), prepare_report).\ncomplement(prepare_report, go_to(park)).",
        "NL Translation": "\"If it is lunch time, I prepare a report or go to the park. Generally, I prefer to prepare a report but if it is a cloudy day, I prefer to go to the park. However, if it is our wedding anniversary, I prefer to go to the park. I can't at the same time prepare a report and go to the park.\""
    },
    {
        "Example Number": 249,
        "Gorgias Code": ":- dynamic cloudy_day/0, early_morning/0, new_neighbor/0, client_feedback/0, hot_day/0.\nrule(r1, dispose_trash, []) :- cloudy_day.\nrule(r2, give_presentation, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, early_morning.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, early_morning, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hot_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(give_presentation, dispose_trash).\ncomplement(dispose_trash, give_presentation).\ncomplement(cloudy_day, early_morning).\ncomplement(early_morning, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I dispose of trash. If it is early morning, I give a presentation. If both conditions are met, I prefer to dispose of trash; however, if there is also a snowstorm, I prefer to give a presentation. If there is a new neighbor, I prefer to give a presentation over disposing of trash. If there is client feedback, I prefer to dispose of trash over giving a presentation. If it is a hot day, I prefer to dispose of trash over giving a presentation. If there is a snowstorm, I prefer to give a presentation over disposing of trash.\""
    },
    {
        "Example Number": 297,
        "Gorgias Code": ":- dynamic financial_aid/0, night_time/0, feeling_sick/0, hail_storm/0, boss_in_office/0.\nrule(r1, submit_timesheet, []) :- financial_aid.\nrule(r2, rent_car, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- financial_aid, night_time.\nrule(p2, prefer(r2, r1), []) :- financial_aid, night_time, concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(rent_car, submit_timesheet).\ncomplement(submit_timesheet, rent_car).\ncomplement(financial_aid, night_time).\ncomplement(night_time, financial_aid).",
        "NL Translation": "If I have financial aid, I submit my timesheet. If it's night time, I rent a car. If I have financial aid and it's night time, I prefer to submit my timesheet; however, if there is a concert nearby, I prefer to rent a car. If I'm feeling sick, I prefer to submit my timesheet. If there is a hail storm, I prefer to rent a car. If my boss is in the office, I prefer to submit my timesheet."
    },
    {
        "Example Number": 21,
        "Gorgias Code": ":- dynamic humid_day/0, urgent_deadline/0, concert_nearby/0, windy_day/0, financial_aid/0.\nrule(r1, pay_bills, []) :- humid_day.\nrule(r2, use_subway, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- humid_day, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- humid_day, urgent_deadline, subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- financial_aid.\nrule(c5, prefer(c4, c3), []).\ncomplement(use_subway, pay_bills).\ncomplement(pay_bills, use_subway).\ncomplement(humid_day, urgent_deadline).\ncomplement(urgent_deadline, humid_day).",
        "NL Translation": "\"If it is a humid day, I pay bills. If there is an urgent deadline, I use the subway. If both conditions are met, I prefer to pay bills; however, if there is also a subscription due, I prefer to use the subway. If there is a concert nearby, I prefer to use the subway over paying bills. If it is a windy day, I prefer to pay bills over using the subway. If there is financial aid available, I prefer to pay bills over using the subway. I cannot at the same time pay bills and use the subway, and humid day and urgent deadline are not compatible.\""
    },
    {
        "Example Number": 658,
        "Gorgias Code": ":- dynamic windy_day/0, good_weather/0\nrule(r1, give_presentation, []) :- windy_day.\nrule(r2, visit_family, []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, give_presentation).\ncomplement(give_presentation, visit_family).",
        "NL Translation": "When there is a windy day, I give a presentation or visit family. Generally, I prefer to give a presentation, but if the weather is good, I prefer to visit family. I cannot both give a presentation and visit family."
    },
    {
        "Example Number": 335,
        "Gorgias Code": ":- dynamic project_extension/0, deadline_missed/0.\nrule(r1, review_documents, []) :- project_extension.\nrule(r2, go_to_bar, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- project_extension, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- project_extension, deadline_missed, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to_bar, review_documents).\ncomplement(review_documents, go_to_bar).\ncomplement(project_extension, deadline_missed).\ncomplement(deadline_missed, project_extension).",
        "NL Translation": "If there is a project extension, I review documents. If the deadline is missed, I go to the bar. However, if both the project extension and deadline are missed, I prefer to go to the bar; but if it's also early in the morning, I prefer to review documents."
    },
    {
        "Example Number": 790,
        "Gorgias Code": ":- dynamic job_interview/0, humid_day/0.\nrule(r1, evening_walk, []) :- job_interview.\nrule(r2, go_to(park), []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- job_interview, humid_day.\nrule(p2, prefer(r2, r1), []) :- job_interview, humid_day, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(park), evening_walk).\ncomplement(evening_walk, go_to(park)).\ncomplement(job_interview, humid_day).\ncomplement(humid_day, job_interview).",
        "NL Translation": "\"If there is a job interview, I take an evening walk. On a humid day, I go to the park. If both conditions are met, I prefer to take an evening walk; however, if there is also a discount on a flight, I prefer to go to the park. I can't at the same time go to the park and take an evening walk, and job interview and humid day are not compatible.\""
    },
    {
        "Example Number": 639,
        "Gorgias Code": ":- dynamic unexpected_expense/0.\nrule(r1, explore_city, []) :- unexpected_expense.\nrule(r2, rent_car, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\ncomplement(rent_car, explore_city).\ncomplement(explore_city, rent_car).",
        "NL Translation": "\"If there is an unexpected expense, I explore the city. If there is an unexpected expense, I rent a car. I prefer to explore the city over renting a car.\""
    },
    {
        "Example Number": 919,
        "Gorgias Code": ":- dynamic feeling_sick/0, good_investment/0, project_extension/0, discount_on_flight/0, holiday_season/0.\nrule(r1, book_ride_share, []) :- feeling_sick.\nrule(r2, update_project_plan, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, good_investment.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, good_investment, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- holiday_season.\nrule(c5, prefer(c4, c3), []).\ncomplement(update_project_plan, book_ride_share).\ncomplement(book_ride_share, update_project_plan).\ncomplement(feeling_sick, good_investment).\ncomplement(good_investment, feeling_sick).",
        "NL Translation": "If feeling sick, book a ride share. If it's a good investment, update the project plan. If feeling sick and it's a good investment, prefer booking a ride share. If feeling sick, it's a good investment, and it's your wedding anniversary, prefer updating the project plan. Prefer updating the project plan over booking a ride share if there is a project extension. Prefer booking a ride share over updating the project plan if there is a discount on a flight. Prefer updating the project plan over booking a ride share if it's the holiday season."
    },
    {
        "Example Number": 612,
        "Gorgias Code": ":- dynamic rainy_day/0, birthday_today/0, afternoon/0\nrule(r1, go_to(theater), []) :- rainy_day.\nrule(r2, prepare_report, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, go_to(theater)).\ncomplement(go_to(theater), prepare_report).",
        "NL Translation": "\"When it's a rainy day, I go to the theater or prepare a report. Generally, I prefer to go to the theater but if it's my birthday today, I prefer to prepare a report. If it's the afternoon, I prefer to go to the theater over preparing a report. I can't at the same time go to the theater and prepare a report.\""
    },
    {
        "Example Number": 566,
        "Gorgias Code": ":- dynamic school_reunion/0, family_emergency/0.\nrule(r1, go_to(park), []) :- school_reunion.\nrule(r2, water_plants, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- school_reunion, family_emergency.\nrule(p2, prefer(r2, r1), []) :- school_reunion, family_emergency, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, go_to(park)).\ncomplement(go_to(park), water_plants).\ncomplement(school_reunion, family_emergency).\ncomplement(family_emergency, school_reunion).",
        "NL Translation": "\"If there is a school reunion, I go to the park. If there is a family emergency, I water plants. If there is both a school reunion and a family emergency, I prefer to go to the park; however, if it is also early morning, I prefer to water plants. Watering plants and going to the park are incompatible, as well as school reunion and family emergency.\""
    },
    {
        "Example Number": 322,
        "Gorgias Code": ":- dynamic discount_on_flight/0, hail_storm/0.\nrule(r1, rent_car, []) :- discount_on_flight.\nrule(r2, cycle_to_work, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, hail_storm.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, hail_storm, morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, rent_car).\ncomplement(rent_car, cycle_to_work).\ncomplement(discount_on_flight, hail_storm).\ncomplement(hail_storm, discount_on_flight).",
        "NL Translation": "If there is a discount on the flight and a hail storm, I rent a car. If there is a discount on the flight, a hail storm, and it's the morning rush, I prefer to cycle to work. I can't cycle to work and rent a car at the same time, and discount on the flight and hail storm are not compatible."
    },
    {
        "Example Number": 111,
        "Gorgias Code": ":- dynamic party_invitation/0, boss_in_office/0, night_time/0, unexpected_expense/0, wedding_anniversary/0.\nrule(r1, evening_walk, []) :- party_invitation.\nrule(r2, attend_workshop, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- party_invitation, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- party_invitation, boss_in_office, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_workshop, evening_walk).\ncomplement(evening_walk, attend_workshop).\ncomplement(party_invitation, boss_in_office).\ncomplement(boss_in_office, party_invitation).",
        "NL Translation": "If there is a party invitation, I go for an evening walk. If the boss is in the office, I attend a workshop. If both the party invitation and boss in the office are present, I prefer to go for an evening walk. However, if there is a missed deadline, I prefer to attend a workshop. If it's night time, I prefer to go for an evening walk. If there is an unexpected expense, I prefer to attend a workshop. If there is a wedding anniversary, I prefer to attend a workshop over going for an evening walk."
    },
    {
        "Example Number": 472,
        "Gorgias Code": ":- dynamic humid_day/0, expensive_event/0, moving_house/0\nrule(r1, make_coffee, []) :- humid_day.\nrule(r2, reply_emails, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, make_coffee).\ncomplement(make_coffee, reply_emails).",
        "NL Translation": "If it is a humid day, I make coffee or reply to emails. Generally, I prefer to make coffee, but if there is an expensive event, I prefer to reply to emails. However, if I am moving house, I prefer to make coffee. I cannot make coffee and reply to emails at the same time."
    },
    {
        "Example Number": 615,
        "Gorgias Code": ":- dynamic family_emergency/0, got_bonus/0, weekend/0\nrule(r1, finish_report, []) :- family_emergency.\nrule(r2, go_to(park), []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(park), finish_report).\ncomplement(finish_report, go_to(park)).",
        "NL Translation": "\"When there is a family emergency, I finish the report. If there is a family emergency, I go to the park. Generally, I prefer to finish the report but if I got a bonus, I prefer to go to the park. I can't at the same time go to the park and finish the report. If it's the weekend, I prefer to finish the report over going to the park.\""
    },
    {
        "Example Number": 115,
        "Gorgias Code": ":- dynamic networking_event/0, family_emergency/0\nrule(r1, do_laundry, []) :- networking_event.\nrule(r2, host_dinner_party, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, do_laundry).\ncomplement(do_laundry, host_dinner_party).",
        "NL Translation": "If there is a networking event, I do laundry or host a dinner party. Generally, I prefer to do laundry, but if there is a family emergency, I prefer to host a dinner party. I can't at the same time do laundry and host a dinner party."
    },
    {
        "Example Number": 553,
        "Gorgias Code": ":- dynamic unexpected_guest/0, financial_aid/0.\nrule(r1, explore_city, []) :- unexpected_guest.\nrule(r2, book_flight, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, financial_aid.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, financial_aid, cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_flight, explore_city).\ncomplement(explore_city, book_flight).\ncomplement(unexpected_guest, financial_aid).\ncomplement(financial_aid, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I explore the city. If I have financial aid, I book a flight. However, if I have both an unexpected guest and financial aid, I prefer to explore the city. But if it's also a cloudy day, I prefer to book a flight. I can't at the same time explore the city and book a flight, and unexpected guests and financial aid are not compatible."
    },
    {
        "Example Number": 981,
        "Gorgias Code": ":- dynamic good_weather/0, expensive_event/0\nrule(r1, go_to_bar, []) :- good_weather.\nrule(r2, finish_report, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(finish_report, go_to_bar).\ncomplement(go_to_bar, finish_report).",
        "NL Translation": "When it is good weather, I either go to the bar or finish the report. Generally, I prefer to go to the bar but if it is an expensive event, I prefer to finish the report."
    },
    {
        "Example Number": 535,
        "Gorgias Code": ":- dynamic important_meeting/0, afternoon/0, snowstorm/0\nrule(r1, book_ride_share, []) :- important_meeting.\nrule(r2, go_shopping, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, book_ride_share).\ncomplement(book_ride_share, go_shopping).",
        "NL Translation": "If there is an important meeting, I book a ride share or go shopping. Generally, I prefer to book a ride share but if it is afternoon, I prefer to go shopping. However, if there is a snowstorm, I prefer to go shopping instead of booking a ride share."
    },
    {
        "Example Number": 140,
        "Gorgias Code": ":- dynamic community_event/0, job_interview/0, subscription_due/0\nrule(r1, host_dinner_party, []) :- community_event.\nrule(r2, go_gym, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, host_dinner_party).\ncomplement(host_dinner_party, go_gym).",
        "NL Translation": "If there is a community event, I either host a dinner party or go to the gym. Generally, I prefer to host a dinner party, but if there is a job interview, I prefer to go to the gym. If there is a subscription due, I prefer to host a dinner party over going to the gym."
    },
    {
        "Example Number": 688,
        "Gorgias Code": ":- dynamic community_event/0, hail_storm/0\nrule(r1, visit_museum, []) :- community_event.\nrule(r2, attend_workshop, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, visit_museum).\ncomplement(visit_museum, attend_workshop).",
        "NL Translation": "When there is a community event, I visit the museum or attend a workshop. Generally, I prefer to visit the museum but if there is a hail storm, I prefer to attend a workshop. I can't at the same time visit the museum and attend a workshop."
    },
    {
        "Example Number": 529,
        "Gorgias Code": ":- dynamic night_time/0, concert_nearby/0.\nrule(r1, visit_doctor, []) :- night_time.\nrule(r2, host_dinner_party, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- night_time, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- night_time, concert_nearby, community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, visit_doctor).\ncomplement(visit_doctor, host_dinner_party).\ncomplement(night_time, concert_nearby).\ncomplement(concert_nearby, night_time).",
        "NL Translation": "If it is night time, I visit the doctor. If there is a concert nearby, I host a dinner party. If it is both night time and there is a concert nearby, I prefer to visit the doctor. However, if it is night time, there is a concert nearby, and there is a community event, I prefer to host a dinner party."
    },
    {
        "Example Number": 365,
        "Gorgias Code": ":- dynamic rainy_day/0, urgent_deadline/0, new_neighbor/0.\nrule(r1, cook_dinner, []) :- rainy_day.\nrule(r2, go_to(theater), []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- rainy_day, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- rainy_day, urgent_deadline, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), cook_dinner).\ncomplement(cook_dinner, go_to(theater)).\ncomplement(rainy_day, urgent_deadline).\ncomplement(urgent_deadline, rainy_day).",
        "NL Translation": "If it's a rainy day, I cook dinner. If there is an urgent deadline, I go to the theater. However, if it's both a rainy day and there is an urgent deadline, I prefer to cook dinner. But if it's also a rainy day, urgent deadline, and a friend is in town, I prefer to go to the theater. If there is a new neighbor, I prefer to cook dinner over going to the theater."
    },
    {
        "Example Number": 856,
        "Gorgias Code": ":- dynamic medical_appointment/0, wedding_anniversary/0, invitation_from_friend/0\nrule(r1, book_ride_share, []) :- medical_appointment.\nrule(r2, cycle_to_work, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycle_to_work, book_ride_share).\ncomplement(book_ride_share, cycle_to_work).",
        "NL Translation": "\"If there is a medical appointment, I book a ride share. If there is a wedding anniversary, I cycle to work. Generally, I prefer to book a ride share over cycling to work. However, if there is an invitation from a friend, I prefer to cycle to work. I cannot book a ride share and cycle to work at the same time.\""
    },
    {
        "Example Number": 797,
        "Gorgias Code": ":- dynamic client_feedback/0.\nrule(r1, cycling_session, []) :- client_feedback.\nrule(r2, go_to_bar, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to_bar, cycling_session).\ncomplement(cycling_session, go_to_bar).",
        "NL Translation": "When there is client feedback, I either have a cycling session or go to the bar. I prefer to have a cycling session over going to the bar. Cycling session and going to the bar are mutually exclusive."
    },
    {
        "Example Number": 840,
        "Gorgias Code": ":- dynamic concert_nearby/0, community_event/0, project_extension/0, invitation_from_friend/0, hail_storm/0.\nrule(r1, attend_meeting, []) :- concert_nearby.\nrule(r2, reply_emails, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, community_event.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, community_event, windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hail_storm.\nrule(c5, prefer(c4, c3), []).\ncomplement(reply_emails, attend_meeting).\ncomplement(attend_meeting, reply_emails).\ncomplement(concert_nearby, community_event).\ncomplement(community_event, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I attend a meeting. If there is a community event, I reply to emails. If both the concert is nearby and there is a community event, I prefer to attend the meeting, but if it's also a windy day, I prefer to reply to emails. If there is a project extension, I prefer to reply to emails. If there is an invitation from a friend, I prefer to attend the meeting. If there is a hail storm, I prefer to reply to emails."
    },
    {
        "Example Number": 629,
        "Gorgias Code": ":- dynamic friend_in_town/0, concert_nearby/0, cloudy_day/0.\nrule(r1, explore_city, []) :- friend_in_town.\nrule(r2, morning_run, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, concert_nearby, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, explore_city).\ncomplement(explore_city, morning_run).\ncomplement(friend_in_town, concert_nearby).\ncomplement(concert_nearby, friend_in_town).",
        "NL Translation": "If a friend is in town, I explore the city. If there is a concert nearby, I go for a morning run. If both a friend is in town and there is a concert nearby, I prefer to explore the city; however, if there is also a discount on a flight, I prefer to go for a morning run. On a cloudy day, I prefer to go for a morning run over exploring the city."
    },
    {
        "Example Number": 515,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, low_budget/0, hail_storm/0, moving_house/0, good_weather/0.\nrule(r1, book_ride_share, []) :- invitation_from_friend.\nrule(r2, attend_workshop, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, low_budget.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, low_budget, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_weather.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_workshop, book_ride_share).\ncomplement(book_ride_share, attend_workshop).\ncomplement(invitation_from_friend, low_budget).\ncomplement(low_budget, invitation_from_friend).",
        "NL Translation": "If there is an invitation from a friend, I book a ride share. If I have a low budget, I attend a workshop. However, if there is both an invitation from a friend and a low budget, I prefer to book a ride share. If I miss a deadline, I prefer to attend a workshop. If there is a hail storm, I prefer to attend a workshop over booking a ride share. If I am moving house, I prefer to book a ride share over attending a workshop. If the weather is good, I prefer to book a ride share over attending a workshop."
    },
    {
        "Example Number": 652,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, tax_refund/0\nrule(r1, book_flight, []) :- wedding_anniversary.\nrule(r2, read_book, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, book_flight).\ncomplement(book_flight, read_book).",
        "NL Translation": "If there is a wedding anniversary, I book a flight or read a book. Generally, I prefer to book a flight but if there is a tax refund, I prefer to read a book."
    },
    {
        "Example Number": 498,
        "Gorgias Code": ":- dynamic holiday_season/0, vacation_planned/0, extended_work_hours/0.\nrule(r1, take_bus, []) :- holiday_season.\nrule(r2, book_ride_share, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- holiday_season, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- holiday_season, vacation_planned, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, take_bus).\ncomplement(take_bus, book_ride_share).\ncomplement(holiday_season, vacation_planned).\ncomplement(vacation_planned, holiday_season).",
        "NL Translation": "If it is holiday season, I take the bus. If I have a vacation planned, I book a ride share. If both holiday season and vacation planned, I prefer to take the bus, but if there is financial aid available, I prefer to book a ride share. If I have extended work hours, I prefer to take the bus over booking a ride share."
    },
    {
        "Example Number": 399,
        "Gorgias Code": ":- dynamic new_neighbor/0, good_weather/0\nrule(r1, attend_concert, []) :- new_neighbor.\nrule(r2, make_coffee, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(make_coffee, attend_concert).\ncomplement(attend_concert, make_coffee).",
        "NL Translation": "When there is a new neighbor, I attend a concert or make coffee. Generally, I prefer to attend a concert but if the weather is good, I prefer to make coffee. I can't at the same time make coffee and attend a concert."
    },
    {
        "Example Number": 133,
        "Gorgias Code": ":- dynamic birthday_today/0, important_meeting/0\nrule(r1, use_subway, []) :- birthday_today.\nrule(r2, pay_bills, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, use_subway).\ncomplement(use_subway, pay_bills).",
        "NL Translation": "\"When it is my birthday today, I use the subway or pay bills. Generally, I prefer to use the subway but if there is an important meeting, I prefer to pay bills. I can't at the same time use the subway and pay bills.\""
    },
    {
        "Example Number": 215,
        "Gorgias Code": ":- dynamic community_event/0, moving_house/0, birthday_today/0\nrule(r1, attend_workshop, []) :- community_event.\nrule(r2, ride_bike, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(ride_bike, attend_workshop).\ncomplement(attend_workshop, ride_bike).",
        "NL Translation": "If there is a community event, I attend a workshop or ride a bike. Generally, I prefer to attend a workshop but if I am moving house, I prefer to ride a bike. However, if it is my birthday today, I prefer to attend a workshop over riding a bike. I cannot attend a workshop and ride a bike at the same time."
    },
    {
        "Example Number": 726,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, explore_city, []) :- job_interview.\nrule(r2, dispose_trash, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(dispose_trash, explore_city).\ncomplement(explore_city, dispose_trash).",
        "NL Translation": "When there is a job interview, I explore the city. When there is a job interview, I dispose of the trash. I prefer to explore the city over disposing of the trash. I cannot explore the city and dispose of the trash at the same time."
    },
    {
        "Example Number": 455,
        "Gorgias Code": ":- dynamic family_emergency/0, expensive_event/0, feeling_sick/0\nrule(r1, join_fitness_class, []) :- family_emergency.\nrule(r2, cycling_session, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, join_fitness_class).\ncomplement(join_fitness_class, cycling_session).",
        "NL Translation": "If there is a family emergency, I join the fitness class. If there is an expensive event, I have a cycling session. I generally prefer to join the fitness class over having a cycling session. However, if I am feeling sick, I prefer to have a cycling session over joining the fitness class. Cycling session and joining the fitness class are not compatible."
    },
    {
        "Example Number": 886,
        "Gorgias Code": ":- dynamic family_emergency/0.\nrule(r1, go_to(park), []) :- family_emergency.\nrule(r2, morning_run, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\ncomplement(morning_run, go_to(park)).\ncomplement(go_to(park), morning_run).",
        "NL Translation": "\"When there is a family emergency, I go to the park or have a morning run. I generally prefer to go to the park over having a morning run.\""
    },
    {
        "Example Number": 712,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, use_subway, []) :- team_project_due.\nrule(r2, meditate, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(meditate, use_subway).\ncomplement(use_subway, meditate).",
        "NL Translation": "If there is a team project due, I use the subway or meditate. Generally, I prefer to use the subway over meditating. I can't at the same time meditate and use the subway."
    },
    {
        "Example Number": 319,
        "Gorgias Code": ":- dynamic family_emergency/0, deadline_missed/0, unexpected_expense/0.\nrule(r1, visit_museum, []) :- family_emergency.\nrule(r2, plan_meals, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- family_emergency, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- family_emergency, deadline_missed, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, visit_museum).\ncomplement(visit_museum, plan_meals).\ncomplement(family_emergency, deadline_missed).\ncomplement(deadline_missed, family_emergency).",
        "NL Translation": "If there is a family emergency, I visit the museum. If a deadline is missed, I plan meals. If both a family emergency and a deadline missed occur, I prefer to visit the museum; however, if a friend is in town, I prefer to plan meals. In case of an unexpected expense, I prefer to plan meals over visiting the museum."
    },
    {
        "Example Number": 191,
        "Gorgias Code": ":- dynamic cloudy_day/0, rainy_day/0.\nrule(r1, use_subway, []) :- cloudy_day.\nrule(r2, ride_bike, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, rainy_day.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, rainy_day, birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(ride_bike, use_subway).\ncomplement(use_subway, ride_bike).\ncomplement(cloudy_day, rainy_day).\ncomplement(rainy_day, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I use the subway. If it is a rainy day, I ride a bike. However, if it is both a cloudy and rainy day, I prefer to use the subway, but if it is also my birthday today, I prefer to ride a bike. Riding a bike and using the subway are not compatible, and cloudy and rainy days are incompatible.\""
    },
    {
        "Example Number": 625,
        "Gorgias Code": ":- dynamic windy_day/0, humid_day/0, friend_in_town/0.\nrule(r1, go_to(theater), []) :- windy_day.\nrule(r2, attend_concert, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- windy_day, humid_day.\nrule(p2, prefer(r2, r1), []) :- windy_day, humid_day, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, go_to(theater)).\ncomplement(go_to(theater), attend_concert).\ncomplement(windy_day, humid_day).\ncomplement(humid_day, windy_day).",
        "NL Translation": "If it is a windy day, I go to the theater. If it is a humid day, I attend a concert. If it is both windy and humid, I prefer to go to the theater, but if it is also the weekend, I prefer to attend a concert. If a friend is in town, I prefer going to the theater over attending a concert."
    },
    {
        "Example Number": 568,
        "Gorgias Code": ":- dynamic school_reunion/0, new_restaurant_to_try/0, project_extension/0.\nrule(r1, use_subway, []) :- school_reunion.\nrule(r2, attend_meeting, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- school_reunion, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- school_reunion, new_restaurant_to_try, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_meeting, use_subway).\ncomplement(use_subway, attend_meeting).\ncomplement(school_reunion, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, school_reunion).",
        "NL Translation": "If there is a school reunion, I use the subway. If there is a new restaurant to try, I attend the meeting. If both the school reunion and new restaurant to try are present, I prefer to use the subway; however, if it's also my birthday today, I prefer to attend the meeting. If there is a project extension, I prefer to use the subway over attending the meeting."
    },
    {
        "Example Number": 32,
        "Gorgias Code": ":- dynamic friend_in_town/0.\nrule(r1, go_to(cinema), []) :- friend_in_town.\nrule(r2, rent_car, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []).\ncomplement(rent_car, go_to(cinema)).\ncomplement(go_to(cinema), rent_car).",
        "NL Translation": "\"When a friend is in town, I either go to the cinema or rent a car. I generally prefer to go to the cinema over renting a car.\""
    },
    {
        "Example Number": 51,
        "Gorgias Code": ":- dynamic concert_nearby/0.\nrule(r1, reply_emails, []) :- concert_nearby.\nrule(r2, go_to(theater), []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(theater), reply_emails).\ncomplement(reply_emails, go_to(theater)).",
        "NL Translation": "When there is a nearby concert, I reply to emails or go to the theater. I generally prefer to reply to emails over going to the theater."
    },
    {
        "Example Number": 540,
        "Gorgias Code": ":- dynamic moving_house/0, extended_work_hours/0, wedding_anniversary/0.\nrule(r1, call_client, []) :- moving_house.\nrule(r2, go_gym, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- moving_house, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- moving_house, extended_work_hours, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, call_client).\ncomplement(call_client, go_gym).\ncomplement(moving_house, extended_work_hours).\ncomplement(extended_work_hours, moving_house).",
        "NL Translation": "\"If I am moving house, I call the client. If I have extended work hours, I go to the gym. But if I have both, I prefer to call the client; however, if there is a project extension, I prefer to go to the gym. I can't at the same time go to the gym and call the client, and moving house and extended work hours are not compatible.\""
    },
    {
        "Example Number": 702,
        "Gorgias Code": ":- dynamic boss_in_office/0, relationship_break/0, networking_event/0.\nrule(r1, swim_session, []) :- boss_in_office.\nrule(r2, submit_timesheet, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, relationship_break.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, relationship_break, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(submit_timesheet, swim_session).\ncomplement(swim_session, submit_timesheet).\ncomplement(boss_in_office, relationship_break).\ncomplement(relationship_break, boss_in_office).",
        "NL Translation": "If the boss is in the office and there is a relationship break, I have a swim session. If there is a relationship break, I submit the timesheet. If both the boss is in the office and there is a relationship break, I prefer to have a swim session, but if there is also a planned vacation, I prefer to submit the timesheet. I cannot have a swim session and submit the timesheet at the same time. If there is a networking event, I prefer to have a swim session over submitting the timesheet."
    },
    {
        "Example Number": 238,
        "Gorgias Code": ":- dynamic night_time/0.\nrule(r1, prepare_report, []) :- night_time.\nrule(r2, take_train, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(take_train, prepare_report).\ncomplement(prepare_report, take_train).",
        "NL Translation": "When it is night time, I prepare a report or take the train. Generally, I prefer to prepare a report over taking the train. I can't at the same time take the train and prepare a report."
    },
    {
        "Example Number": 727,
        "Gorgias Code": ":- dynamic humid_day/0.\nrule(r1, take_picnic, []) :- humid_day.\nrule(r2, book_flight, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_flight, take_picnic).\ncomplement(take_picnic, book_flight).",
        "NL Translation": "When it's a humid day, I either take a picnic or book a flight. I generally prefer to take a picnic over booking a flight. I can't do both at the same time."
    },
    {
        "Example Number": 788,
        "Gorgias Code": ":- dynamic new_neighbor/0.\nrule(r1, go_to(cinema), []) :- new_neighbor.\nrule(r2, book_ride_share, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_ride_share, go_to(cinema)).\ncomplement(go_to(cinema), book_ride_share).",
        "NL Translation": "When there is a new neighbor, I either go to the cinema or book a ride share. Generally, I prefer to go to the cinema over booking a ride share."
    },
    {
        "Example Number": 484,
        "Gorgias Code": ":- dynamic vacation_planned/0.\nrule(r1, cook_dinner, []) :- vacation_planned.\nrule(r2, host_dinner_party, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, cook_dinner).\ncomplement(cook_dinner, host_dinner_party).",
        "NL Translation": "When vacation is planned, I cook dinner or host a dinner party. I prefer to cook dinner over hosting a dinner party. I cannot cook dinner and host a dinner party at the same time."
    },
    {
        "Example Number": 22,
        "Gorgias Code": ":- dynamic holiday_season/0, urgent_deadline/0.\nrule(r1, clean_house, []) :- holiday_season.\nrule(r2, cycle_to_work, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- holiday_season, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- holiday_season, urgent_deadline, humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, clean_house).\ncomplement(clean_house, cycle_to_work).\ncomplement(holiday_season, urgent_deadline).\ncomplement(urgent_deadline, holiday_season).",
        "NL Translation": "If it is holiday season, I clean the house. If there is an urgent deadline, I cycle to work. If both holiday season and urgent deadline are present, I prefer to clean the house; however, if it is also a humid day, I prefer to cycle to work."
    },
    {
        "Example Number": 295,
        "Gorgias Code": ":- dynamic good_weather/0, vacation_planned/0, important_meeting/0\nrule(r1, plan_meals, []) :- good_weather.\nrule(r2, call_client, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, plan_meals).\ncomplement(plan_meals, call_client).",
        "NL Translation": "If there is good weather, I plan meals or call the client. Generally, I prefer to plan meals but if I have a vacation planned, I prefer to call the client. However, if there is an important meeting, I prefer to plan meals. I can't at the same time plan meals and call the client."
    },
    {
        "Example Number": 398,
        "Gorgias Code": ":- dynamic lunch_time/0, morning_rush/0, discount_on_flight/0\nrule(r1, yoga_session, []) :- lunch_time.\nrule(r2, call_client, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, yoga_session).\ncomplement(yoga_session, call_client).",
        "NL Translation": "\"If it is lunch time, I do a yoga session or call the client. Generally, I prefer to do a yoga session, but if it is during the morning rush, I prefer to call the client. However, if there is a discount on the flight, I prefer to do the yoga session. I can't do both a yoga session and call the client at the same time.\""
    },
    {
        "Example Number": 775,
        "Gorgias Code": ":- dynamic humid_day/0, hail_storm/0, financial_aid/0\nrule(r1, dispose_trash, []) :- humid_day.\nrule(r2, drive_car, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, dispose_trash).\ncomplement(dispose_trash, drive_car).",
        "NL Translation": "If it is a humid day, I dispose trash or drive the car. Generally, I prefer to dispose trash but if there is a hail storm, I prefer to drive the car. However, if I have financial aid, I prefer to dispose trash. I can't at the same time drive the car and dispose trash."
    },
    {
        "Example Number": 357,
        "Gorgias Code": ":- dynamic networking_event/0, early_morning/0, urgent_deadline/0\nrule(r1, take_bus, []) :- networking_event.\nrule(r2, attend_concert, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, take_bus).\ncomplement(take_bus, attend_concert).",
        "NL Translation": "If there is a networking event, I take the bus or attend a concert. Generally, I prefer to take the bus but if it is early morning, I prefer to attend a concert. However, if there is an urgent deadline, I prefer to take the bus over attending a concert. I cannot take the bus and attend a concert at the same time."
    },
    {
        "Example Number": 187,
        "Gorgias Code": ":- dynamic subscription_due/0.\nrule(r1, read_book, []) :- subscription_due.\nrule(r2, dispose_trash, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(dispose_trash, read_book).\ncomplement(read_book, dispose_trash).",
        "NL Translation": "When there is a subscription due, I read a book or dispose trash. I generally prefer to read a book over disposing trash."
    },
    {
        "Example Number": 178,
        "Gorgias Code": ":- dynamic hail_storm/0, financial_aid/0, moving_house/0\nrule(r1, finish_report, []) :- hail_storm.\nrule(r2, take_picnic, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, finish_report).\ncomplement(finish_report, take_picnic).",
        "NL Translation": "\"If there is a hail storm, I finish the report or take a picnic. Generally, I prefer to finish the report but if there is financial aid, I prefer to take a picnic. If I am moving house, I prefer to take a picnic over finishing the report, and vice versa.\""
    },
    {
        "Example Number": 113,
        "Gorgias Code": ":- dynamic new_neighbor/0, important_meeting/0, rainy_day/0.\nrule(r1, give_presentation, []) :- new_neighbor.\nrule(r2, go_to(park), []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, important_meeting.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, important_meeting, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(park), give_presentation).\ncomplement(give_presentation, go_to(park)).\ncomplement(new_neighbor, important_meeting).\ncomplement(important_meeting, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I give a presentation. If there is an important meeting, I go to the park. If I have both a new neighbor and an important meeting, I prefer to give a presentation; however, if there is also a family emergency, I prefer to go to the park. In case of a rainy day, I prefer to go to the park over giving a presentation."
    },
    {
        "Example Number": 576,
        "Gorgias Code": ":- dynamic family_gathering/0, boss_in_office/0.\nrule(r1, organize_workspace, []) :- family_gathering.\nrule(r2, prepare_report, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- family_gathering, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- family_gathering, boss_in_office, important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, organize_workspace).\ncomplement(organize_workspace, prepare_report).\ncomplement(family_gathering, boss_in_office).\ncomplement(boss_in_office, family_gathering).",
        "NL Translation": "If there is a family gathering, I organize my workspace. If my boss is in the office, I prepare a report. However, if there is both a family gathering and my boss is in the office, I prefer to prepare a report. If there is an important meeting, I prefer to organize my workspace."
    },
    {
        "Example Number": 721,
        "Gorgias Code": ":- dynamic humid_day/0, client_feedback/0, discount_on_flight/0\nrule(r1, ride_bike, []) :- humid_day.\nrule(r2, reply_emails, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, ride_bike).\ncomplement(ride_bike, reply_emails).",
        "NL Translation": "If it is a humid day, I either ride a bike or reply to emails. Generally, I prefer to ride a bike, but if there is client feedback, I prefer to reply to emails. However, if there is a discount on the flight, I prefer to ride a bike. I cannot ride a bike and reply to emails at the same time."
    },
    {
        "Example Number": 214,
        "Gorgias Code": ":- dynamic low_budget/0, networking_event/0, financial_aid/0.\nrule(r1, schedule_meeting, []) :- low_budget.\nrule(r2, call_client, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- low_budget, networking_event.\nrule(p2, prefer(r2, r1), []) :- low_budget, networking_event, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, schedule_meeting).\ncomplement(schedule_meeting, call_client).\ncomplement(low_budget, networking_event).\ncomplement(networking_event, low_budget).",
        "NL Translation": "If there is a low budget, I schedule a meeting. If there is a networking event, I call the client. If there is both a low budget and a networking event, I prefer to schedule a meeting. However, if there is also a school reunion, I prefer to call the client. If there is financial aid, I prefer to schedule a meeting over calling the client."
    },
    {
        "Example Number": 760,
        "Gorgias Code": ":- dynamic relationship_break/0, morning_rush/0.\nrule(r1, attend_concert, []) :- relationship_break.\nrule(r2, morning_run, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- relationship_break, morning_rush.\nrule(p2, prefer(r2, r1), []) :- relationship_break, morning_rush, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(morning_run, attend_concert).\ncomplement(attend_concert, morning_run).\ncomplement(relationship_break, morning_rush).\ncomplement(morning_rush, relationship_break).",
        "NL Translation": "If there is a relationship break, I attend a concert. If there is a morning rush, I go for a morning run. If there is both a relationship break and a morning rush, I prefer to attend a concert; however, if there is also an urgent deadline, I prefer to go for a morning run."
    },
    {
        "Example Number": 755,
        "Gorgias Code": ":- dynamic birthday_today/0, financial_aid/0.\nrule(r1, ride_bike, []) :- birthday_today.\nrule(r2, go_to(theater), []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- birthday_today, financial_aid.\nrule(p2, prefer(r2, r1), []) :- birthday_today, financial_aid, expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(theater), ride_bike).\ncomplement(ride_bike, go_to(theater)).\ncomplement(birthday_today, financial_aid).\ncomplement(financial_aid, birthday_today).",
        "NL Translation": "\"When it is someone's birthday today, they ride a bike. If there is financial aid available, they go to the theater. However, if it's both their birthday and there is financial aid, they prefer to ride a bike; but if it's also an expensive event, they prefer to go to the theater. Riding a bike and going to the theater are mutually exclusive, as well as having a birthday today and having financial aid.\""
    },
    {
        "Example Number": 153,
        "Gorgias Code": ":- dynamic project_extension/0, new_neighbor/0, relationship_break/0.\nrule(r1, plan_meals, []) :- project_extension.\nrule(r2, go_to_bar, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- project_extension, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- project_extension, new_neighbor, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to_bar, plan_meals).\ncomplement(plan_meals, go_to_bar).\ncomplement(project_extension, new_neighbor).\ncomplement(new_neighbor, project_extension).",
        "NL Translation": "If there is a project extension, I plan meals. If there is a new neighbor, I go to the bar. If both the project extension and new neighbor are present, I prefer to plan meals. However, if there is also a morning rush, I prefer to go to the bar. If there is a relationship break, I prefer to plan meals over going to the bar."
    },
    {
        "Example Number": 858,
        "Gorgias Code": ":- dynamic snowstorm/0, rainy_day/0, family_gathering/0\nrule(r1, go_gym, []) :- snowstorm.\nrule(r2, water_plants, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, go_gym).\ncomplement(go_gym, water_plants).",
        "NL Translation": "\"If there is a snowstorm, I go to the gym or water the plants. Generally, I prefer to go to the gym but if it's a rainy day, I prefer to water the plants. However, if there is a family gathering, I prefer to go to the gym. I can't at the same time go to the gym and water the plants.\""
    },
    {
        "Example Number": 447,
        "Gorgias Code": ":- dynamic snowstorm/0, extended_work_hours/0, deadline_missed/0, dusk/0, birthday_today/0.\nrule(r1, submit_timesheet, []) :- snowstorm.\nrule(r2, go_gym, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- snowstorm, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- snowstorm, extended_work_hours, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_gym, submit_timesheet).\ncomplement(submit_timesheet, go_gym).\ncomplement(snowstorm, extended_work_hours).\ncomplement(extended_work_hours, snowstorm).",
        "NL Translation": "If there is a snowstorm, I submit my timesheet. If I have extended work hours, I go to the gym. If both a snowstorm and extended work hours occur, I prefer to submit my timesheet; however, if there is also a party invitation, I prefer to go to the gym. If the deadline is missed, I prefer going to the gym over submitting my timesheet. If it is dusk, I prefer submitting my timesheet over going to the gym. If it's my birthday today, I prefer going to the gym over submitting my timesheet."
    },
    {
        "Example Number": 550,
        "Gorgias Code": ":- dynamic important_meeting/0, vacation_planned/0.\nrule(r1, schedule_meeting, []) :- important_meeting.\nrule(r2, go_shopping, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- important_meeting, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- important_meeting, vacation_planned, night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, schedule_meeting).\ncomplement(schedule_meeting, go_shopping).\ncomplement(important_meeting, vacation_planned).\ncomplement(vacation_planned, important_meeting).",
        "NL Translation": "If there is an important meeting, I schedule a meeting. If I have a planned vacation, I go shopping. If both the important meeting and vacation are present, I prefer to schedule a meeting; however, if it is also night time, I prefer to go shopping. I cannot at the same time go shopping and schedule a meeting, and important meeting and vacation planned are not compatible."
    },
    {
        "Example Number": 532,
        "Gorgias Code": ":- dynamic holiday_season/0, tax_refund/0\nrule(r1, finish_report, []) :- holiday_season.\nrule(r2, take_train, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, finish_report).\ncomplement(finish_report, take_train).",
        "NL Translation": "When it is holiday season, I finish the report or take the train. Generally, I prefer to finish the report but if there is a tax refund, I prefer to take the train. I can't at the same time finish the report and take the train."
    },
    {
        "Example Number": 894,
        "Gorgias Code": ":- dynamic lunch_time/0, birthday_today/0, new_restaurant_to_try/0\nrule(r1, evening_walk, []) :- lunch_time.\nrule(r2, go_shopping, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, evening_walk).\ncomplement(evening_walk, go_shopping).",
        "NL Translation": "If it is lunch time, I either go for an evening walk or go shopping. Generally, I prefer to go for an evening walk but if it's my birthday, I prefer to go shopping. If there is a new restaurant to try, I prefer to go shopping over going for an evening walk."
    },
    {
        "Example Number": 219,
        "Gorgias Code": ":- dynamic dusk/0, good_weather/0\nrule(r1, host_dinner_party, []) :- dusk.\nrule(r2, take_picnic, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, host_dinner_party).\ncomplement(host_dinner_party, take_picnic).",
        "NL Translation": "When it is dusk, I can either host a dinner party or take a picnic. Generally, I prefer to host a dinner party but if the weather is good, I prefer to take a picnic. I can't at the same time host a dinner party and take a picnic."
    },
    {
        "Example Number": 954,
        "Gorgias Code": ":- dynamic good_investment/0, afternoon/0, family_gathering/0.\nrule(r1, visit_family, []) :- good_investment.\nrule(r2, host_dinner_party, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- good_investment, afternoon.\nrule(p2, prefer(r2, r1), []) :- good_investment, afternoon, tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(host_dinner_party, visit_family).\ncomplement(visit_family, host_dinner_party).\ncomplement(good_investment, afternoon).\ncomplement(afternoon, good_investment).",
        "NL Translation": "If there is a good investment, I visit family. If it is afternoon, I host a dinner party. If there is both a good investment and it is afternoon, I prefer to visit family; however, if there is also a tax refund, I prefer to host a dinner party. If there is a family gathering, I prefer to visit family over hosting a dinner party."
    },
    {
        "Example Number": 174,
        "Gorgias Code": ":- dynamic hail_storm/0, subscription_due/0.\nrule(r1, finish_report, []) :- hail_storm.\nrule(r2, attend_workshop, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- hail_storm, subscription_due.\nrule(p2, prefer(r2, r1), []) :- hail_storm, subscription_due, school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, finish_report).\ncomplement(finish_report, attend_workshop).\ncomplement(hail_storm, subscription_due).\ncomplement(subscription_due, hail_storm).",
        "NL Translation": "If there is a hail storm, I finish the report. If the subscription is due, I attend the workshop. But if both the hail storm and subscription are present, I prefer to finish the report; however, if there is also a school reunion, I prefer to attend the workshop. I can't at the same time finish the report and attend the workshop, and hail storm and subscription due are not compatible."
    },
    {
        "Example Number": 696,
        "Gorgias Code": ":- dynamic subscription_due/0, feeling_sick/0, snowstorm/0\nrule(r1, plan_meals, []) :- subscription_due.\nrule(r2, make_coffee, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, plan_meals).\ncomplement(plan_meals, make_coffee).",
        "NL Translation": "\"When the subscription is due, I plan meals or make coffee. Generally, I prefer to plan meals but if I am feeling sick, I prefer to make coffee. However, if there is a snowstorm, I prefer to make meals instead of making coffee. I cannot plan meals and make coffee at the same time.\""
    },
    {
        "Example Number": 134,
        "Gorgias Code": ":- dynamic friend_in_town/0.\nrule(r1, give_presentation, []) :- friend_in_town.\nrule(r2, go_shopping, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_shopping, give_presentation).\ncomplement(give_presentation, go_shopping).",
        "NL Translation": "When a friend is in town, I either give a presentation or go shopping. I prefer to give a presentation over going shopping. I cannot do both give a presentation and go shopping."
    },
    {
        "Example Number": 20,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, low_budget/0, got_bonus/0, afternoon/0, boss_in_office/0.\nrule(r1, go_to_bar, []) :- new_restaurant_to_try.\nrule(r2, go_to(theater), []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, low_budget.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, low_budget, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(theater), go_to_bar).\ncomplement(go_to_bar, go_to(theater)).\ncomplement(new_restaurant_to_try, low_budget).\ncomplement(low_budget, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I go to the bar. If I have a low budget, I go to the theater. But if I have both, I prefer to go to the bar, however, if there is an unexpected guest, I prefer to go to the theater. If I got a bonus, I prefer to go to the bar. If it's afternoon, I prefer to go to the theater. If the boss is in the office, I prefer to go to the bar.\""
    },
    {
        "Example Number": 754,
        "Gorgias Code": ":- dynamic feeling_sick/0, tax_refund/0, invitation_from_friend/0\nrule(r1, read_book, []) :- feeling_sick.\nrule(r2, swim_session, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, read_book).\ncomplement(read_book, swim_session).",
        "NL Translation": "If feeling sick, I either read a book or attend a swim session. Generally, I prefer to read a book, but if there is a tax refund, I prefer to attend a swim session. However, if there is an invitation from a friend, I prefer to read a book. I cannot at the same time attend a swim session and read a book."
    },
    {
        "Example Number": 317,
        "Gorgias Code": ":- dynamic feeling_sick/0.\nrule(r1, go_to(park), []) :- feeling_sick.\nrule(r2, ride_bike, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\ncomplement(ride_bike, go_to(park)).\ncomplement(go_to(park), ride_bike).",
        "NL Translation": "When feeling sick, I go to the park or ride a bike. I prefer to go to the park over riding a bike. I cannot go to the park and ride a bike at the same time."
    },
    {
        "Example Number": 949,
        "Gorgias Code": ":- dynamic feeling_sick/0, birthday_today/0, party_invitation/0, windy_day/0, subscription_due/0.\nrule(r1, buy_groceries, []) :- feeling_sick.\nrule(r2, yoga_session, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, birthday_today.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, birthday_today, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- subscription_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(yoga_session, buy_groceries).\ncomplement(buy_groceries, yoga_session).\ncomplement(feeling_sick, birthday_today).\ncomplement(birthday_today, feeling_sick).",
        "NL Translation": "\"If I am feeling sick, I buy groceries. If it's my birthday today, I attend a yoga session. But if I am feeling sick and it's my birthday today, I prefer to buy groceries, however if it's also lunch time I prefer the yoga session. I can't at the same time buy groceries and attend a yoga session. If there is a party invitation, I prefer the yoga session. If it's a windy day, I prefer to buy groceries. If my subscription is due, I prefer to buy groceries over attending a yoga session.\""
    },
    {
        "Example Number": 14,
        "Gorgias Code": ":- dynamic party_invitation/0, school_reunion/0, friend_in_town/0.\nrule(r1, cycling_session, []) :- party_invitation.\nrule(r2, go_to(theater), []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- party_invitation, school_reunion.\nrule(p2, prefer(r2, r1), []) :- party_invitation, school_reunion, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), cycling_session).\ncomplement(cycling_session, go_to(theater)).\ncomplement(party_invitation, school_reunion).\ncomplement(school_reunion, party_invitation).",
        "NL Translation": "If there is a party invitation, I have a cycling session. If there is a school reunion, I go to the theater. If I have both a party invitation and a school reunion, I prefer to have a cycling session; however, if there is also an urgent deadline, I prefer to go to the theater. If a friend is in town, I prefer to have a cycling session over going to the theater."
    },
    {
        "Example Number": 182,
        "Gorgias Code": ":- dynamic family_gathering/0, new_restaurant_to_try/0.\nrule(r1, make_coffee, []) :- family_gathering.\nrule(r2, go_to(theater), []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- family_gathering, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- family_gathering, new_restaurant_to_try, client_feedback.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(theater), make_coffee).\ncomplement(make_coffee, go_to(theater)).\ncomplement(family_gathering, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, family_gathering).",
        "NL Translation": "\"If there is a family gathering, I make coffee. If there is a new restaurant to try, I go to the theater. But if both are present, I prefer to make coffee; however, if there is also client feedback, I prefer to go to the theater. I can't at the same time make coffee and go to the theater, and family gathering and new restaurant to try are not compatible.\""
    },
    {
        "Example Number": 284,
        "Gorgias Code": ":- dynamic team_project_due/0, rainy_day/0, networking_event/0, birthday_today/0, low_budget/0.\nrule(r1, submit_timesheet, []) :- team_project_due.\nrule(r2, finish_report, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- team_project_due, rainy_day.\nrule(p2, prefer(r2, r1), []) :- team_project_due, rainy_day, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- low_budget.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, submit_timesheet).\ncomplement(submit_timesheet, finish_report).\ncomplement(team_project_due, rainy_day).\ncomplement(rainy_day, team_project_due).",
        "NL Translation": "\"If there is a team project due, I submit my timesheet. If it's a rainy day, I finish the report. If both the team project is due and it's a rainy day, I prefer to submit my timesheet; however, if there is also a medical appointment, I prefer to finish the report. If there is a networking event, I prefer to submit my timesheet. If there is a birthday today, I prefer to finish the report. If I have a low budget, I prefer to submit my timesheet over finishing the report.\""
    },
    {
        "Example Number": 229,
        "Gorgias Code": ":- dynamic job_interview/0, party_invitation/0, expensive_event/0\nrule(r1, go_to(cinema), []) :- job_interview.\nrule(r2, use_subway, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, go_to(cinema)).\ncomplement(go_to(cinema), use_subway).",
        "NL Translation": "If there is a job interview, I go to the cinema or use the subway. Generally, I prefer to go to the cinema, but if there is a party invitation, I prefer to use the subway. However, if it is an expensive event, I prefer to go to the cinema. I can't at the same time go to the cinema and use the subway."
    },
    {
        "Example Number": 173,
        "Gorgias Code": ":- dynamic deadline_missed/0, urgent_deadline/0\nrule(r1, go_to(theater), []) :- deadline_missed.\nrule(r2, attend_workshop, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, go_to(theater)).\ncomplement(go_to(theater), attend_workshop).",
        "NL Translation": "If the deadline is missed, I go to the theater. If the deadline is missed, I attend a workshop. Generally, I prefer to go to the theater, but if there is an urgent deadline, I prefer to attend a workshop. I can't at the same time go to the theater and attend a workshop."
    },
    {
        "Example Number": 821,
        "Gorgias Code": ":- dynamic moving_house/0, feeling_sick/0, birthday_today/0.\nrule(r1, travel_abroad, []) :- moving_house.\nrule(r2, rent_car, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- moving_house, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- moving_house, feeling_sick, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, travel_abroad).\ncomplement(travel_abroad, rent_car).\ncomplement(moving_house, feeling_sick).\ncomplement(feeling_sick, moving_house).",
        "NL Translation": "\"If I am moving house, I travel abroad. If I am feeling sick, I rent a car. But if I am both moving house and feeling sick, I prefer to travel abroad; however, if I also have a medical appointment, I prefer to rent a car. I can't at the same time rent a car and travel abroad, and moving house and feeling sick are not compatible. If it's my birthday today, I prefer to travel abroad over renting a car.\""
    },
    {
        "Example Number": 966,
        "Gorgias Code": ":- dynamic early_morning/0, new_restaurant_to_try/0, family_emergency/0, project_extension/0, hot_day/0.\nrule(r1, organize_workspace, []) :- early_morning.\nrule(r2, prepare_report, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- early_morning, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- early_morning, new_restaurant_to_try, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hot_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(prepare_report, organize_workspace).\ncomplement(organize_workspace, prepare_report).\ncomplement(early_morning, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, early_morning).",
        "NL Translation": "If it is early morning, I organize my workspace. If there is a new restaurant to try, I prepare a report. If both are true, I prefer to organize my workspace, but if it's also a humid day, I prefer to prepare a report. In case of a family emergency, I prefer to organize my workspace. If there is a project extension, I prefer to prepare a report. On a hot day, I prefer to organize my workspace over preparing a report. If there is a project extension, I prefer to organize my workspace over preparing a report."
    },
    {
        "Example Number": 476,
        "Gorgias Code": ":- dynamic boss_in_office/0, hail_storm/0.\nrule(r1, take_picnic, []) :- boss_in_office.\nrule(r2, go_shopping, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, hail_storm.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, hail_storm, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, take_picnic).\ncomplement(take_picnic, go_shopping).\ncomplement(boss_in_office, hail_storm).\ncomplement(hail_storm, boss_in_office).",
        "NL Translation": "If the boss is in the office, I take a picnic. If there is a hail storm, I go shopping. But if both the boss is in the office and there is a hail storm, I prefer to take a picnic. However, if it's also my wedding anniversary, I prefer to go shopping."
    },
    {
        "Example Number": 915,
        "Gorgias Code": ":- dynamic got_bonus/0, medical_appointment/0, afternoon/0\nrule(r1, use_subway, []) :- got_bonus.\nrule(r2, explore_city, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, use_subway).\ncomplement(use_subway, explore_city).",
        "NL Translation": "\"If I got a bonus, I use the subway or explore the city. Generally, I prefer to use the subway but if I have a medical appointment, I prefer to explore the city. I can't at the same time use the subway and explore the city, and if it is in the afternoon, I prefer to use the subway.\""
    },
    {
        "Example Number": 129,
        "Gorgias Code": ":- dynamic discount_on_flight/0, school_reunion/0\nrule(r1, read_book, []) :- discount_on_flight.\nrule(r2, host_dinner_party, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, read_book).\ncomplement(read_book, host_dinner_party).",
        "NL Translation": "If there is a discount on the flight, I read a book or host a dinner party. Generally, I prefer to read a book but if there is a school reunion, I prefer to host a dinner party. I cannot do both hosting a dinner party and reading a book."
    },
    {
        "Example Number": 349,
        "Gorgias Code": ":- dynamic subscription_due/0.\nrule(r1, read_book, []) :- subscription_due.\nrule(r2, plan_meals, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(plan_meals, read_book).\ncomplement(read_book, plan_meals).",
        "NL Translation": "When subscription is due, I read a book or plan meals. I generally prefer to read a book over planning meals. I cannot do both at the same time."
    },
    {
        "Example Number": 101,
        "Gorgias Code": ":- dynamic tax_refund/0, cloudy_day/0, invitation_from_friend/0, afternoon/0, networking_event/0.\nrule(r1, visit_family, []) :- tax_refund.\nrule(r2, attend_concert, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- tax_refund, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- tax_refund, cloudy_day, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- networking_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, visit_family).\ncomplement(visit_family, attend_concert).\ncomplement(tax_refund, cloudy_day).\ncomplement(cloudy_day, tax_refund).",
        "NL Translation": "\"If I have a tax refund, I visit family. If it's a cloudy day, I attend a concert. But if I have both, I prefer to visit family; however, if it's also a morning rush, I prefer to attend a concert. If I have an invitation from a friend, I prefer to attend a concert. If it's in the afternoon, I prefer to visit family. If there is a networking event, I prefer to visit family over attending a concert. I can't at the same time visit family and attend a concert, and tax refund and cloudy day are not compatible.\""
    },
    {
        "Example Number": 978,
        "Gorgias Code": ":- dynamic networking_event/0, friend_in_town/0, birthday_today/0\nrule(r1, swim_session, []) :- networking_event.\nrule(r2, drive_car, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, swim_session).\ncomplement(swim_session, drive_car).",
        "NL Translation": "If there is a networking event, I can have a swim session or drive a car. Generally, I prefer to have a swim session, but if a friend is in town, I prefer to drive a car. If it is my birthday today, I prefer to have a swim session. I cannot have a swim session and drive a car at the same time."
    },
    {
        "Example Number": 580,
        "Gorgias Code": ":- dynamic rainy_day/0.\nrule(r1, dispose_trash, []) :- rainy_day.\nrule(r2, take_train, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(take_train, dispose_trash).\ncomplement(dispose_trash, take_train).",
        "NL Translation": "When it is a rainy day, I dispose of trash or take the train. Generally, I prefer to dispose of trash over taking the train."
    },
    {
        "Example Number": 770,
        "Gorgias Code": ":- dynamic snowstorm/0, community_event/0, party_invitation/0\nrule(r1, visit_museum, []) :- snowstorm.\nrule(r2, make_coffee, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, visit_museum).\ncomplement(visit_museum, make_coffee).",
        "NL Translation": "If there is a snowstorm, I either visit the museum or make coffee. Generally, I prefer to visit the museum but if there is a community event, I prefer to make coffee. However, if there is a party invitation, I prefer to visit the museum. I cannot visit the museum and make coffee at the same time."
    },
    {
        "Example Number": 898,
        "Gorgias Code": ":- dynamic urgent_deadline/0, financial_aid/0, project_extension/0\nrule(r1, explore_city, []) :- urgent_deadline.\nrule(r2, organize_workspace, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, explore_city).\ncomplement(explore_city, organize_workspace).",
        "NL Translation": "If there is an urgent deadline, I explore the city or organize my workspace. Generally, I prefer to explore the city but if there is financial aid, I prefer to organize my workspace. However, if there is a project extension, I prefer to organize my workspace over exploring the city. I cannot both explore the city and organize my workspace."
    },
    {
        "Example Number": 356,
        "Gorgias Code": ":- dynamic boss_in_office/0, project_extension/0, relationship_break/0.\nrule(r1, dispose_trash, []) :- boss_in_office.\nrule(r2, go_to(theater), []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, project_extension.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, project_extension, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), dispose_trash).\ncomplement(dispose_trash, go_to(theater)).\ncomplement(boss_in_office, project_extension).\ncomplement(project_extension, boss_in_office).",
        "NL Translation": "\"When the boss is in the office, I dispose of the trash. If there is a project extension, I go to the theater. If both conditions are met, I prefer to dispose of the trash; however, if there is also a party invitation, I prefer to go to the theater. If there is a relationship break, I prefer to dispose of the trash over going to the theater. I cannot dispose of the trash and go to the theater at the same time, and having the boss in the office and a project extension are not compatible.\""
    },
    {
        "Example Number": 654,
        "Gorgias Code": ":- dynamic extended_work_hours/0, boss_in_office/0, holiday_season/0\nrule(r1, go_to(theater), []) :- extended_work_hours.\nrule(r2, take_train, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, go_to(theater)).\ncomplement(go_to(theater), take_train).",
        "NL Translation": "If I have extended work hours, I go to the theater or take the train. Generally, I prefer to go to the theater, but if the boss is in the office, I prefer to take the train. If it is the holiday season, I prefer to take the train. I cannot go to the theater and take the train at the same time."
    },
    {
        "Example Number": 388,
        "Gorgias Code": ":- dynamic team_project_due/0, important_meeting/0.\nrule(r1, attend_workshop, []) :- team_project_due.\nrule(r2, go_to(restaurant), []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- team_project_due, important_meeting.\nrule(p2, prefer(r2, r1), []) :- team_project_due, important_meeting, holiday_season.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), attend_workshop).\ncomplement(attend_workshop, go_to(restaurant)).\ncomplement(team_project_due, important_meeting).\ncomplement(important_meeting, team_project_due).",
        "NL Translation": "If there is a team project due, I attend a workshop. If there is an important meeting, I go to a restaurant. If I have both a team project due and an important meeting, I prefer to attend the workshop; however, if it is also the holiday season, I prefer to go to a restaurant. I cannot attend a workshop and go to a restaurant at the same time, and team project due and important meeting are not compatible."
    },
    {
        "Example Number": 864,
        "Gorgias Code": ":- dynamic boss_in_office/0, concert_nearby/0, unexpected_expense/0\nrule(r1, pay_bills, []) :- boss_in_office.\nrule(r2, review_documents, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\ncomplement(review_documents, pay_bills).\ncomplement(pay_bills, review_documents).",
        "NL Translation": "If the boss is in the office, I pay bills or review documents. Generally, I prefer to pay bills but if there is a concert nearby, I prefer to review documents. However, if there is an unexpected expense, I prefer to review documents over paying bills. I cannot at the same time pay bills and review documents."
    },
    {
        "Example Number": 967,
        "Gorgias Code": ":- dynamic feeling_sick/0, team_project_due/0, night_time/0, boss_in_office/0, windy_day/0.\nrule(r1, go_to(park), []) :- feeling_sick.\nrule(r2, drive_car, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, team_project_due.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, team_project_due, family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(drive_car, go_to(park)).\ncomplement(go_to(park), drive_car).\ncomplement(feeling_sick, team_project_due).\ncomplement(team_project_due, feeling_sick).",
        "NL Translation": "If feeling sick, go to the park. If a team project is due, drive a car. Prefer going to the park over driving a car if feeling sick and a team project is due. Prefer driving a car over going to the park if feeling sick, a team project is due, and there is a family gathering. Prefer going to the park over driving a car if it is night time. Prefer driving a car over going to the park if the boss is in the office. Prefer going to the park over driving a car if it is a windy day."
    },
    {
        "Example Number": 910,
        "Gorgias Code": ":- dynamic morning_rush/0, birthday_today/0\nrule(r1, go_to_bar, []) :- morning_rush.\nrule(r2, take_bus, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_bus, go_to_bar).\ncomplement(go_to_bar, take_bus).",
        "NL Translation": "When there is a morning rush, I go to the bar or take the bus. Generally, I prefer to go to the bar but if it is my birthday today, I prefer to take the bus."
    },
    {
        "Example Number": 363,
        "Gorgias Code": ":- dynamic expensive_event/0, boss_in_office/0, snowstorm/0, family_gathering/0, team_project_due/0.\nrule(r1, buy_groceries, []) :- expensive_event.\nrule(r2, yoga_session, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- expensive_event, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- expensive_event, boss_in_office, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- team_project_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(yoga_session, buy_groceries).\ncomplement(buy_groceries, yoga_session).\ncomplement(expensive_event, boss_in_office).\ncomplement(boss_in_office, expensive_event).",
        "NL Translation": "\"If there is an expensive event, I buy groceries. If the boss is in the office, I attend a yoga session. If both are true, I prefer to buy groceries; however, if it's also the morning rush, I prefer the yoga session. In case of a snowstorm, I prefer the yoga session over buying groceries. If there is a family gathering, I prefer buying groceries over the yoga session. If there is a team project due, I prefer buying groceries over the yoga session. If there is a snowstorm, I prefer buying groceries over the yoga session.\""
    },
    {
        "Example Number": 371,
        "Gorgias Code": ":- dynamic team_project_due/0, financial_aid/0.\nrule(r1, go_to(theater), []) :- team_project_due.\nrule(r2, ride_bike, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- team_project_due, financial_aid.\nrule(p2, prefer(r2, r1), []) :- team_project_due, financial_aid, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(ride_bike, go_to(theater)).\ncomplement(go_to(theater), ride_bike).\ncomplement(team_project_due, financial_aid).\ncomplement(financial_aid, team_project_due).",
        "NL Translation": "\"If there is a team project due, I go to the theater. If I have financial aid, I ride a bike. However, if I have both a team project due and financial aid, I prefer to go to the theater. But if there is also a hail storm, I prefer to ride a bike. I can't at the same time ride a bike and go to the theater, and having a team project due and financial aid are not compatible.\""
    },
    {
        "Example Number": 41,
        "Gorgias Code": ":- dynamic good_weather/0, early_morning/0\nrule(r1, go_to(cinema), []) :- good_weather.\nrule(r2, go_shopping, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, go_to(cinema)).\ncomplement(go_to(cinema), go_shopping).",
        "NL Translation": "When it is good weather, I either go to the cinema or go shopping. Generally, I prefer to go to the cinema but if it is early morning, I prefer to go shopping. I can't at the same time go to the cinema and go shopping."
    },
    {
        "Example Number": 493,
        "Gorgias Code": ":- dynamic expensive_event/0, discount_on_flight/0\nrule(r1, cycling_session, []) :- expensive_event.\nrule(r2, visit_museum, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, cycling_session).\ncomplement(cycling_session, visit_museum).",
        "NL Translation": "When there is an expensive event, I can either attend a cycling session or visit a museum. Generally, I prefer to attend a cycling session but if there is a discount on the flight, I prefer to visit a museum."
    },
    {
        "Example Number": 606,
        "Gorgias Code": ":- dynamic expensive_event/0, community_event/0, moving_house/0.\nrule(r1, go_to(cinema), []) :- expensive_event.\nrule(r2, drive_car, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- expensive_event, community_event.\nrule(p2, prefer(r2, r1), []) :- expensive_event, community_event, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, go_to(cinema)).\ncomplement(go_to(cinema), drive_car).\ncomplement(expensive_event, community_event).\ncomplement(community_event, expensive_event).",
        "NL Translation": "If there is an expensive event, I go to the cinema. If there is a community event, I drive the car. If both are present, I prefer to go to the cinema; however, if there is also a party invitation, I prefer to drive the car. I cannot go to the cinema and drive the car at the same time. If I am moving house, I prefer to go to the cinema over driving the car."
    },
    {
        "Example Number": 339,
        "Gorgias Code": ":- dynamic cloudy_day/0, windy_day/0, boss_in_office/0\nrule(r1, travel_abroad, []) :- cloudy_day.\nrule(r2, do_laundry, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, travel_abroad).\ncomplement(travel_abroad, do_laundry).",
        "NL Translation": "\"When it is a cloudy day, I can either travel abroad or do laundry. Generally, I prefer to travel abroad but if it is a windy day, I prefer to do laundry. However, if the boss is in the office, I prefer to do laundry. I can't at the same time do laundry and travel abroad.\""
    },
    {
        "Example Number": 816,
        "Gorgias Code": ":- dynamic urgent_deadline/0, holiday_season/0, family_gathering/0, night_time/0, windy_day/0.\nrule(r1, use_subway, []) :- urgent_deadline.\nrule(r2, make_coffee, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, holiday_season.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, holiday_season, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(make_coffee, use_subway).\ncomplement(use_subway, make_coffee).\ncomplement(urgent_deadline, holiday_season).\ncomplement(holiday_season, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I use the subway. If it's the holiday season, I make coffee. If both the urgent deadline and holiday season are present, I prefer to use the subway; however, if there is a vacation planned, I prefer to make coffee. If there is a family gathering, I prefer to use the subway. If it's night time, I prefer to make coffee. If it's a windy day, I prefer to use the subway over making coffee."
    },
    {
        "Example Number": 988,
        "Gorgias Code": ":- dynamic relationship_break/0, subscription_due/0, lunch_time/0\nrule(r1, swim_session, []) :- relationship_break.\nrule(r2, organize_workspace, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, swim_session).\ncomplement(swim_session, organize_workspace).",
        "NL Translation": "If there is a relationship break, I either have a swim session or organize my workspace. Generally, I prefer to have a swim session, but if there is a subscription due, I prefer to organize my workspace. However, if it is lunchtime, I prefer to have a swim session."
    },
    {
        "Example Number": 740,
        "Gorgias Code": ":- dynamic medical_appointment/0, vacation_planned/0, invitation_from_friend/0\nrule(r1, go_to_bar, []) :- medical_appointment.\nrule(r2, drive_car, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, go_to_bar).\ncomplement(go_to_bar, drive_car).",
        "NL Translation": "\"If I have a medical appointment, I go to the bar. If I have a medical appointment, I drive the car. Generally, I prefer to go to the bar but if I have a vacation planned, I prefer to drive the car. If I have an invitation from a friend, I prefer to go to the bar. I can't at the same time go to the bar and drive the car.\""
    },
    {
        "Example Number": 112,
        "Gorgias Code": ":- dynamic urgent_deadline/0, unexpected_guest/0, windy_day/0, unexpected_expense/0, family_emergency/0.\nrule(r1, go_shopping, []) :- urgent_deadline.\nrule(r2, take_bus, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, unexpected_guest, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_emergency.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_bus, go_shopping).\ncomplement(go_shopping, take_bus).\ncomplement(urgent_deadline, unexpected_guest).\ncomplement(unexpected_guest, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I go shopping. If there is an unexpected guest, I take the bus. If both the urgent deadline and unexpected guest are present, I prefer to go shopping; however, if it is also a hot day, I prefer to take the bus. If it is a windy day, I prefer to take the bus. If there is an unexpected expense, I prefer to go shopping. If there is a family emergency, I prefer to take the bus."
    },
    {
        "Example Number": 407,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, water_plants, []) :- good_investment.\nrule(r2, clean_house, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(clean_house, water_plants).\ncomplement(water_plants, clean_house).",
        "NL Translation": "When there is a good investment, I water plants or clean the house. Generally, I prefer to water plants over cleaning the house."
    },
    {
        "Example Number": 824,
        "Gorgias Code": ":- dynamic lunch_time/0, rainy_day/0, job_interview/0, relationship_break/0, holiday_season/0.\nrule(r1, use_subway, []) :- lunch_time.\nrule(r2, go_to_bar, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- lunch_time, rainy_day.\nrule(p2, prefer(r2, r1), []) :- lunch_time, rainy_day, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- holiday_season.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to_bar, use_subway).\ncomplement(use_subway, go_to_bar).\ncomplement(lunch_time, rainy_day).\ncomplement(rainy_day, lunch_time).",
        "NL Translation": "\"If it is lunch time, I use the subway. If it is a rainy day, I go to the bar. If it is both lunch time and a rainy day, I prefer to use the subway, however, if I also have extended work hours, I prefer to go to the bar. If I have a job interview, I prefer to use the subway. If there is a relationship break, I prefer to go to the bar. If it is the holiday season, I prefer to use the subway over going to the bar.\""
    },
    {
        "Example Number": 418,
        "Gorgias Code": ":- dynamic holiday_season/0, afternoon/0, tax_refund/0\nrule(r1, swim_session, []) :- holiday_season.\nrule(r2, order_taxi, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, swim_session).\ncomplement(swim_session, order_taxi).",
        "NL Translation": "\"If it is holiday season, I have a swim session or order a taxi. Generally, I prefer to have a swim session but if it is in the afternoon, I prefer to order a taxi. However, if there is a tax refund, I prefer to have a swim session. I can't at the same time have a swim session and order a taxi.\""
    },
    {
        "Example Number": 475,
        "Gorgias Code": ":- dynamic client_feedback/0, boss_in_office/0, hail_storm/0.\nrule(r1, evening_walk, []) :- client_feedback.\nrule(r2, do_laundry, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- client_feedback, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- client_feedback, boss_in_office, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, evening_walk).\ncomplement(evening_walk, do_laundry).\ncomplement(client_feedback, boss_in_office).\ncomplement(boss_in_office, client_feedback).",
        "NL Translation": "If there is client feedback, I go for an evening walk. If the boss is in the office, I do laundry. If both client feedback and boss in the office are present, I prefer to go for an evening walk. However, if there is client feedback, the boss is in the office, and I got a bonus, I prefer to do laundry. If there is a hail storm, I prefer to do an evening walk over doing laundry."
    },
    {
        "Example Number": 689,
        "Gorgias Code": ":- dynamic afternoon/0, vacation_planned/0, cloudy_day/0, rainy_day/0, moving_house/0.\nrule(r1, travel_abroad, []) :- afternoon.\nrule(r2, finish_report, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- afternoon, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- afternoon, vacation_planned, tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, travel_abroad).\ncomplement(travel_abroad, finish_report).\ncomplement(afternoon, vacation_planned).\ncomplement(vacation_planned, afternoon).",
        "NL Translation": "\"If it is afternoon, I travel abroad. If I have a vacation planned, I finish the report. I prefer to travel abroad over finishing the report if it is both afternoon and I have a vacation planned. However, if there is a tax refund, I prefer to finish the report over traveling abroad. If it is a cloudy day, I prefer to finish the report over traveling abroad. If it is a rainy day, I prefer to travel abroad over finishing the report. If I am moving house, I prefer to finish the report over traveling abroad. If it is a cloudy day, I prefer to finish the report over traveling abroad.\""
    },
    {
        "Example Number": 28,
        "Gorgias Code": ":- dynamic unexpected_expense/0, humid_day/0, community_event/0, dusk/0, vacation_planned/0.\nrule(r1, travel_abroad, []) :- unexpected_expense.\nrule(r2, make_coffee, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, humid_day.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, humid_day, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(make_coffee, travel_abroad).\ncomplement(travel_abroad, make_coffee).\ncomplement(unexpected_expense, humid_day).\ncomplement(humid_day, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I travel abroad. On a humid day, I make coffee. I prefer to travel abroad over making coffee if there is an unexpected expense and it's a humid day. If there is a community event, I prefer making coffee over traveling abroad. If it's dusk, I prefer making coffee over traveling abroad. If I have a vacation planned, I prefer traveling abroad over making coffee."
    },
    {
        "Example Number": 478,
        "Gorgias Code": ":- dynamic snowstorm/0, boss_in_office/0, hail_storm/0\nrule(r1, attend_workshop, []) :- snowstorm.\nrule(r2, cycling_session, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, attend_workshop).\ncomplement(attend_workshop, cycling_session).",
        "NL Translation": "\"If there is a snowstorm, I attend a workshop or a cycling session. Generally, I prefer to attend a workshop but if the boss is in the office, I prefer a cycling session. However, if there is a hail storm, I prefer a cycling session over attending a workshop. I cannot attend a workshop and a cycling session at the same time.\""
    },
    {
        "Example Number": 63,
        "Gorgias Code": ":- dynamic networking_event/0, got_bonus/0\nrule(r1, give_presentation, []) :- networking_event.\nrule(r2, finish_report, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\ncomplement(finish_report, give_presentation).\ncomplement(give_presentation, finish_report).",
        "NL Translation": "If there is a networking event, I give a presentation or finish a report. Generally, I prefer to give a presentation but if I got a bonus, I prefer to finish a report. I can't at the same time give a presentation and finish a report."
    },
    {
        "Example Number": 947,
        "Gorgias Code": ":- dynamic boss_in_office/0, medical_appointment/0.\nrule(r1, clean_house, []) :- boss_in_office.\nrule(r2, yoga_session, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, medical_appointment, party_invitation.\nrule(c1, prefer(p2, p1), []).\ncomplement(yoga_session, clean_house).\ncomplement(clean_house, yoga_session).\ncomplement(boss_in_office, medical_appointment).\ncomplement(medical_appointment, boss_in_office).",
        "NL Translation": "If the boss is in the office, I clean the house. If I have a medical appointment, I attend a yoga session. However, if both the boss is in the office and I have a medical appointment, I prefer to clean the house. If there is also a party invitation, I prefer to attend a yoga session. I cannot clean the house and attend a yoga session at the same time, and having the boss in the office and a medical appointment are not compatible."
    },
    {
        "Example Number": 257,
        "Gorgias Code": ":- dynamic rainy_day/0, night_time/0, extended_work_hours/0\nrule(r1, go_to(theater), []) :- rainy_day.\nrule(r2, update_project_plan, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, go_to(theater)).\ncomplement(go_to(theater), update_project_plan).",
        "NL Translation": "\"If it is a rainy day, I go to the theater or update the project plan. Generally, I prefer to go to the theater but if it is night time, I prefer to update the project plan. I prefer to update the project plan over going to the theater if I have extended work hours. However, if I have extended work hours, I prefer to go to the theater over updating the project plan.\""
    },
    {
        "Example Number": 432,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, book_ride_share, []) :- team_project_due.\nrule(r2, morning_run, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(morning_run, book_ride_share).\ncomplement(book_ride_share, morning_run).",
        "NL Translation": "If there is a team project due, I book a ride share. If there is a team project due, I go for a morning run. I prefer to book a ride share over going for a morning run. I cannot book a ride share and go for a morning run at the same time."
    },
    {
        "Example Number": 18,
        "Gorgias Code": ":- dynamic weekend/0.\nrule(r1, water_plants, []) :- weekend.\nrule(r2, use_subway, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\ncomplement(use_subway, water_plants).\ncomplement(water_plants, use_subway).",
        "NL Translation": "When it is the weekend, I water plants or use the subway. Generally, I prefer to water plants over using the subway. I can't at the same time water plants and use the subway."
    },
    {
        "Example Number": 772,
        "Gorgias Code": ":- dynamic discount_on_flight/0, afternoon/0, wedding_anniversary/0, unexpected_expense/0, good_weather/0.\nrule(r1, go_to(park), []) :- discount_on_flight.\nrule(r2, attend_concert, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, afternoon.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, afternoon, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_weather.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, go_to(park)).\ncomplement(go_to(park), attend_concert).\ncomplement(discount_on_flight, afternoon).\ncomplement(afternoon, discount_on_flight).",
        "NL Translation": "If there is a discount on the flight, I go to the park. If it is the afternoon, I attend a concert. If there is both a discount on the flight and it is the afternoon, I prefer to go to the park. However, if there is an urgent deadline, I prefer to attend a concert. If it is my wedding anniversary, I prefer to go to the park. If there is an unexpected expense, I prefer to attend a concert. I can't at the same time attend a concert and go to the park. Good weather is preferred over an unexpected expense."
    },
    {
        "Example Number": 118,
        "Gorgias Code": ":- dynamic team_project_due/0, unexpected_expense/0.\nrule(r1, plan_meals, []) :- team_project_due.\nrule(r2, morning_run, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- team_project_due, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- team_project_due, unexpected_expense, networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(morning_run, plan_meals).\ncomplement(plan_meals, morning_run).\ncomplement(team_project_due, unexpected_expense).\ncomplement(unexpected_expense, team_project_due).",
        "NL Translation": "\"If I have a team project due, I plan meals. If there is an unexpected expense, I go for a morning run. But if I have both, I prefer to plan meals; however, if there is also a networking event, I prefer to go for a morning run. I can't at the same time plan meals and go for a morning run, and having a team project due and an unexpected expense are not compatible.\""
    },
    {
        "Example Number": 181,
        "Gorgias Code": ":- dynamic client_feedback/0, medical_appointment/0, deadline_missed/0, dusk/0, hail_storm/0.\nrule(r1, update_project_plan, []) :- client_feedback.\nrule(r2, evening_walk, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- client_feedback, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- client_feedback, medical_appointment, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hail_storm.\nrule(c5, prefer(c4, c3), []).\ncomplement(evening_walk, update_project_plan).\ncomplement(update_project_plan, evening_walk).\ncomplement(client_feedback, medical_appointment).\ncomplement(medical_appointment, client_feedback).",
        "NL Translation": "\"If there is client feedback, I update the project plan. If I have a medical appointment, I go for an evening walk. If I have both client feedback and a medical appointment, I prefer to update the project plan; however, if there is also a new restaurant to try, I prefer to go for an evening walk. If the deadline is missed, I prefer to update the project plan. If it is dusk, I prefer to go for an evening walk. If there is a hail storm, I prefer to update the project plan over going for an evening walk.\""
    },
    {
        "Example Number": 765,
        "Gorgias Code": ":- dynamic birthday_today/0, medical_appointment/0, unexpected_guest/0, team_project_due/0, urgent_deadline/0.\nrule(r1, reply_emails, []) :- birthday_today.\nrule(r2, attend_concert, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- birthday_today, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- birthday_today, medical_appointment, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, reply_emails).\ncomplement(reply_emails, attend_concert).\ncomplement(birthday_today, medical_appointment).\ncomplement(medical_appointment, birthday_today).",
        "NL Translation": "\"If it is my birthday today, I reply to emails. If I have a medical appointment, I attend a concert. If both my birthday is today and I have a medical appointment, I prefer to reply to emails; however, if my relationship has broken, I prefer to attend a concert. If an unexpected guest arrives, I prefer to reply to emails. If there is a team project due, I prefer to attend a concert. If there is an urgent deadline, I prefer to reply to emails over attending a concert.\""
    },
    {
        "Example Number": 509,
        "Gorgias Code": ":- dynamic afternoon/0, hot_day/0, family_gathering/0\nrule(r1, drive_car, []) :- afternoon.\nrule(r2, cook_dinner, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, drive_car).\ncomplement(drive_car, cook_dinner).",
        "NL Translation": "\"When it is afternoon, I drive the car or cook dinner. Generally, I prefer to drive the car but if it is a hot day I prefer to cook dinner. However, if there is a family gathering, I prefer to cook dinner. I can't at the same time drive the car and cook dinner.\""
    },
    {
        "Example Number": 708,
        "Gorgias Code": ":- dynamic unexpected_guest/0, dusk/0, deadline_missed/0, relationship_break/0, networking_event/0.\nrule(r1, go_to(park), []) :- unexpected_guest.\nrule(r2, ride_bike, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, dusk.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, dusk, family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- networking_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(ride_bike, go_to(park)).\ncomplement(go_to(park), ride_bike).\ncomplement(unexpected_guest, dusk).\ncomplement(dusk, unexpected_guest).",
        "NL Translation": "\"If there is an unexpected guest, I go to the park. If it is dusk, I ride a bike. I prefer to go to the park over riding a bike if there is an unexpected guest and it is dusk. However, if there is a family gathering, I prefer to ride a bike. If I miss a deadline, I prefer going to the park over riding a bike. If there is a relationship break, I prefer riding a bike over going to the park. If there is a networking event, I prefer going to the park over riding a bike.\""
    },
    {
        "Example Number": 736,
        "Gorgias Code": ":- dynamic dusk/0.\nrule(r1, go_shopping, []) :- dusk.\nrule(r2, go_gym, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_gym, go_shopping).\ncomplement(go_shopping, go_gym).",
        "NL Translation": "When it is dusk, I either go shopping or go to the gym. Generally, I prefer to go shopping over going to the gym. I can't at the same time go shopping and go to the gym."
    },
    {
        "Example Number": 379,
        "Gorgias Code": ":- dynamic unexpected_expense/0, networking_event/0, team_project_due/0, tax_refund/0, lunch_time/0.\nrule(r1, give_presentation, []) :- unexpected_expense.\nrule(r2, submit_timesheet, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, networking_event.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, networking_event, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- lunch_time.\nrule(c5, prefer(c4, c3), []).\ncomplement(submit_timesheet, give_presentation).\ncomplement(give_presentation, submit_timesheet).\ncomplement(unexpected_expense, networking_event).\ncomplement(networking_event, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I give a presentation. If there is a networking event, I submit a timesheet. I prefer to give a presentation over submitting a timesheet if there is an unexpected expense and a networking event. However, if there is also a relationship break, I prefer to submit a timesheet. If there is a team project due, I prefer to give a presentation over submitting a timesheet. If there is a tax refund, I prefer to submit a timesheet. If it's lunchtime, I prefer to submit a timesheet over giving a presentation."
    },
    {
        "Example Number": 647,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, drive_car, []) :- job_interview.\nrule(r2, update_project_plan, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(update_project_plan, drive_car).\ncomplement(drive_car, update_project_plan).",
        "NL Translation": "When there is a job interview, I either drive the car or update the project plan. I prefer to drive the car over updating the project plan. I cannot drive the car and update the project plan at the same time."
    },
    {
        "Example Number": 538,
        "Gorgias Code": ":- dynamic moving_house/0, good_investment/0.\nrule(r1, do_laundry, []) :- moving_house.\nrule(r2, take_train, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- moving_house, good_investment.\nrule(p2, prefer(r2, r1), []) :- moving_house, good_investment, humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, do_laundry).\ncomplement(do_laundry, take_train).\ncomplement(moving_house, good_investment).\ncomplement(good_investment, moving_house).",
        "NL Translation": "\"If I am moving house, I do laundry. If it is a good investment, I take the train. But if I am both moving house and it is a good investment, I prefer to do laundry; however, if it's also a humid day, I prefer to take the train. I can't at the same time do laundry and take the train, and moving house and good investment are not compatible.\""
    },
    {
        "Example Number": 109,
        "Gorgias Code": ":- dynamic tax_refund/0, feeling_sick/0\nrule(r1, use_subway, []) :- tax_refund.\nrule(r2, book_ride_share, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, use_subway).\ncomplement(use_subway, book_ride_share).",
        "NL Translation": "When I have a tax refund, I use the subway or book a ride share. Generally, I prefer to use the subway but if I am feeling sick, I prefer to book a ride share. I can't at the same time use the subway and book a ride share."
    },
    {
        "Example Number": 638,
        "Gorgias Code": ":- dynamic tax_refund/0.\nrule(r1, rent_car, []) :- tax_refund.\nrule(r2, update_project_plan, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\ncomplement(update_project_plan, rent_car).\ncomplement(rent_car, update_project_plan).",
        "NL Translation": "If I have a tax refund, I rent a car. If I have a tax refund, I update the project plan. I prefer to rent a car over updating the project plan."
    },
    {
        "Example Number": 350,
        "Gorgias Code": ":- dynamic concert_nearby/0, new_restaurant_to_try/0, family_emergency/0.\nrule(r1, go_to(restaurant), []) :- concert_nearby.\nrule(r2, dispose_trash, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, new_restaurant_to_try, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(dispose_trash, go_to(restaurant)).\ncomplement(go_to(restaurant), dispose_trash).\ncomplement(concert_nearby, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, concert_nearby).",
        "NL Translation": "\"If there is a concert nearby, I go to the restaurant. If there is a new restaurant to try, I dispose trash. But if both are available, I prefer to go to the restaurant; however, if it's also in the afternoon, I prefer to dispose trash. I can't at the same time go to the restaurant and dispose trash, and concert nearby and new restaurant to try aren't compatible.\""
    },
    {
        "Example Number": 185,
        "Gorgias Code": ":- dynamic weekend/0, family_gathering/0, humid_day/0.\nrule(r1, take_bus, []) :- weekend.\nrule(r2, take_picnic, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- weekend, family_gathering.\nrule(p2, prefer(r2, r1), []) :- weekend, family_gathering, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, take_bus).\ncomplement(take_bus, take_picnic).\ncomplement(weekend, family_gathering).\ncomplement(family_gathering, weekend).",
        "NL Translation": "\"When it is the weekend, I take the bus. When there is a family gathering, I take a picnic. If it's both the weekend and a family gathering, I prefer to take a picnic, but if there is also a school reunion, I prefer to take the bus. If it's a humid day, I prefer to take the bus over taking a picnic. I cannot take both a picnic and the bus, and the weekend and family gathering are not compatible.\""
    },
    {
        "Example Number": 410,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, urgent_deadline/0, moving_house/0\nrule(r1, cycling_session, []) :- invitation_from_friend.\nrule(r2, finish_report, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, cycling_session).\ncomplement(cycling_session, finish_report).",
        "NL Translation": "\"If there is an invitation from a friend, I have a cycling session or finish a report. Generally, I prefer to have a cycling session but if there is an urgent deadline, I prefer to finish the report. However, if I am moving house, I prefer to have a cycling session over finishing the report. I can't at the same time have a cycling session and finish the report.\""
    },
    {
        "Example Number": 888,
        "Gorgias Code": ":- dynamic discount_on_flight/0, night_time/0, afternoon/0\nrule(r1, ride_bike, []) :- discount_on_flight.\nrule(r2, attend_workshop, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, ride_bike).\ncomplement(ride_bike, attend_workshop).",
        "NL Translation": "If there is a discount on the flight, I ride a bike or attend a workshop. Generally, I prefer to ride a bike but if it is night time, I prefer to attend a workshop. However, if it is afternoon, I prefer to ride a bike over attending a workshop."
    },
    {
        "Example Number": 828,
        "Gorgias Code": ":- dynamic vacation_planned/0, financial_aid/0, night_time/0.\nrule(r1, review_documents, []) :- vacation_planned.\nrule(r2, pay_bills, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, financial_aid.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, financial_aid, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, review_documents).\ncomplement(review_documents, pay_bills).\ncomplement(vacation_planned, financial_aid).\ncomplement(financial_aid, vacation_planned).",
        "NL Translation": "If vacation is planned, I review documents. If financial aid is available, I pay bills. If both vacation is planned and financial aid is available, I prefer to review documents, but if there is also a team project due, I prefer to pay bills. If it is night time, I prefer to pay bills over reviewing documents."
    },
    {
        "Example Number": 161,
        "Gorgias Code": ":- dynamic hot_day/0, family_gathering/0, party_invitation/0.\nrule(r1, organize_workspace, []) :- hot_day.\nrule(r2, prepare_report, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- hot_day, family_gathering.\nrule(p2, prefer(r2, r1), []) :- hot_day, family_gathering, client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, organize_workspace).\ncomplement(organize_workspace, prepare_report).\ncomplement(hot_day, family_gathering).\ncomplement(family_gathering, hot_day).",
        "NL Translation": "If it is a hot day, I organize my workspace. If there is a family gathering, I prepare a report. If both a hot day and a family gathering occur, I prefer to organize my workspace, but if there is also client feedback, I prefer to prepare a report. If there is a party invitation, I prefer to organize my workspace over preparing a report."
    },
    {
        "Example Number": 175,
        "Gorgias Code": ":- dynamic good_weather/0, friend_in_town/0, important_meeting/0\nrule(r1, dispose_trash, []) :- good_weather.\nrule(r2, read_book, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(read_book, dispose_trash).\ncomplement(dispose_trash, read_book).",
        "NL Translation": "If it is good weather, I dispose of the trash or read a book. Generally, I prefer to dispose of the trash but if a friend is in town, I prefer to read a book. However, if there is an important meeting, I prefer to dispose of the trash. I can't at the same time dispose of the trash and read a book."
    },
    {
        "Example Number": 482,
        "Gorgias Code": ":- dynamic hail_storm/0, school_reunion/0, windy_day/0\nrule(r1, yoga_session, []) :- hail_storm.\nrule(r2, prepare_report, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, yoga_session).\ncomplement(yoga_session, prepare_report).",
        "NL Translation": "If there is a hail storm, I do a yoga session or prepare a report. Generally, I prefer to do a yoga session but if there is a school reunion, I prefer to prepare a report. I can't do both a yoga session and prepare a report. If it's a windy day, I prefer to prepare a report over doing a yoga session."
    },
    {
        "Example Number": 854,
        "Gorgias Code": ":- dynamic family_gathering/0.\nrule(r1, go_to_bar, []) :- family_gathering.\nrule(r2, ride_bike, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\ncomplement(ride_bike, go_to_bar).\ncomplement(go_to_bar, ride_bike).",
        "NL Translation": "If there is a family gathering, I go to the bar or ride a bike. Generally, I prefer to go to the bar over riding a bike. I can't at the same time ride a bike and go to the bar."
    },
    {
        "Example Number": 909,
        "Gorgias Code": ":- dynamic hot_day/0, lunch_time/0\nrule(r1, attend_concert, []) :- hot_day.\nrule(r2, rent_car, []) :- hot_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, attend_concert).\ncomplement(attend_concert, rent_car).",
        "NL Translation": "If it is a hot day, I attend a concert or rent a car. Generally, I prefer to attend a concert but if it is lunchtime, I prefer to rent a car. I cannot attend a concert and rent a car at the same time."
    },
    {
        "Example Number": 838,
        "Gorgias Code": ":- dynamic unexpected_expense/0, deadline_missed/0, cloudy_day/0.\nrule(r1, pay_bills, []) :- unexpected_expense.\nrule(r2, rent_car, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, deadline_missed, new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, pay_bills).\ncomplement(pay_bills, rent_car).\ncomplement(unexpected_expense, deadline_missed).\ncomplement(deadline_missed, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I pay bills. If a deadline is missed, I rent a car. However, if both occur, I prefer to pay bills; but if there is also a new neighbor, I prefer to rent a car. On a cloudy day, I prefer to pay bills over renting a car."
    },
    {
        "Example Number": 131,
        "Gorgias Code": ":- dynamic discount_on_flight/0, wedding_anniversary/0, expensive_event/0.\nrule(r1, go_to_bar, []) :- discount_on_flight.\nrule(r2, go_gym, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, wedding_anniversary, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, go_to_bar).\ncomplement(go_to_bar, go_gym).\ncomplement(discount_on_flight, wedding_anniversary).\ncomplement(wedding_anniversary, discount_on_flight).",
        "NL Translation": "\"When there is a discount on the flight, I go to the bar. If it's my wedding anniversary, I go to the gym. However, if there is both a discount on the flight and it's my wedding anniversary, I prefer to go to the bar. But if there is also a potential relationship break, I prefer to go to the gym. I can't at the same time go to the bar and go to the gym, and having a discount on the flight and a wedding anniversary are not compatible.\""
    },
    {
        "Example Number": 815,
        "Gorgias Code": ":- dynamic financial_aid/0, community_event/0\nrule(r1, cook_dinner, []) :- financial_aid.\nrule(r2, drive_car, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, cook_dinner).\ncomplement(cook_dinner, drive_car).",
        "NL Translation": "When there is financial aid, I cook dinner or drive the car. Generally, I prefer to cook dinner but if there is a community event, I prefer to drive the car. I cannot cook dinner and drive the car at the same time."
    },
    {
        "Example Number": 104,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, boss_in_office/0, good_weather/0, night_time/0, humid_day/0.\nrule(r1, prepare_report, []) :- wedding_anniversary.\nrule(r2, pay_bills, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, boss_in_office, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- humid_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(pay_bills, prepare_report).\ncomplement(prepare_report, pay_bills).\ncomplement(wedding_anniversary, boss_in_office).\ncomplement(boss_in_office, wedding_anniversary).",
        "NL Translation": "If it is your wedding anniversary, you prepare a report. If your boss is in the office, you pay bills. If it's your wedding anniversary and your boss is in the office, you prefer to prepare a report, but if you have extended work hours, you prefer to pay bills. If the weather is good, you prefer to prepare a report. If it's night time, you prefer to pay bills. If it's a humid day, you prefer to prepare a report over paying bills."
    },
    {
        "Example Number": 583,
        "Gorgias Code": ":- dynamic low_budget/0, morning_rush/0, relationship_break/0.\nrule(r1, do_laundry, []) :- low_budget.\nrule(r2, ride_bike, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- low_budget, morning_rush.\nrule(p2, prefer(r2, r1), []) :- low_budget, morning_rush, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(ride_bike, do_laundry).\ncomplement(do_laundry, ride_bike).\ncomplement(low_budget, morning_rush).\ncomplement(morning_rush, low_budget).",
        "NL Translation": "If there is a low budget, I do laundry. If there is a morning rush, I ride a bike. If both a low budget and a morning rush exist, I prefer to do laundry; however, if it's also the afternoon, I prefer to ride a bike. In case of a relationship break, I prefer to ride a bike over doing laundry."
    },
    {
        "Example Number": 713,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, plan_meals, []) :- relationship_break.\nrule(r2, go_to(cinema), []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(cinema), plan_meals).\ncomplement(plan_meals, go_to(cinema)).",
        "NL Translation": "When there is a relationship break, I plan meals or go to the cinema. I generally prefer to plan meals over going to the cinema."
    },
    {
        "Example Number": 968,
        "Gorgias Code": ":- dynamic afternoon/0, good_weather/0, relationship_break/0.\nrule(r1, host_dinner_party, []) :- afternoon.\nrule(r2, swim_session, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- afternoon, good_weather.\nrule(p2, prefer(r2, r1), []) :- afternoon, good_weather, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, host_dinner_party).\ncomplement(host_dinner_party, swim_session).\ncomplement(afternoon, good_weather).\ncomplement(good_weather, afternoon).",
        "NL Translation": "If it is afternoon, I host a dinner party. If the weather is good, I have a swim session. I prefer to host a dinner party over a swim session if it is afternoon and the weather is good. However, if there is an important meeting, I prefer to have a swim session over hosting a dinner party. If there is a relationship break, I prefer to have a swim session over hosting a dinner party."
    },
    {
        "Example Number": 57,
        "Gorgias Code": ":- dynamic morning_rush/0, tax_refund/0, unexpected_guest/0\nrule(r1, ride_bike, []) :- morning_rush.\nrule(r2, host_dinner_party, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(host_dinner_party, ride_bike).\ncomplement(ride_bike, host_dinner_party).",
        "NL Translation": "\"When there is a morning rush, I either ride a bike or host a dinner party. Generally, I prefer to ride a bike but if I have a tax refund, I prefer to host a dinner party. However, if there is an unexpected guest, I prefer to host a dinner party over riding a bike.\""
    },
    {
        "Example Number": 895,
        "Gorgias Code": ":- dynamic holiday_season/0, deadline_missed/0\nrule(r1, take_picnic, []) :- holiday_season.\nrule(r2, rent_car, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- deadline_missed.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, take_picnic).\ncomplement(take_picnic, rent_car).",
        "NL Translation": "When it is holiday season, I can take a picnic or rent a car. Generally, I prefer to take a picnic but if the deadline is missed, I prefer to rent a car. I can't at the same time take a picnic and rent a car."
    },
    {
        "Example Number": 90,
        "Gorgias Code": ":- dynamic friend_in_town/0, rainy_day/0.\nrule(r1, meditate, []) :- friend_in_town.\nrule(r2, go_gym, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, rainy_day.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, rainy_day, night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, meditate).\ncomplement(meditate, go_gym).\ncomplement(friend_in_town, rainy_day).\ncomplement(rainy_day, friend_in_town).",
        "NL Translation": "\"If a friend is in town, I meditate. If it's a rainy day, I go to the gym. But if both conditions are met, I prefer to meditate; however, if it's also nighttime, I prefer to go to the gym. I cannot meditate and go to the gym at the same time, and having a friend in town and a rainy day are not compatible.\""
    },
    {
        "Example Number": 31,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, got_bonus/0, cloudy_day/0.\nrule(r1, do_laundry, []) :- new_restaurant_to_try.\nrule(r2, visit_doctor, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, got_bonus.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, got_bonus, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, do_laundry).\ncomplement(do_laundry, visit_doctor).\ncomplement(new_restaurant_to_try, got_bonus).\ncomplement(got_bonus, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I do laundry. If I got a bonus, I visit the doctor. But if I have both, I prefer to do laundry; however, if there is also a snowstorm, I prefer to visit the doctor. I can't at the same time do laundry and visit the doctor, and having a new restaurant to try and getting a bonus aren't compatible. If it's a cloudy day, I prefer to do laundry over visiting the doctor.\""
    },
    {
        "Example Number": 414,
        "Gorgias Code": ":- dynamic lunch_time/0, family_emergency/0, birthday_today/0, early_morning/0, deadline_missed/0.\nrule(r1, go_to(park), []) :- lunch_time.\nrule(r2, review_documents, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- lunch_time, family_emergency.\nrule(p2, prefer(r2, r1), []) :- lunch_time, family_emergency, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- deadline_missed.\nrule(c5, prefer(c4, c3), []).\ncomplement(review_documents, go_to(park)).\ncomplement(go_to(park), review_documents).\ncomplement(lunch_time, family_emergency).\ncomplement(family_emergency, lunch_time).",
        "NL Translation": "\"If it is lunch time, I go to the park. If there is a family emergency, I review documents. If both lunch time and family emergency occur, I prefer to go to the park; however, if there is also a job interview, I prefer to review documents. If it's someone's birthday today, I prefer to go to the park. If it's early morning, I prefer to review documents. If a deadline is missed, I prefer to go to the park. I can't at the same time go to the park and review documents, or have lunch time and a family emergency.\""
    },
    {
        "Example Number": 825,
        "Gorgias Code": ":- dynamic expensive_event/0, early_morning/0, weekend/0.\nrule(r1, submit_timesheet, []) :- expensive_event.\nrule(r2, go_shopping, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- expensive_event, early_morning.\nrule(p2, prefer(r2, r1), []) :- expensive_event, early_morning, hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, submit_timesheet).\ncomplement(submit_timesheet, go_shopping).\ncomplement(expensive_event, early_morning).\ncomplement(early_morning, expensive_event).",
        "NL Translation": "\"If there is an expensive event, I submit my timesheet. If it is early morning, I go shopping. However, if there is an expensive event and it is early morning, I prefer to submit my timesheet, but if there is also a hail storm, I prefer to go shopping. I cannot submit my timesheet and go shopping at the same time, and expensive event and early morning are not compatible. If it is the weekend, I prefer to submit my timesheet over going shopping.\""
    },
    {
        "Example Number": 620,
        "Gorgias Code": ":- dynamic family_gathering/0, good_investment/0, friend_in_town/0, vacation_planned/0, unexpected_expense/0.\nrule(r1, go_shopping, []) :- family_gathering.\nrule(r2, take_train, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- family_gathering, good_investment.\nrule(p2, prefer(r2, r1), []) :- family_gathering, good_investment, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- unexpected_expense.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_train, go_shopping).\ncomplement(go_shopping, take_train).\ncomplement(family_gathering, good_investment).\ncomplement(good_investment, family_gathering).",
        "NL Translation": "\"If there is a family gathering, I go shopping. If it's a good investment, I take the train. If both the family gathering and good investment are present, I prefer to go shopping. However, if it's also a hot day, I prefer to take the train. If a friend is in town, I prefer going shopping over taking the train. If there is a vacation planned, I prefer taking the train over going shopping. If there is an unexpected expense, I prefer going shopping over taking the train. If there is a vacation planned, I prefer going shopping over taking the train.\""
    },
    {
        "Example Number": 39,
        "Gorgias Code": ":- dynamic tax_refund/0.\nrule(r1, call_client, []) :- tax_refund.\nrule(r2, make_coffee, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\ncomplement(make_coffee, call_client).\ncomplement(call_client, make_coffee).",
        "NL Translation": "When there is a tax refund, I either call the client or make coffee. I generally prefer to call the client over making coffee. I can't at the same time make coffee and call the client."
    },
    {
        "Example Number": 896,
        "Gorgias Code": ":- dynamic concert_nearby/0.\nrule(r1, prepare_report, []) :- concert_nearby.\nrule(r2, go_to(theater), []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(theater), prepare_report).\ncomplement(prepare_report, go_to(theater)).",
        "NL Translation": "When there is a nearby concert, I prepare a report. If there is a nearby concert, I go to the theater. I prefer to prepare a report over going to the theater."
    },
    {
        "Example Number": 595,
        "Gorgias Code": ":- dynamic discount_on_flight/0, friend_in_town/0, early_morning/0, community_event/0, moving_house/0.\nrule(r1, go_shopping, []) :- discount_on_flight.\nrule(r2, morning_run, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, friend_in_town, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(morning_run, go_shopping).\ncomplement(go_shopping, morning_run).\ncomplement(discount_on_flight, friend_in_town).\ncomplement(friend_in_town, discount_on_flight).",
        "NL Translation": "\"If there is a discount on the flight, I go shopping. If a friend is in town, I go for a morning run. I prefer going shopping over a morning run if there is a discount on the flight and a friend is in town. However, if it's lunchtime, I prefer a morning run over going shopping. I prefer a morning run over going shopping if it's early morning. I prefer going shopping over a morning run if there is a community event. I prefer going for a morning run over going shopping if there is a community event. I prefer moving house over going for a morning run if I prefer going shopping over a morning run. I prefer the preference of moving house over a community event over the preference of going for a morning run over going shopping.\""
    },
    {
        "Example Number": 834,
        "Gorgias Code": ":- dynamic client_feedback/0, family_gathering/0, unexpected_expense/0\nrule(r1, update_project_plan, []) :- client_feedback.\nrule(r2, go_gym, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, update_project_plan).\ncomplement(update_project_plan, go_gym).",
        "NL Translation": "If there is client feedback, I update the project plan or go to the gym. Generally, I prefer to update the project plan but if there is a family gathering, I prefer to go to the gym. However, if there is an unexpected expense, I prefer to update the project plan over going to the gym. I can't at the same time go to the gym and update the project plan, and unexpected expense and family gathering aren't compatible."
    },
    {
        "Example Number": 730,
        "Gorgias Code": ":- dynamic family_emergency/0, relationship_break/0, boss_in_office/0.\nrule(r1, book_flight, []) :- family_emergency.\nrule(r2, order_taxi, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- family_emergency, relationship_break.\nrule(p2, prefer(r2, r1), []) :- family_emergency, relationship_break, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, book_flight).\ncomplement(book_flight, order_taxi).\ncomplement(family_emergency, relationship_break).\ncomplement(relationship_break, family_emergency).",
        "NL Translation": "If there is a family emergency, I book a flight. If there is a relationship break, I order a taxi. If both a family emergency and relationship break occur, I prefer to book a flight; however, if there is also a school reunion, I prefer to order a taxi. I cannot book a flight and order a taxi at the same time, and family emergency and relationship break are not compatible. If the boss is in the office, I prefer to order a taxi over booking a flight."
    },
    {
        "Example Number": 43,
        "Gorgias Code": ":- dynamic party_invitation/0, team_project_due/0, new_restaurant_to_try/0, windy_day/0, feeling_sick/0.\nrule(r1, water_plants, []) :- party_invitation.\nrule(r2, make_coffee, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- party_invitation, team_project_due.\nrule(p2, prefer(r2, r1), []) :- party_invitation, team_project_due, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- feeling_sick.\nrule(c5, prefer(c4, c3), []).\ncomplement(make_coffee, water_plants).\ncomplement(water_plants, make_coffee).\ncomplement(party_invitation, team_project_due).\ncomplement(team_project_due, party_invitation).",
        "NL Translation": "If there is a party invitation, I water plants. If there is a team project due, I make coffee. If both a party invitation and team project due are present, I prefer watering plants; however, if there is also a moving house, I prefer making coffee. If there is a new restaurant to try, I prefer watering plants. If it's a windy day, I prefer making coffee. If I'm feeling sick, I prefer watering plants over making coffee."
    },
    {
        "Example Number": 977,
        "Gorgias Code": ":- dynamic expensive_event/0, hot_day/0, urgent_deadline/0.\nrule(r1, visit_museum, []) :- expensive_event.\nrule(r2, prepare_report, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- expensive_event, hot_day.\nrule(p2, prefer(r2, r1), []) :- expensive_event, hot_day, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, visit_museum).\ncomplement(visit_museum, prepare_report).\ncomplement(expensive_event, hot_day).\ncomplement(hot_day, expensive_event).",
        "NL Translation": "If there is an expensive event, I visit the museum. If it's a hot day, I prepare a report. I prefer to visit the museum over preparing a report if it's an expensive event and a hot day. However, if it's an expensive event, a hot day, and lunch time, I prefer to prepare a report. If there is an urgent deadline, I prefer to visit the museum over preparing a report."
    },
    {
        "Example Number": 331,
        "Gorgias Code": ":- dynamic medical_appointment/0, humid_day/0, vacation_planned/0.\nrule(r1, finish_report, []) :- medical_appointment.\nrule(r2, clean_house, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, humid_day.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, humid_day, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\ncomplement(clean_house, finish_report).\ncomplement(finish_report, clean_house).\ncomplement(medical_appointment, humid_day).\ncomplement(humid_day, medical_appointment).",
        "NL Translation": "If there is a medical appointment, I finish the report. On a humid day, I clean the house. If I have both a medical appointment and a humid day, I prefer to finish the report; however, if it is also dusk, I prefer to clean the house. If I have a vacation planned, I prefer to finish the report over cleaning the house."
    },
    {
        "Example Number": 877,
        "Gorgias Code": ":- dynamic good_weather/0, school_reunion/0\nrule(r1, drive_car, []) :- good_weather.\nrule(r2, cycle_to_work, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, drive_car).\ncomplement(drive_car, cycle_to_work).",
        "NL Translation": "When there is good weather, I either drive the car or cycle to work. Generally, I prefer to drive the car but if there is a school reunion, I prefer to cycle to work. I can't at the same time drive the car and cycle to work."
    },
    {
        "Example Number": 278,
        "Gorgias Code": ":- dynamic important_meeting/0, moving_house/0, hail_storm/0, snowstorm/0, night_time/0.\nrule(r1, plan_meals, []) :- important_meeting.\nrule(r2, join_fitness_class, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- important_meeting, moving_house.\nrule(p2, prefer(r2, r1), []) :- important_meeting, moving_house, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- night_time.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, plan_meals).\ncomplement(plan_meals, join_fitness_class).\ncomplement(important_meeting, moving_house).\ncomplement(moving_house, important_meeting).",
        "NL Translation": "If there is an important meeting, I plan meals. If I am moving house, I join a fitness class. If both the important meeting and moving house are happening, I prefer to plan meals; however, if it's also the holiday season, I prefer to join a fitness class. In case of a hail storm, I prefer to plan meals, and in the event of a snowstorm, I prefer to join a fitness class. I cannot plan meals and join a fitness class at the same time. Night time is not compatible with important meetings or moving house."
    },
    {
        "Example Number": 294,
        "Gorgias Code": ":- dynamic party_invitation/0, night_time/0, humid_day/0\nrule(r1, attend_workshop, []) :- party_invitation.\nrule(r2, ride_bike, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(ride_bike, attend_workshop).\ncomplement(attend_workshop, ride_bike).",
        "NL Translation": "\"If there is a party invitation, I attend the workshop or ride a bike. Generally, I prefer to attend the workshop but if it is night time, I prefer to ride a bike. However, if it is a humid day, I prefer to attend the workshop. I can't at the same time attend the workshop and ride a bike.\""
    },
    {
        "Example Number": 998,
        "Gorgias Code": ":- dynamic client_feedback/0, got_bonus/0, vacation_planned/0\nrule(r1, plan_meals, []) :- client_feedback.\nrule(r2, visit_doctor, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, plan_meals).\ncomplement(plan_meals, visit_doctor).",
        "NL Translation": "\"If I have client feedback, I plan meals or visit the doctor. Generally, I prefer to plan meals but if I got a bonus, I prefer to visit the doctor. However, if I have a vacation planned, I prefer to plan meals over visiting the doctor. I can't at the same time plan meals and visit the doctor.\""
    },
    {
        "Example Number": 95,
        "Gorgias Code": ":- dynamic snowstorm/0, expensive_event/0\nrule(r1, cycle_to_work, []) :- snowstorm.\nrule(r2, attend_meeting, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, cycle_to_work).\ncomplement(cycle_to_work, attend_meeting).",
        "NL Translation": "If there is a snowstorm, I cycle to work or attend a meeting. Generally, I prefer to cycle to work, but if there is an expensive event, I prefer to attend the meeting. I can't at the same time cycle to work and attend a meeting."
    },
    {
        "Example Number": 619,
        "Gorgias Code": ":- dynamic boss_in_office/0, hot_day/0, expensive_event/0, discount_on_flight/0, urgent_deadline/0.\nrule(r1, morning_run, []) :- boss_in_office.\nrule(r2, meditate, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, hot_day.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, hot_day, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(meditate, morning_run).\ncomplement(morning_run, meditate).\ncomplement(boss_in_office, hot_day).\ncomplement(hot_day, boss_in_office).",
        "NL Translation": "If the boss is in the office and it is a hot day, I either go for a morning run or meditate. I prefer to go for a morning run if the boss is in the office and it's a hot day, but if I have a vacation planned, I prefer to meditate. I can't go for a morning run and meditate at the same time. If there is an expensive event, I prefer to meditate. If there is a discount on flights, I prefer to go for a morning run. If there is an urgent deadline, I prefer to go for a morning run over meditating. If there is an urgent deadline, an expensive event, and a discount on flights, I prefer to meditate over going for a morning run."
    },
    {
        "Example Number": 256,
        "Gorgias Code": ":- dynamic urgent_deadline/0, boss_in_office/0.\nrule(r1, attend_workshop, []) :- urgent_deadline.\nrule(r2, schedule_meeting, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, boss_in_office, windy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(schedule_meeting, attend_workshop).\ncomplement(attend_workshop, schedule_meeting).\ncomplement(urgent_deadline, boss_in_office).\ncomplement(boss_in_office, urgent_deadline).",
        "NL Translation": "\"If there is an urgent deadline, I attend a workshop. If the boss is in the office, I schedule a meeting. If both the urgent deadline and boss are in the office, I prefer to attend a workshop; however, if it's also a windy day, I prefer to schedule a meeting. I can't at the same time attend a workshop and schedule a meeting, and urgent deadline and boss in the office are not compatible.\""
    },
    {
        "Example Number": 103,
        "Gorgias Code": ":- dynamic party_invitation/0, job_interview/0, early_morning/0, client_feedback/0, vacation_planned/0.\nrule(r1, organize_workspace, []) :- party_invitation.\nrule(r2, evening_walk, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- party_invitation, job_interview.\nrule(p2, prefer(r2, r1), []) :- party_invitation, job_interview, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(evening_walk, organize_workspace).\ncomplement(organize_workspace, evening_walk).\ncomplement(party_invitation, job_interview).\ncomplement(job_interview, party_invitation).",
        "NL Translation": "If there is a party invitation, I organize my workspace. If there is a job interview, I go for an evening walk. If both are present, I prefer to organize my workspace; however, if it is dusk, I prefer an evening walk. If it's early morning, I prefer to organize my workspace. If there is client feedback, I prefer an evening walk. If I have a vacation planned, I prefer to organize my workspace."
    },
    {
        "Example Number": 545,
        "Gorgias Code": ":- dynamic night_time/0.\nrule(r1, dispose_trash, []) :- night_time.\nrule(r2, go_gym, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_gym, dispose_trash).\ncomplement(dispose_trash, go_gym).",
        "NL Translation": "When it is night time, I can either dispose of the trash or go to the gym. Generally, I prefer to dispose of the trash over going to the gym."
    },
    {
        "Example Number": 438,
        "Gorgias Code": ":- dynamic good_weather/0, night_time/0\nrule(r1, morning_run, []) :- good_weather.\nrule(r2, submit_timesheet, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(submit_timesheet, morning_run).\ncomplement(morning_run, submit_timesheet).",
        "NL Translation": "When there is good weather, I either go for a morning run or submit my timesheet. Generally, I prefer to go for a morning run but if it is night time, I prefer to submit my timesheet. I cannot go for a morning run and submit my timesheet at the same time."
    },
    {
        "Example Number": 871,
        "Gorgias Code": ":- dynamic project_extension/0, holiday_season/0.\nrule(r1, take_picnic, []) :- project_extension.\nrule(r2, update_project_plan, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- project_extension, holiday_season.\nrule(p2, prefer(r2, r1), []) :- project_extension, holiday_season, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, take_picnic).\ncomplement(take_picnic, update_project_plan).\ncomplement(project_extension, holiday_season).\ncomplement(holiday_season, project_extension).",
        "NL Translation": "If there is a project extension, I take a picnic. If it is the holiday season, I update the project plan. But if I have both a project extension and the holiday season, I prefer to take a picnic. However, if there is also a discount on flight, I prefer to update the project plan. I cannot at the same time take a picnic and update the project plan, and project extension and the holiday season are not compatible."
    },
    {
        "Example Number": 962,
        "Gorgias Code": ":- dynamic discount_on_flight/0, weekend/0\nrule(r1, morning_run, []) :- discount_on_flight.\nrule(r2, attend_workshop, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, morning_run).\ncomplement(morning_run, attend_workshop).",
        "NL Translation": "When there is a discount on the flight, I either go for a morning run or attend a workshop. Generally, I prefer to go for a morning run but if it is the weekend, I prefer to attend a workshop. I cannot go for a morning run and attend a workshop at the same time."
    },
    {
        "Example Number": 422,
        "Gorgias Code": ":- dynamic early_morning/0, expensive_event/0, family_emergency/0.\nrule(r1, cook_dinner, []) :- early_morning.\nrule(r2, drive_car, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- early_morning, expensive_event.\nrule(p2, prefer(r2, r1), []) :- early_morning, expensive_event, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, cook_dinner).\ncomplement(cook_dinner, drive_car).\ncomplement(early_morning, expensive_event).\ncomplement(expensive_event, early_morning).",
        "NL Translation": "\"If it is early morning, I cook dinner. If there is an expensive event, I drive the car. If both are true, I prefer to cook dinner; however, if there is also an important meeting, I prefer to drive the car. In the event of a family emergency, I prefer to cook dinner over driving the car.\""
    },
    {
        "Example Number": 870,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, new_neighbor/0\nrule(r1, take_train, []) :- invitation_from_friend.\nrule(r2, ride_bike, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(ride_bike, take_train).\ncomplement(take_train, ride_bike).",
        "NL Translation": "When there is an invitation from a friend, I either take the train or ride a bike. Generally, I prefer to take the train, but if there is a new neighbor, I prefer to ride a bike."
    },
    {
        "Example Number": 531,
        "Gorgias Code": ":- dynamic got_bonus/0.\nrule(r1, water_plants, []) :- got_bonus.\nrule(r2, yoga_session, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\ncomplement(yoga_session, water_plants).\ncomplement(water_plants, yoga_session).",
        "NL Translation": "\"When I have received a bonus, I either water the plants or attend a yoga session. I prefer to water the plants over attending a yoga session.\""
    },
    {
        "Example Number": 154,
        "Gorgias Code": ":- dynamic friend_in_town/0, snowstorm/0.\nrule(r1, visit_family, []) :- friend_in_town.\nrule(r2, yoga_session, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, snowstorm.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, snowstorm, new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(yoga_session, visit_family).\ncomplement(visit_family, yoga_session).\ncomplement(friend_in_town, snowstorm).\ncomplement(snowstorm, friend_in_town).",
        "NL Translation": "\"If there is a friend in town, I visit family. If there is a snowstorm, I attend a yoga session. If both conditions are met, I prefer to visit family; however, if there is also a new neighbor, I prefer to attend a yoga session. I cannot visit family and attend a yoga session simultaneously, and having a friend in town and a snowstorm are incompatible.\""
    },
    {
        "Example Number": 296,
        "Gorgias Code": ":- dynamic boss_in_office/0, got_bonus/0, project_extension/0.\nrule(r1, yoga_session, []) :- boss_in_office.\nrule(r2, go_to_bar, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, got_bonus.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, got_bonus, concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to_bar, yoga_session).\ncomplement(yoga_session, go_to_bar).\ncomplement(boss_in_office, got_bonus).\ncomplement(got_bonus, boss_in_office).",
        "NL Translation": "If the boss is in the office, I attend a yoga session. If I got a bonus, I go to the bar. If both the boss is in the office and I got a bonus, I prefer to attend a yoga session; however, if there is a concert nearby, I prefer to go to the bar. If there is a project extension, I prefer attending a yoga session over going to the bar."
    },
    {
        "Example Number": 633,
        "Gorgias Code": ":- dynamic project_extension/0, good_investment/0, humid_day/0.\nrule(r1, cook_dinner, []) :- project_extension.\nrule(r2, morning_run, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- project_extension, good_investment.\nrule(p2, prefer(r2, r1), []) :- project_extension, good_investment, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, cook_dinner).\ncomplement(cook_dinner, morning_run).\ncomplement(project_extension, good_investment).\ncomplement(good_investment, project_extension).",
        "NL Translation": "If there is a project extension, I cook dinner. If it is a good investment, I go for a morning run. If I have both a project extension and a good investment, I prefer to cook dinner. However, if there is an invitation from a friend, I prefer to go for a morning run. I can't at the same time cook dinner and go for a morning run, and having a project extension and a good investment are not compatible. Additionally, if it is a humid day, I prefer going for a morning run over cooking dinner."
    },
    {
        "Example Number": 596,
        "Gorgias Code": ":- dynamic boss_in_office/0, cloudy_day/0, team_project_due/0, client_feedback/0, project_extension/0.\nrule(r1, cycle_to_work, []) :- boss_in_office.\nrule(r2, travel_abroad, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, cloudy_day, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- project_extension.\nrule(c5, prefer(c4, c3), []).\ncomplement(travel_abroad, cycle_to_work).\ncomplement(cycle_to_work, travel_abroad).\ncomplement(boss_in_office, cloudy_day).\ncomplement(cloudy_day, boss_in_office).",
        "NL Translation": "\"If the boss is in the office, I cycle to work. If it's a cloudy day, I travel abroad. If both the boss is in the office and it's a cloudy day, I prefer to cycle to work, however if there is also a low budget, I prefer to travel abroad. I can't cycle to work and travel abroad at the same time. If there is a team project due, I prefer to travel abroad. If there is client feedback, I prefer to cycle to work. If there is a project extension, I prefer to cycle to work over traveling abroad. If there is client feedback, I prefer to travel abroad over cycling to work.\""
    },
    {
        "Example Number": 19,
        "Gorgias Code": ":- dynamic humid_day/0, relationship_break/0, wedding_anniversary/0, urgent_deadline/0, moving_house/0.\nrule(r1, use_subway, []) :- humid_day.\nrule(r2, schedule_meeting, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- humid_day, relationship_break.\nrule(p2, prefer(r2, r1), []) :- humid_day, relationship_break, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(schedule_meeting, use_subway).\ncomplement(use_subway, schedule_meeting).\ncomplement(humid_day, relationship_break).\ncomplement(relationship_break, humid_day).",
        "NL Translation": "\"If it is a humid day, I use the subway. If there is a relationship break, I schedule a meeting. I prefer to use the subway over scheduling a meeting if it is a humid day and there is a relationship break. However, if there is a vacation planned, I prefer to schedule a meeting over using the subway. If there is a wedding anniversary, I prefer using the subway over scheduling a meeting. If there is an urgent deadline, I prefer scheduling a meeting over using the subway. If there is a moving house, I prefer using the subway over scheduling a meeting.\""
    },
    {
        "Example Number": 589,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, pay_bills, []) :- lunch_time.\nrule(r2, attend_meeting, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_meeting, pay_bills).\ncomplement(pay_bills, attend_meeting).",
        "NL Translation": "When it is lunch time, I either pay bills or attend a meeting. I generally prefer to pay bills over attending a meeting. I can't at the same time attend a meeting and pay bills."
    },
    {
        "Example Number": 504,
        "Gorgias Code": ":- dynamic party_invitation/0.\nrule(r1, attend_meeting, []) :- party_invitation.\nrule(r2, go_gym, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_gym, attend_meeting).\ncomplement(attend_meeting, go_gym).",
        "NL Translation": "When there is a party invitation, I attend the meeting or go to the gym. Generally, I prefer to attend the meeting over going to the gym."
    },
    {
        "Example Number": 685,
        "Gorgias Code": ":- dynamic deadline_missed/0, hot_day/0, early_morning/0, client_feedback/0, moving_house/0.\nrule(r1, order_taxi, []) :- deadline_missed.\nrule(r2, water_plants, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, hot_day.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, hot_day, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(water_plants, order_taxi).\ncomplement(order_taxi, water_plants).\ncomplement(deadline_missed, hot_day).\ncomplement(hot_day, deadline_missed).",
        "NL Translation": "If the deadline is missed, I order a taxi. On a hot day, I water plants. I prefer to order a taxi over watering plants if the deadline is missed and it's a hot day. However, if the deadline is missed, it's a hot day, and there is a project extension, I prefer to water plants. If it's early morning, I prefer to order a taxi over watering plants. If there is client feedback, I prefer to water plants over ordering a taxi. If I am moving house, I prefer to order a taxi over watering plants. If there is client feedback, I prefer ordering a taxi over watering plants."
    },
    {
        "Example Number": 89,
        "Gorgias Code": ":- dynamic team_project_due/0, job_interview/0, morning_rush/0.\nrule(r1, go_gym, []) :- team_project_due.\nrule(r2, meditate, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- team_project_due, job_interview.\nrule(p2, prefer(r2, r1), []) :- team_project_due, job_interview, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, go_gym).\ncomplement(go_gym, meditate).\ncomplement(team_project_due, job_interview).\ncomplement(job_interview, team_project_due).",
        "NL Translation": "\"If I have a team project due, I go to the gym. If I have a job interview, I meditate. But if I have both the team project due and a job interview, I prefer to go to the gym; however, if it's also early in the morning, I prefer to meditate. I cannot go to the gym and meditate at the same time, and having a team project due and a job interview are not compatible. If there is a morning rush, I prefer to go to the gym.\""
    },
    {
        "Example Number": 706,
        "Gorgias Code": ":- dynamic new_neighbor/0, unexpected_guest/0\nrule(r1, go_to(restaurant), []) :- new_neighbor.\nrule(r2, go_to(park), []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(park), go_to(restaurant)).\ncomplement(go_to(restaurant), go_to(park)).",
        "NL Translation": "If there is a new neighbor, I go to the restaurant or the park. Generally, I prefer to go to the restaurant, but if there is an unexpected guest, I prefer to go to the park. I can't at the same time go to the park and the restaurant."
    },
    {
        "Example Number": 36,
        "Gorgias Code": ":- dynamic new_neighbor/0, good_weather/0.\nrule(r1, take_bus, []) :- new_neighbor.\nrule(r2, book_ride_share, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, good_weather.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, good_weather, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, take_bus).\ncomplement(take_bus, book_ride_share).\ncomplement(new_neighbor, good_weather).\ncomplement(good_weather, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I take the bus. If the weather is good, I book a ride share. However, if there is a new neighbor and the weather is good, I prefer to take the bus, but if it is also lunch time, I prefer to book a ride share."
    },
    {
        "Example Number": 276,
        "Gorgias Code": ":- dynamic client_feedback/0, afternoon/0, dusk/0\nrule(r1, take_train, []) :- client_feedback.\nrule(r2, schedule_meeting, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, take_train).\ncomplement(take_train, schedule_meeting).",
        "NL Translation": "\"If there is client feedback, I take the train or schedule a meeting. Generally, I prefer to take the train but if it is afternoon, I prefer to schedule a meeting. However, if it is dusk, I prefer to take the train. I can't at the same time take the train and schedule a meeting.\""
    },
    {
        "Example Number": 989,
        "Gorgias Code": ":- dynamic new_neighbor/0, expensive_event/0, boss_in_office/0.\nrule(r1, call_client, []) :- new_neighbor.\nrule(r2, reply_emails, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, expensive_event.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, expensive_event, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, call_client).\ncomplement(call_client, reply_emails).\ncomplement(new_neighbor, expensive_event).\ncomplement(expensive_event, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I call the client. If there is an expensive event, I reply to emails. If I have both a new neighbor and an expensive event, I prefer to call the client. However, if there is also early morning, I prefer to reply to emails. If the boss is in the office, I prefer to call the client over replying to emails."
    },
    {
        "Example Number": 451,
        "Gorgias Code": ":- dynamic boss_in_office/0, tax_refund/0, unexpected_guest/0\nrule(r1, visit_museum, []) :- boss_in_office.\nrule(r2, book_flight, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_flight, visit_museum).\ncomplement(visit_museum, book_flight).",
        "NL Translation": "If the boss is in the office, I visit the museum or book a flight. Generally, I prefer to visit the museum but if there is a tax refund, I prefer to book a flight. However, if there is an unexpected guest, I prefer to visit the museum. I can't at the same time visit the museum and book a flight."
    },
    {
        "Example Number": 516,
        "Gorgias Code": ":- dynamic project_extension/0, weekend/0\nrule(r1, dispose_trash, []) :- project_extension.\nrule(r2, attend_workshop, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, dispose_trash).\ncomplement(dispose_trash, attend_workshop).",
        "NL Translation": "If there is a project extension, I dispose of the trash or attend a workshop. Generally, I prefer to dispose of the trash, but if it is the weekend, I prefer to attend a workshop. I cannot dispose of the trash and attend a workshop at the same time."
    },
    {
        "Example Number": 733,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, hot_day/0, night_time/0.\nrule(r1, morning_run, []) :- invitation_from_friend.\nrule(r2, take_train, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, hot_day.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, hot_day, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, morning_run).\ncomplement(morning_run, take_train).\ncomplement(invitation_from_friend, hot_day).\ncomplement(hot_day, invitation_from_friend).",
        "NL Translation": "\"If there is an invitation from a friend, I go for a morning run. If it is a hot day, I take the train. If there is both an invitation from a friend and a hot day, I prefer to go for a morning run. However, if there is an invitation from a friend, a hot day, and a team project due, I prefer to take the train. I cannot both take the train and go for a morning run, and an invitation from a friend and a hot day are incompatible. If it is night time, I prefer to go for a morning run.\""
    },
    {
        "Example Number": 135,
        "Gorgias Code": ":- dynamic afternoon/0, moving_house/0.\nrule(r1, order_taxi, []) :- afternoon.\nrule(r2, use_subway, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- afternoon, moving_house.\nrule(p2, prefer(r2, r1), []) :- afternoon, moving_house, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, order_taxi).\ncomplement(order_taxi, use_subway).\ncomplement(afternoon, moving_house).\ncomplement(moving_house, afternoon).",
        "NL Translation": "\"If it is afternoon, I order a taxi. If I am moving house, I use the subway. However, if it is both afternoon and I am moving house, I prefer to order a taxi. If it is early morning as well, I prefer to use the subway. I cannot at the same time order a taxi and use the subway, and afternoon and moving house are not compatible.\""
    },
    {
        "Example Number": 990,
        "Gorgias Code": ":- dynamic holiday_season/0, party_invitation/0, low_budget/0, client_feedback/0, invitation_from_friend/0.\nrule(r1, use_subway, []) :- holiday_season.\nrule(r2, plan_meals, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- holiday_season, party_invitation.\nrule(p2, prefer(r2, r1), []) :- holiday_season, party_invitation, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(plan_meals, use_subway).\ncomplement(use_subway, plan_meals).\ncomplement(holiday_season, party_invitation).\ncomplement(party_invitation, holiday_season).",
        "NL Translation": "If it is holiday season, I use the subway or plan meals. Generally, I prefer to use the subway over planning meals if it is holiday season and there is a party invitation. However, if it is holiday season, there is a party invitation, and it's a wedding anniversary, I prefer to plan meals. I can't at the same time use the subway and plan meals. If there is a low budget, I prefer planning meals over using the subway. If there is client feedback, I prefer using the subway over planning meals. If there is an invitation from a friend, I prefer planning meals over using the subway."
    },
    {
        "Example Number": 741,
        "Gorgias Code": ":- dynamic subscription_due/0.\nrule(r1, cycling_session, []) :- subscription_due.\nrule(r2, evening_walk, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(evening_walk, cycling_session).\ncomplement(cycling_session, evening_walk).",
        "NL Translation": "When there is a subscription due, I have a cycling session or an evening walk. I generally prefer the cycling session over the evening walk. I cannot do both the evening walk and the cycling session."
    },
    {
        "Example Number": 359,
        "Gorgias Code": ":- dynamic got_bonus/0, job_interview/0, feeling_sick/0.\nrule(r1, attend_concert, []) :- got_bonus.\nrule(r2, meditate, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- got_bonus, job_interview.\nrule(p2, prefer(r2, r1), []) :- got_bonus, job_interview, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, attend_concert).\ncomplement(attend_concert, meditate).\ncomplement(got_bonus, job_interview).\ncomplement(job_interview, got_bonus).",
        "NL Translation": "If I have received a bonus, I attend a concert. If I have a job interview, I meditate. If I have both a bonus and a job interview, I prefer to attend a concert. However, if the event is expensive, I prefer to meditate. If I am feeling sick, I prefer to attend a concert over meditating."
    },
    {
        "Example Number": 773,
        "Gorgias Code": ":- dynamic lunch_time/0, project_extension/0\nrule(r1, use_subway, []) :- lunch_time.\nrule(r2, finish_report, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\ncomplement(finish_report, use_subway).\ncomplement(use_subway, finish_report).",
        "NL Translation": "When it is lunch time, I either use the subway or finish the report. Generally, I prefer to use the subway but if there is a project extension, I prefer to finish the report."
    },
    {
        "Example Number": 421,
        "Gorgias Code": ":- dynamic hot_day/0, urgent_deadline/0, unexpected_expense/0, concert_nearby/0, friend_in_town/0.\nrule(r1, go_to(park), []) :- hot_day.\nrule(r2, go_shopping, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- hot_day, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- hot_day, urgent_deadline, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- friend_in_town.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_shopping, go_to(park)).\ncomplement(go_to(park), go_shopping).\ncomplement(hot_day, urgent_deadline).\ncomplement(urgent_deadline, hot_day).",
        "NL Translation": "If it is a hot day, I go to the park. If there is an urgent deadline, I go shopping. If it's both a hot day and an urgent deadline, I prefer to go to the park; however, if it's also a low budget situation, I prefer to go shopping. If there is an unexpected expense, I prefer going shopping over going to the park. If there is a concert nearby, I prefer going to the park over going shopping. If there is a friend in town, I prefer going shopping over going to the park."
    },
    {
        "Example Number": 926,
        "Gorgias Code": ":- dynamic early_morning/0, good_investment/0\nrule(r1, attend_concert, []) :- early_morning.\nrule(r2, morning_run, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_investment.\nrule(c1, prefer(p2, p1), []).\ncomplement(morning_run, attend_concert).\ncomplement(attend_concert, morning_run).",
        "NL Translation": "If it is early morning, I attend a concert or go for a morning run. Generally, I prefer to attend a concert but if it is a good investment, I prefer to go for a morning run. I can't at the same time attend a concert and go for a morning run."
    },
    {
        "Example Number": 487,
        "Gorgias Code": ":- dynamic early_morning/0, party_invitation/0.\nrule(r1, book_flight, []) :- early_morning.\nrule(r2, read_book, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- early_morning, party_invitation.\nrule(p2, prefer(r2, r1), []) :- early_morning, party_invitation, financial_aid.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, book_flight).\ncomplement(book_flight, read_book).\ncomplement(early_morning, party_invitation).\ncomplement(party_invitation, early_morning).",
        "NL Translation": "\"If it is early morning, I book a flight. If I receive a party invitation, I read a book. However, if it is both early morning and I have a party invitation, I prefer to book a flight. But if there is also financial aid involved, I prefer to read a book. Reading a book and booking a flight are mutually exclusive, as well as having an early morning and a party invitation.\""
    },
    {
        "Example Number": 121,
        "Gorgias Code": ":- dynamic early_morning/0, medical_appointment/0, team_project_due/0.\nrule(r1, go_to(theater), []) :- early_morning.\nrule(r2, use_subway, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- early_morning, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- early_morning, medical_appointment, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, go_to(theater)).\ncomplement(go_to(theater), use_subway).\ncomplement(early_morning, medical_appointment).\ncomplement(medical_appointment, early_morning).",
        "NL Translation": "\"If it is early morning, I go to the theater. If I have a medical appointment, I use the subway. If both conditions are met, I prefer to go to the theater; however, if there is also a job interview, I prefer to use the subway. If there is a team project due, I prefer to go to the theater over using the subway. I cannot go to the theater and use the subway at the same time, and early morning and medical appointment are not compatible.\""
    },
    {
        "Example Number": 569,
        "Gorgias Code": ":- dynamic friend_in_town/0.\nrule(r1, give_presentation, []) :- friend_in_town.\nrule(r2, drive_car, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []).\ncomplement(drive_car, give_presentation).\ncomplement(give_presentation, drive_car).",
        "NL Translation": "When a friend is in town, I give a presentation or drive a car. I prefer to give a presentation over driving a car. Driving a car and giving a presentation are mutually exclusive."
    },
    {
        "Example Number": 903,
        "Gorgias Code": ":- dynamic school_reunion/0, party_invitation/0.\nrule(r1, yoga_session, []) :- school_reunion.\nrule(r2, order_taxi, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- school_reunion, party_invitation.\nrule(p2, prefer(r2, r1), []) :- school_reunion, party_invitation, concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, yoga_session).\ncomplement(yoga_session, order_taxi).\ncomplement(school_reunion, party_invitation).\ncomplement(party_invitation, school_reunion).",
        "NL Translation": "\"If there is a school reunion, I attend a yoga session. If there is a party invitation, I order a taxi. If both the school reunion and party invitation are present, I prefer to attend the yoga session; however, if there is also a concert nearby, I prefer to order a taxi. I cannot attend both the yoga session and order a taxi, and school reunion and party invitation are incompatible.\""
    },
    {
        "Example Number": 674,
        "Gorgias Code": ":- dynamic early_morning/0, new_neighbor/0.\nrule(r1, take_picnic, []) :- early_morning.\nrule(r2, cook_dinner, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- early_morning, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- early_morning, new_neighbor, morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(cook_dinner, take_picnic).\ncomplement(take_picnic, cook_dinner).\ncomplement(early_morning, new_neighbor).\ncomplement(new_neighbor, early_morning).",
        "NL Translation": "If it is early morning, I take a picnic. If there is a new neighbor, I cook dinner. If both conditions are met, I prefer to take a picnic; however, if it is also during the morning rush, I prefer to cook dinner. I cannot take a picnic and cook dinner at the same time, and early morning and having a new neighbor are not compatible."
    },
    {
        "Example Number": 819,
        "Gorgias Code": ":- dynamic friend_in_town/0.\nrule(r1, attend_meeting, []) :- friend_in_town.\nrule(r2, travel_abroad, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []).\ncomplement(travel_abroad, attend_meeting).\ncomplement(attend_meeting, travel_abroad).",
        "NL Translation": "When a friend is in town, I attend a meeting or travel abroad. I generally prefer to attend the meeting over traveling abroad. I cannot attend the meeting and travel abroad at the same time."
    },
    {
        "Example Number": 667,
        "Gorgias Code": ":- dynamic financial_aid/0, got_bonus/0, unexpected_guest/0.\nrule(r1, dispose_trash, []) :- financial_aid.\nrule(r2, take_train, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- financial_aid, got_bonus.\nrule(p2, prefer(r2, r1), []) :- financial_aid, got_bonus, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, dispose_trash).\ncomplement(dispose_trash, take_train).\ncomplement(financial_aid, got_bonus).\ncomplement(got_bonus, financial_aid).",
        "NL Translation": "If I have financial aid, I dispose of trash. If I got a bonus, I take the train. If I have both financial aid and a bonus, I prefer to dispose of trash; however, if I also have a medical appointment, I prefer to take the train. If there is an unexpected guest, I prefer to take the train over disposing of trash."
    },
    {
        "Example Number": 575,
        "Gorgias Code": ":- dynamic low_budget/0, extended_work_hours/0, community_event/0\nrule(r1, finish_report, []) :- low_budget.\nrule(r2, swim_session, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, finish_report).\ncomplement(finish_report, swim_session).",
        "NL Translation": "If there is a low budget, I finish the report or have a swim session. Generally, I prefer to finish the report but if I have extended work hours, I prefer to have a swim session. However, if there is a community event, I prefer to finish the report. I can't at the same time finish the report and have a swim session."
    },
    {
        "Example Number": 16,
        "Gorgias Code": ":- dynamic project_extension/0, low_budget/0, unexpected_guest/0, dusk/0, birthday_today/0.\nrule(r1, schedule_meeting, []) :- project_extension.\nrule(r2, take_picnic, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- project_extension, low_budget.\nrule(p2, prefer(r2, r1), []) :- project_extension, low_budget, feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_picnic, schedule_meeting).\ncomplement(schedule_meeting, take_picnic).\ncomplement(project_extension, low_budget).\ncomplement(low_budget, project_extension).",
        "NL Translation": "\"If there is a project extension, I schedule a meeting. If there is a low budget, I take a picnic. I prefer to schedule a meeting over taking a picnic if there is a project extension and a low budget. However, if there is a project extension, low budget, and I am feeling sick, I prefer to take a picnic. If there is an unexpected guest, I prefer to schedule a meeting over taking a picnic. If it is dusk, I prefer to take a picnic over scheduling a meeting. If it is my birthday today, I prefer to schedule a meeting over taking a picnic.\""
    },
    {
        "Example Number": 902,
        "Gorgias Code": ":- dynamic humid_day/0, subscription_due/0\nrule(r1, rent_car, []) :- humid_day.\nrule(r2, visit_doctor, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, rent_car).\ncomplement(rent_car, visit_doctor).",
        "NL Translation": "\"When it is a humid day, I either rent a car or visit the doctor. Generally, I prefer to rent a car but if the subscription is due, I prefer to visit the doctor.\""
    },
    {
        "Example Number": 201,
        "Gorgias Code": ":- dynamic family_gathering/0, invitation_from_friend/0, tax_refund/0, lunch_time/0, unexpected_guest/0.\nrule(r1, water_plants, []) :- family_gathering.\nrule(r2, dispose_trash, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- family_gathering, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- family_gathering, invitation_from_friend, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- unexpected_guest.\nrule(c5, prefer(c4, c3), []).\ncomplement(dispose_trash, water_plants).\ncomplement(water_plants, dispose_trash).\ncomplement(family_gathering, invitation_from_friend).\ncomplement(invitation_from_friend, family_gathering).",
        "NL Translation": "If there is a family gathering, I water plants. If I receive an invitation from a friend, I dispose of trash. If both a family gathering and an invitation from a friend occur, I prefer watering plants; however, if it's also a wedding anniversary, I prefer disposing of trash. If I receive a tax refund, I prefer disposing of trash over watering plants. If it's lunchtime, I prefer watering plants over disposing of trash. If there is an unexpected guest, I prefer disposing of trash over watering plants."
    },
    {
        "Example Number": 537,
        "Gorgias Code": ":- dynamic hail_storm/0, windy_day/0.\nrule(r1, explore_city, []) :- hail_storm.\nrule(r2, attend_concert, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- hail_storm, windy_day.\nrule(p2, prefer(r2, r1), []) :- hail_storm, windy_day, community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_concert, explore_city).\ncomplement(explore_city, attend_concert).\ncomplement(hail_storm, windy_day).\ncomplement(windy_day, hail_storm).",
        "NL Translation": "If there is a hail storm, I explore the city. If it's a windy day, I attend a concert. If there is both a hail storm and a windy day, I prefer to explore the city; however, if there is also a community event, I prefer to attend the concert. I cannot explore the city and attend the concert at the same time, and hail storm and windy day are not compatible."
    },
    {
        "Example Number": 791,
        "Gorgias Code": ":- dynamic deadline_missed/0, school_reunion/0, good_investment/0.\nrule(r1, go_gym, []) :- deadline_missed.\nrule(r2, go_to(restaurant), []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, school_reunion.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, school_reunion, rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), go_gym).\ncomplement(go_gym, go_to(restaurant)).\ncomplement(deadline_missed, school_reunion).\ncomplement(school_reunion, deadline_missed).",
        "NL Translation": "\"If the deadline is missed, I go to the gym. If there is a school reunion, I go to a restaurant. If both the deadline is missed and there is a school reunion, I prefer to go to the gym; however, if it's also a rainy day, I prefer to go to a restaurant. I can't at the same time go to the gym and go to a restaurant, and a missed deadline and a school reunion are not compatible.\""
    },
    {
        "Example Number": 724,
        "Gorgias Code": ":- dynamic important_meeting/0, hot_day/0\nrule(r1, go_shopping, []) :- important_meeting.\nrule(r2, visit_museum, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hot_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, go_shopping).\ncomplement(go_shopping, visit_museum).",
        "NL Translation": "If there is an important meeting, I go shopping. If there is an important meeting, I visit the museum. Generally, I prefer to go shopping but if it is a hot day, I prefer to visit the museum."
    },
    {
        "Example Number": 107,
        "Gorgias Code": ":- dynamic cloudy_day/0, vacation_planned/0\nrule(r1, attend_workshop, []) :- cloudy_day.\nrule(r2, evening_walk, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- vacation_planned.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, attend_workshop).\ncomplement(attend_workshop, evening_walk).",
        "NL Translation": "\"When it is a cloudy day, I attend a workshop or take an evening walk. Generally, I prefer to attend a workshop but if I have a vacation planned, I prefer to take an evening walk. I can't at the same time attend a workshop and take an evening walk.\""
    },
    {
        "Example Number": 351,
        "Gorgias Code": ":- dynamic moving_house/0, feeling_sick/0.\nrule(r1, dispose_trash, []) :- moving_house.\nrule(r2, evening_walk, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- moving_house, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- moving_house, feeling_sick, new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, dispose_trash).\ncomplement(dispose_trash, evening_walk).\ncomplement(moving_house, feeling_sick).\ncomplement(feeling_sick, moving_house).",
        "NL Translation": "\"If I am moving house, I dispose of trash. If I am feeling sick, I take an evening walk. But if I am both moving house and feeling sick, I prefer to dispose of trash; however, if there is also a new neighbor, I prefer to take an evening walk. I can't at the same time take an evening walk and dispose of trash, and moving house and feeling sick are not compatible.\""
    },
    {
        "Example Number": 975,
        "Gorgias Code": ":- dynamic project_extension/0.\nrule(r1, cycling_session, []) :- project_extension.\nrule(r2, call_client, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\ncomplement(call_client, cycling_session).\ncomplement(cycling_session, call_client).",
        "NL Translation": "When there is a project extension, I have a cycling session. When there is a project extension, I call the client. I prefer the cycling session over calling the client. I cannot have both the cycling session and call the client."
    },
    {
        "Example Number": 73,
        "Gorgias Code": ":- dynamic job_interview/0, boss_in_office/0\nrule(r1, buy_groceries, []) :- job_interview.\nrule(r2, review_documents, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\ncomplement(review_documents, buy_groceries).\ncomplement(buy_groceries, review_documents).",
        "NL Translation": "If there is a job interview, I buy groceries or review documents. Generally, I prefer to buy groceries but if the boss is in the office, I prefer to review documents. I can't at the same time buy groceries and review documents."
    },
    {
        "Example Number": 35,
        "Gorgias Code": ":- dynamic important_meeting/0, client_feedback/0, unexpected_expense/0, financial_aid/0, moving_house/0.\nrule(r1, update_project_plan, []) :- important_meeting.\nrule(r2, attend_concert, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- important_meeting, client_feedback.\nrule(p2, prefer(r2, r1), []) :- important_meeting, client_feedback, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, update_project_plan).\ncomplement(update_project_plan, attend_concert).\ncomplement(important_meeting, client_feedback).\ncomplement(client_feedback, important_meeting).",
        "NL Translation": "If there is an important meeting, I update the project plan. If there is client feedback, I attend a concert. If both are present, I prefer to update the project plan; however, if it is also early morning, I prefer to attend the concert. If there is an unexpected expense, I prefer to attend the concert. If there is financial aid, I prefer to update the project plan. If I am moving house, I prefer an updated project plan over attending a concert."
    },
    {
        "Example Number": 631,
        "Gorgias Code": ":- dynamic snowstorm/0, dusk/0, family_emergency/0, important_meeting/0, expensive_event/0.\nrule(r1, yoga_session, []) :- snowstorm.\nrule(r2, go_to(theater), []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- snowstorm, dusk.\nrule(p2, prefer(r2, r1), []) :- snowstorm, dusk, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- expensive_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(theater), yoga_session).\ncomplement(yoga_session, go_to(theater)).\ncomplement(snowstorm, dusk).\ncomplement(dusk, snowstorm).",
        "NL Translation": "If there is a snowstorm, I do a yoga session. If it is dusk, I go to the theater. If there is both a snowstorm and dusk, I prefer to do a yoga session, however if it's also a weekend I prefer to go to the theater. If there is a family emergency, I prefer to go to the theater. If there is an important meeting, I prefer to do a yoga session. If there is an expensive event, I prefer to do a yoga session."
    },
    {
        "Example Number": 833,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, organize_workspace, []) :- lunch_time.\nrule(r2, evening_walk, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(evening_walk, organize_workspace).\ncomplement(organize_workspace, evening_walk).",
        "NL Translation": "When it is lunch time, I organize my workspace or take an evening walk. Generally, I prefer to organize my workspace over taking an evening walk."
    },
    {
        "Example Number": 78,
        "Gorgias Code": ":- dynamic subscription_due/0.\nrule(r1, buy_groceries, []) :- subscription_due.\nrule(r2, visit_family, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, buy_groceries).\ncomplement(buy_groceries, visit_family).",
        "NL Translation": "\"When subscription is due, I buy groceries. When subscription is due, I visit family. I prefer to buy groceries over visiting family.\""
    },
    {
        "Example Number": 640,
        "Gorgias Code": ":- dynamic extended_work_hours/0, project_extension/0, hot_day/0\nrule(r1, update_project_plan, []) :- extended_work_hours.\nrule(r2, book_ride_share, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, update_project_plan).\ncomplement(update_project_plan, book_ride_share).",
        "NL Translation": "If extended work hours, then update project plan or book ride share. Generally prefer to update project plan, but if project extension, then prefer to book ride share. If hot day, prefer to book ride share over updating project plan. Can't book ride share and update project plan at the same time."
    },
    {
        "Example Number": 124,
        "Gorgias Code": ":- dynamic school_reunion/0.\nrule(r1, do_laundry, []) :- school_reunion.\nrule(r2, go_to(theater), []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(theater), do_laundry).\ncomplement(do_laundry, go_to(theater)).",
        "NL Translation": "When there is a school reunion, I do laundry or go to the theater. Generally, I prefer to do laundry over going to the theater."
    },
    {
        "Example Number": 412,
        "Gorgias Code": ":- dynamic party_invitation/0, new_restaurant_to_try/0, rainy_day/0.\nrule(r1, go_to_bar, []) :- party_invitation.\nrule(r2, finish_report, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- party_invitation, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- party_invitation, new_restaurant_to_try, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, go_to_bar).\ncomplement(go_to_bar, finish_report).\ncomplement(party_invitation, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, party_invitation).",
        "NL Translation": "If there is a party invitation, I go to the bar. If there is a new restaurant to try, I finish the report. If there is both a party invitation and a new restaurant to try, I prefer to go to the bar, however if it's also a good investment, I prefer to finish the report. I can't at the same time go to the bar and finish the report, and party invitation and new restaurant to try are not compatible. If it's a rainy day, I prefer to go to the bar over finishing the report."
    },
    {
        "Example Number": 851,
        "Gorgias Code": ":- dynamic job_interview/0, subscription_due/0, good_investment/0, financial_aid/0, urgent_deadline/0.\nrule(r1, order_taxi, []) :- job_interview.\nrule(r2, water_plants, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- job_interview, subscription_due.\nrule(p2, prefer(r2, r1), []) :- job_interview, subscription_due, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(water_plants, order_taxi).\ncomplement(order_taxi, water_plants).\ncomplement(job_interview, subscription_due).\ncomplement(subscription_due, job_interview).",
        "NL Translation": "If there is a job interview, I order a taxi. If a subscription is due, I water plants. I prefer to order a taxi over watering plants if there is both a job interview and a subscription due. However, if there is a job interview, a subscription due, and a wedding anniversary, I prefer to water plants. If there is a good investment, I prefer to water plants over ordering a taxi. If there is financial aid, I prefer to order a taxi over watering plants. If there is an urgent deadline, I prefer to water plants over ordering a taxi."
    },
    {
        "Example Number": 337,
        "Gorgias Code": ":- dynamic discount_on_flight/0, wedding_anniversary/0, extended_work_hours/0\nrule(r1, swim_session, []) :- discount_on_flight.\nrule(r2, clean_house, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(clean_house, swim_session).\ncomplement(swim_session, clean_house).",
        "NL Translation": "If there is a discount on the flight, I can have a swim session or clean the house. Generally, I prefer to have a swim session but if it is our wedding anniversary, I prefer to clean the house. However, if I have extended work hours, I prefer to have a swim session. I can't at the same time have a swim session and clean the house, and extended work hours and wedding anniversary aren't compatible."
    },
    {
        "Example Number": 946,
        "Gorgias Code": ":- dynamic good_investment/0, urgent_deadline/0, boss_in_office/0, concert_nearby/0, new_restaurant_to_try/0.\nrule(r1, finish_report, []) :- good_investment.\nrule(r2, attend_concert, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- good_investment, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- good_investment, urgent_deadline, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_restaurant_to_try.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, finish_report).\ncomplement(finish_report, attend_concert).\ncomplement(good_investment, urgent_deadline).\ncomplement(urgent_deadline, good_investment).",
        "NL Translation": "If there is a good investment, I finish the report. If there is an urgent deadline, I attend the concert. However, if there is both a good investment and an urgent deadline, I prefer to finish the report. If there is a good investment, an urgent deadline, and an expensive event, I prefer to attend the concert. If the boss is in the office, I prefer to finish the report over attending the concert. If there is a concert nearby, I prefer to attend the concert. If there is a new restaurant to try, I prefer to finish the report over attending the concert."
    },
    {
        "Example Number": 426,
        "Gorgias Code": ":- dynamic community_event/0.\nrule(r1, update_project_plan, []) :- community_event.\nrule(r2, read_book, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\ncomplement(read_book, update_project_plan).\ncomplement(update_project_plan, read_book).",
        "NL Translation": "When there is a community event, I update the project plan or read a book. I generally prefer to update the project plan over reading a book."
    },
    {
        "Example Number": 417,
        "Gorgias Code": ":- dynamic relationship_break/0, lunch_time/0\nrule(r1, take_bus, []) :- relationship_break.\nrule(r2, reply_emails, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, take_bus).\ncomplement(take_bus, reply_emails).",
        "NL Translation": "When there is a relationship break, I either take the bus or reply to emails. Generally, I prefer to take the bus but if it is lunchtime, I prefer to reply to emails. I cannot take the bus and reply to emails at the same time."
    },
    {
        "Example Number": 282,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0.\nrule(r1, go_to(theater), []) :- new_restaurant_to_try.\nrule(r2, visit_doctor, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_doctor, go_to(theater)).\ncomplement(go_to(theater), visit_doctor).",
        "NL Translation": "If there is a new restaurant to try, I either go to the theater or visit the doctor. I generally prefer to go to the theater over visiting the doctor."
    },
    {
        "Example Number": 873,
        "Gorgias Code": ":- dynamic weekend/0.\nrule(r1, attend_meeting, []) :- weekend.\nrule(r2, go_to(park), []) :- weekend.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(park), attend_meeting).\ncomplement(attend_meeting, go_to(park)).",
        "NL Translation": "When it is the weekend, I attend a meeting or go to the park. Generally, I prefer to attend a meeting over going to the park. I can't at the same time go to the park and attend a meeting."
    },
    {
        "Example Number": 891,
        "Gorgias Code": ":- dynamic medical_appointment/0, new_restaurant_to_try/0, afternoon/0.\nrule(r1, go_shopping, []) :- medical_appointment.\nrule(r2, buy_groceries, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, new_restaurant_to_try, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, go_shopping).\ncomplement(go_shopping, buy_groceries).\ncomplement(medical_appointment, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, medical_appointment).",
        "NL Translation": "\"If I have a medical appointment, I go shopping. If there is a new restaurant to try, I buy groceries. If I have both a medical appointment and a new restaurant to try, I prefer to go shopping; however, if there is also a low budget, I prefer to buy groceries. In the afternoon, I prefer to buy groceries over going shopping. I can't at the same time go shopping and buy groceries, and having a medical appointment and a new restaurant to try are not compatible.\""
    },
    {
        "Example Number": 945,
        "Gorgias Code": ":- dynamic night_time/0, networking_event/0, party_invitation/0, rainy_day/0, snowstorm/0.\nrule(r1, attend_workshop, []) :- night_time.\nrule(r2, go_gym, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- night_time, networking_event.\nrule(p2, prefer(r2, r1), []) :- night_time, networking_event, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- snowstorm.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_gym, attend_workshop).\ncomplement(attend_workshop, go_gym).\ncomplement(night_time, networking_event).\ncomplement(networking_event, night_time).",
        "NL Translation": "If it is night time, I attend a workshop. If there is a networking event, I go to the gym. I prefer attending a workshop over going to the gym if it is night time and there is a networking event. However, if it is night time, there is a networking event, and there is an urgent deadline, I prefer going to the gym. If there is a party invitation, I prefer going to the gym over attending a workshop. If it is a rainy day, I prefer attending a workshop over going to the gym. If there is a snowstorm, I prefer going to the gym over attending a workshop."
    },
    {
        "Example Number": 53,
        "Gorgias Code": ":- dynamic holiday_season/0.\nrule(r1, plan_meals, []) :- holiday_season.\nrule(r2, go_to(cinema), []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(cinema), plan_meals).\ncomplement(plan_meals, go_to(cinema)).",
        "NL Translation": "When it is holiday season, I plan meals or go to the cinema. Generally, I prefer to plan meals over going to the cinema."
    },
    {
        "Example Number": 853,
        "Gorgias Code": ":- dynamic new_neighbor/0, friend_in_town/0\nrule(r1, go_to(cinema), []) :- new_neighbor.\nrule(r2, go_to(restaurant), []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- friend_in_town.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), go_to(cinema)).\ncomplement(go_to(cinema), go_to(restaurant)).",
        "NL Translation": "If there is a new neighbor, I go to the cinema or the restaurant. Generally, I prefer to go to the cinema but if there is a friend in town, I prefer to go to the restaurant. I can't go to the cinema and the restaurant at the same time."
    },
    {
        "Example Number": 293,
        "Gorgias Code": ":- dynamic boss_in_office/0, job_interview/0\nrule(r1, plan_meals, []) :- boss_in_office.\nrule(r2, attend_concert, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_concert, plan_meals).\ncomplement(plan_meals, attend_concert).",
        "NL Translation": "When the boss is in the office, I plan meals or attend a concert. Generally, I prefer to plan meals, but if there is a job interview, I prefer to attend a concert. I cannot plan meals and attend a concert at the same time."
    },
    {
        "Example Number": 735,
        "Gorgias Code": ":- dynamic holiday_season/0, unexpected_guest/0, got_bonus/0.\nrule(r1, reply_emails, []) :- holiday_season.\nrule(r2, go_shopping, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- holiday_season, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- holiday_season, unexpected_guest, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, reply_emails).\ncomplement(reply_emails, go_shopping).\ncomplement(holiday_season, unexpected_guest).\ncomplement(unexpected_guest, holiday_season).",
        "NL Translation": "\"If it is holiday season, I reply to emails. If there is an unexpected guest, I go shopping. If both holiday season and unexpected guest occur, I prefer to reply to emails. However, if there is financial aid available, I prefer to go shopping. If I receive a bonus, I prefer to reply to emails. I can't at the same time go shopping and reply to emails, and holiday season and unexpected guest are not compatible.\""
    },
    {
        "Example Number": 242,
        "Gorgias Code": ":- dynamic moving_house/0.\nrule(r1, drive_car, []) :- moving_house.\nrule(r2, join_fitness_class, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, drive_car).\ncomplement(drive_car, join_fitness_class).",
        "NL Translation": "When moving house, I either drive the car or join a fitness class. I prefer to drive the car over joining a fitness class."
    },
    {
        "Example Number": 303,
        "Gorgias Code": ":- dynamic relationship_break/0, expensive_event/0, family_gathering/0, community_event/0, important_meeting/0.\nrule(r1, visit_museum, []) :- relationship_break.\nrule(r2, attend_concert, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- relationship_break, expensive_event.\nrule(p2, prefer(r2, r1), []) :- relationship_break, expensive_event, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- important_meeting.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, visit_museum).\ncomplement(visit_museum, attend_concert).\ncomplement(relationship_break, expensive_event).\ncomplement(expensive_event, relationship_break).",
        "NL Translation": "\"If there is a relationship break, I visit the museum. If there is an expensive event, I attend a concert. If both are present, I prefer to visit the museum; however, if there is also a discount on the flight, I prefer to attend the concert. I can't at the same time visit the museum and attend the concert. If there is a family gathering, I prefer to attend the concert. If there is a community event, I prefer to visit the museum. If there is an important meeting, I prefer to attend the concert over the family gathering. If there is an important meeting, I prefer the family gathering over the community event.\""
    },
    {
        "Example Number": 42,
        "Gorgias Code": ":- dynamic low_budget/0, wedding_anniversary/0\nrule(r1, water_plants, []) :- low_budget.\nrule(r2, update_project_plan, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, water_plants).\ncomplement(water_plants, update_project_plan).",
        "NL Translation": "If there is a low budget, I water plants or update project plan. Generally, I prefer to water plants but if it is a wedding anniversary, I prefer to update project plan."
    },
    {
        "Example Number": 992,
        "Gorgias Code": ":- dynamic cloudy_day/0, moving_house/0, team_project_due/0, night_time/0, boss_in_office/0.\nrule(r1, go_gym, []) :- cloudy_day.\nrule(r2, dispose_trash, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, moving_house.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, moving_house, tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(dispose_trash, go_gym).\ncomplement(go_gym, dispose_trash).\ncomplement(cloudy_day, moving_house).\ncomplement(moving_house, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I go to the gym. If I am moving house, I dispose of the trash. I prefer going to the gym over disposing of trash when it is a cloudy day and I am moving house. However, if there is a tax refund, I prefer disposing of trash over going to the gym. If there is a team project due, I prefer going to the gym over disposing of trash. If it is night time, I prefer going to the gym over disposing of trash. If the boss is in the office, I prefer disposing of trash over going to the gym. I cannot go to the gym and dispose of trash at the same time, and cloudy day and moving house are not compatible.\""
    },
    {
        "Example Number": 2,
        "Gorgias Code": ":- dynamic networking_event/0, afternoon/0, snowstorm/0.\nrule(r1, finish_report, []) :- networking_event.\nrule(r2, pay_bills, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- networking_event, afternoon.\nrule(p2, prefer(r2, r1), []) :- networking_event, afternoon, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, finish_report).\ncomplement(finish_report, pay_bills).\ncomplement(networking_event, afternoon).\ncomplement(afternoon, networking_event).",
        "NL Translation": "If there is a networking event, I finish the report. If it's the afternoon, I pay the bills. If both the networking event and the afternoon are happening, I prefer to finish the report; however, if it's also a humid day, I prefer to pay the bills. During a snowstorm, I prefer to pay the bills over finishing the report."
    },
    {
        "Example Number": 274,
        "Gorgias Code": ":- dynamic discount_on_flight/0, expensive_event/0, snowstorm/0\nrule(r1, clean_house, []) :- discount_on_flight.\nrule(r2, pay_bills, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, clean_house).\ncomplement(clean_house, pay_bills).",
        "NL Translation": "If there is a discount on the flight, I clean the house or pay bills. Generally, I prefer to clean the house but if there is an expensive event, I prefer to pay bills. However, if there is a snowstorm, I prefer to pay bills. I can't at the same time clean the house and pay bills."
    },
    {
        "Example Number": 607,
        "Gorgias Code": ":- dynamic extended_work_hours/0, night_time/0, moving_house/0.\nrule(r1, go_to(cinema), []) :- extended_work_hours.\nrule(r2, go_to(restaurant), []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, night_time.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, night_time, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), go_to(cinema)).\ncomplement(go_to(cinema), go_to(restaurant)).\ncomplement(extended_work_hours, night_time).\ncomplement(night_time, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I go to the cinema. If it's night time, I go to a restaurant. But if I have both extended work hours and it's night time, I prefer to go to the cinema; however, if it's also an expensive event, I prefer to go to a restaurant. I can't at the same time go to the cinema and a restaurant, and extended work hours and night time aren't compatible. If I am moving house, I prefer to go to the cinema over a restaurant."
    },
    {
        "Example Number": 82,
        "Gorgias Code": ":- dynamic school_reunion/0, new_neighbor/0, morning_rush/0.\nrule(r1, do_laundry, []) :- school_reunion.\nrule(r2, explore_city, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- school_reunion, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- school_reunion, new_neighbor, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, do_laundry).\ncomplement(do_laundry, explore_city).\ncomplement(school_reunion, new_neighbor).\ncomplement(new_neighbor, school_reunion).",
        "NL Translation": "If there is a school reunion, I do laundry. If there is a new neighbor, I explore the city. If there is both a school reunion and a new neighbor, I prefer to do laundry; however, if a deadline is missed, I prefer to explore the city. If there is a morning rush, I prefer to do laundry over exploring the city."
    },
    {
        "Example Number": 660,
        "Gorgias Code": ":- dynamic good_weather/0.\nrule(r1, take_train, []) :- good_weather.\nrule(r2, read_book, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\ncomplement(read_book, take_train).\ncomplement(take_train, read_book).",
        "NL Translation": "When there is good weather, I either take the train or read a book. Generally, I prefer to take the train over reading a book."
    },
    {
        "Example Number": 995,
        "Gorgias Code": ":- dynamic early_morning/0, night_time/0\nrule(r1, go_to(restaurant), []) :- early_morning.\nrule(r2, go_to_bar, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to_bar, go_to(restaurant)).\ncomplement(go_to(restaurant), go_to_bar).",
        "NL Translation": "When it is early morning, I can go to a restaurant or a bar. Generally, I prefer to go to a restaurant but if it is night time, I prefer to go to a bar. I can't at the same time go to a restaurant and a bar."
    },
    {
        "Example Number": 1000,
        "Gorgias Code": ":- dynamic birthday_today/0, wedding_anniversary/0\nrule(r1, finish_report, []) :- birthday_today.\nrule(r2, water_plants, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, finish_report).\ncomplement(finish_report, water_plants).",
        "NL Translation": "When it is the birthday today, I finish the report or water the plants. Generally, I prefer to finish the report but if it is the wedding anniversary, I prefer to water the plants. I can't at the same time finish the report and water the plants."
    },
    {
        "Example Number": 151,
        "Gorgias Code": ":- dynamic holiday_season/0, unexpected_expense/0\nrule(r1, water_plants, []) :- holiday_season.\nrule(r2, pay_bills, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_expense.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, water_plants).\ncomplement(water_plants, pay_bills).",
        "NL Translation": "When it is holiday season, I water plants or pay bills. Generally, I prefer to water plants but if there is an unexpected expense, I prefer to pay bills. I can't at the same time water plants and pay bills."
    },
    {
        "Example Number": 466,
        "Gorgias Code": ":- dynamic financial_aid/0, family_gathering/0, extended_work_hours/0.\nrule(r1, call_client, []) :- financial_aid.\nrule(r2, go_gym, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- financial_aid, family_gathering.\nrule(p2, prefer(r2, r1), []) :- financial_aid, family_gathering, cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, call_client).\ncomplement(call_client, go_gym).\ncomplement(financial_aid, family_gathering).\ncomplement(family_gathering, financial_aid).",
        "NL Translation": "\"If I have financial aid, I call the client. If there is a family gathering, I go to the gym. If I have both financial aid and a family gathering, I prefer to call the client; however, if it's also a cloudy day, I prefer to go to the gym. I cannot at the same time go to the gym and call the client, and financial aid and family gathering are not compatible. If I have extended work hours, I prefer to go to the gym over calling the client.\""
    },
    {
        "Example Number": 9,
        "Gorgias Code": ":- dynamic project_extension/0, financial_aid/0\nrule(r1, call_client, []) :- project_extension.\nrule(r2, go_shopping, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, call_client).\ncomplement(call_client, go_shopping).",
        "NL Translation": "If I have a project extension, I call the client. If I have financial aid, I go shopping. I prefer to call the client over going shopping, but if I have financial aid, I prefer to go shopping instead."
    },
    {
        "Example Number": 176,
        "Gorgias Code": ":- dynamic dusk/0, family_emergency/0, lunch_time/0, morning_rush/0, new_neighbor/0.\nrule(r1, water_plants, []) :- dusk.\nrule(r2, visit_doctor, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- dusk, family_emergency.\nrule(p2, prefer(r2, r1), []) :- dusk, family_emergency, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_neighbor.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, water_plants).\ncomplement(water_plants, visit_doctor).\ncomplement(dusk, family_emergency).\ncomplement(family_emergency, dusk).",
        "NL Translation": "\"If it is dusk, I water plants. If there is a family emergency, I visit the doctor. If both conditions are met, I prefer to water plants, but if it is also afternoon, I prefer to visit the doctor. I cannot water plants and visit the doctor at the same time. Additionally, if it is lunch time, I prefer watering plants over visiting the doctor. If it is morning rush, I prefer visiting the doctor over watering plants. If there is a new neighbor, I prefer watering plants over visiting the doctor. I cannot at the same time prefer visiting the doctor over watering plants due to a new neighbor.\""
    },
    {
        "Example Number": 86,
        "Gorgias Code": ":- dynamic hail_storm/0, urgent_deadline/0, unexpected_expense/0\nrule(r1, order_taxi, []) :- hail_storm.\nrule(r2, cycle_to_work, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycle_to_work, order_taxi).\ncomplement(order_taxi, cycle_to_work).",
        "NL Translation": "\"When there is a hail storm, I either order a taxi or cycle to work. Generally, I prefer to order a taxi but if there is an urgent deadline, I prefer to cycle to work. However, if there is an unexpected expense, I prefer to order a taxi. I can't at the same time cycle to work and order a taxi.\""
    },
    {
        "Example Number": 332,
        "Gorgias Code": ":- dynamic concert_nearby/0, hail_storm/0, vacation_planned/0.\nrule(r1, clean_house, []) :- concert_nearby.\nrule(r2, reply_emails, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, hail_storm.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, hail_storm, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, clean_house).\ncomplement(clean_house, reply_emails).\ncomplement(concert_nearby, hail_storm).\ncomplement(hail_storm, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I clean the house. If there is a hail storm, I reply to emails. If there is both a concert nearby and a hail storm, I prefer to clean the house; however, if it's also a hot day, I prefer to reply to emails. If I have a vacation planned, I prefer to reply to emails over cleaning the house."
    },
    {
        "Example Number": 50,
        "Gorgias Code": ":- dynamic early_morning/0, community_event/0.\nrule(r1, call_client, []) :- early_morning.\nrule(r2, attend_meeting, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- early_morning, community_event.\nrule(p2, prefer(r2, r1), []) :- early_morning, community_event, project_extension.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, call_client).\ncomplement(call_client, attend_meeting).\ncomplement(early_morning, community_event).\ncomplement(community_event, early_morning).",
        "NL Translation": "\"If it is early morning, I call the client. If there is a community event, I attend the meeting. If both are present, I prefer to call the client; however, if there is also a project extension, I prefer to attend the meeting. I cannot simultaneously call the client and attend the meeting, and early morning and community event are not compatible.\""
    },
    {
        "Example Number": 928,
        "Gorgias Code": ":- dynamic birthday_today/0, community_event/0\nrule(r1, attend_concert, []) :- birthday_today.\nrule(r2, ride_bike, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(ride_bike, attend_concert).\ncomplement(attend_concert, ride_bike).",
        "NL Translation": "When it is someone's birthday today, I either attend a concert or ride a bike. Generally, I prefer to attend a concert but if there is a community event, I prefer to ride a bike. I can't at the same time ride a bike and attend a concert."
    },
    {
        "Example Number": 731,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, early_morning/0, morning_rush/0.\nrule(r1, order_taxi, []) :- wedding_anniversary.\nrule(r2, make_coffee, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, early_morning.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, early_morning, subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, order_taxi).\ncomplement(order_taxi, make_coffee).\ncomplement(wedding_anniversary, early_morning).\ncomplement(early_morning, wedding_anniversary).",
        "NL Translation": "\"If it is our wedding anniversary, I order a taxi. If it is early morning, I make coffee. However, if it is our wedding anniversary and early morning, I prefer to order a taxi, but if there is a subscription due as well, I prefer to make coffee. During the morning rush, I prefer to make coffee over ordering a taxi.\""
    },
    {
        "Example Number": 571,
        "Gorgias Code": ":- dynamic low_budget/0.\nrule(r1, take_train, []) :- low_budget.\nrule(r2, update_project_plan, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\ncomplement(update_project_plan, take_train).\ncomplement(take_train, update_project_plan).",
        "NL Translation": "When there is a low budget, I take the train or update the project plan. Generally, I prefer to take the train over updating the project plan."
    },
    {
        "Example Number": 973,
        "Gorgias Code": ":- dynamic lunch_time/0, deadline_missed/0.\nrule(r1, travel_abroad, []) :- lunch_time.\nrule(r2, reply_emails, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- lunch_time, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- lunch_time, deadline_missed, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, travel_abroad).\ncomplement(travel_abroad, reply_emails).\ncomplement(lunch_time, deadline_missed).\ncomplement(deadline_missed, lunch_time).",
        "NL Translation": "\"When it is lunch time, I travel abroad. If a deadline is missed, I reply to emails. If both lunch time and a deadline missed, I prefer to travel abroad. However, if it is also early morning, I prefer to reply to emails. I cannot travel abroad and reply to emails at the same time, and lunch time and a deadline missed are not compatible.\""
    },
    {
        "Example Number": 330,
        "Gorgias Code": ":- dynamic family_emergency/0.\nrule(r1, review_documents, []) :- family_emergency.\nrule(r2, cycle_to_work, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycle_to_work, review_documents).\ncomplement(review_documents, cycle_to_work).",
        "NL Translation": "When there is a family emergency, I review documents or cycle to work. I prefer to review documents over cycling to work. I cannot review documents and cycle to work at the same time."
    },
    {
        "Example Number": 676,
        "Gorgias Code": ":- dynamic windy_day/0, morning_rush/0, humid_day/0, concert_nearby/0, invitation_from_friend/0.\nrule(r1, schedule_meeting, []) :- windy_day.\nrule(r2, attend_concert, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- windy_day, morning_rush.\nrule(p2, prefer(r2, r1), []) :- windy_day, morning_rush, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, schedule_meeting).\ncomplement(schedule_meeting, attend_concert).\ncomplement(windy_day, morning_rush).\ncomplement(morning_rush, windy_day).",
        "NL Translation": "If it is a windy day, I schedule a meeting. If there is a morning rush, I attend a concert. I prefer to schedule a meeting over attending a concert if it is a windy day and there is a morning rush. However, if it is also a moving house day, I prefer to attend a concert. Additionally, if it is a humid day, I prefer to schedule a meeting over attending a concert. If there is a concert nearby, I prefer to attend the concert. If I receive an invitation from a friend, I prefer to schedule a meeting."
    },
    {
        "Example Number": 492,
        "Gorgias Code": ":- dynamic cloudy_day/0.\nrule(r1, call_client, []) :- cloudy_day.\nrule(r2, join_fitness_class, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, call_client).\ncomplement(call_client, join_fitness_class).",
        "NL Translation": "When it is a cloudy day, I can either call the client or join the fitness class. I generally prefer to call the client over joining the fitness class."
    },
    {
        "Example Number": 683,
        "Gorgias Code": ":- dynamic urgent_deadline/0, good_weather/0, networking_event/0\nrule(r1, go_shopping, []) :- urgent_deadline.\nrule(r2, review_documents, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(review_documents, go_shopping).\ncomplement(go_shopping, review_documents).",
        "NL Translation": "If there is an urgent deadline, I go shopping or review documents. Generally, I prefer to go shopping but if the weather is good, I prefer to review documents. However, if there is a networking event, I prefer to go shopping. I can't at the same time go shopping and review documents."
    },
    {
        "Example Number": 874,
        "Gorgias Code": ":- dynamic birthday_today/0.\nrule(r1, book_flight, []) :- birthday_today.\nrule(r2, visit_museum, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_museum, book_flight).\ncomplement(book_flight, visit_museum).",
        "NL Translation": "When it is the birthday today, I either book a flight or visit a museum. I prefer to book a flight over visiting a museum. I cannot book a flight and visit a museum at the same time."
    },
    {
        "Example Number": 280,
        "Gorgias Code": ":- dynamic job_interview/0, tax_refund/0.\nrule(r1, go_gym, []) :- job_interview.\nrule(r2, pay_bills, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- job_interview, tax_refund.\nrule(p2, prefer(r2, r1), []) :- job_interview, tax_refund, low_budget.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, go_gym).\ncomplement(go_gym, pay_bills).\ncomplement(job_interview, tax_refund).\ncomplement(tax_refund, job_interview).",
        "NL Translation": "If there is a job interview, I go to the gym. If there is a tax refund, I pay bills. If I have both a job interview and a tax refund, I prefer to go to the gym; however, if I also have a low budget, I prefer to pay bills. I cannot go to the gym and pay bills at the same time, and job interview and tax refund are not compatible."
    },
    {
        "Example Number": 230,
        "Gorgias Code": ":- dynamic cloudy_day/0, relationship_break/0\nrule(r1, give_presentation, []) :- cloudy_day.\nrule(r2, book_flight, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_flight, give_presentation).\ncomplement(give_presentation, book_flight).",
        "NL Translation": "If it is a cloudy day, I give a presentation or book a flight. Generally, I prefer to give a presentation but if there is a relationship break, I prefer to book a flight. I can't at the same time give a presentation and book a flight."
    },
    {
        "Example Number": 691,
        "Gorgias Code": ":- dynamic invitation_from_friend/0.\nrule(r1, go_to_bar, []) :- invitation_from_friend.\nrule(r2, make_coffee, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\ncomplement(make_coffee, go_to_bar).\ncomplement(go_to_bar, make_coffee).",
        "NL Translation": "If there is an invitation from a friend, I either go to the bar or make coffee. Generally, I prefer to go to the bar over making coffee."
    },
    {
        "Example Number": 882,
        "Gorgias Code": ":- dynamic job_interview/0, party_invitation/0, new_neighbor/0\nrule(r1, explore_city, []) :- job_interview.\nrule(r2, go_to_bar, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to_bar, explore_city).\ncomplement(explore_city, go_to_bar).",
        "NL Translation": "If there is a job interview, I explore the city or go to the bar. Generally, I prefer to explore the city but if there is a party invitation, I prefer to go to the bar. If there is a new neighbor, I prefer to explore the city over going to the bar."
    },
    {
        "Example Number": 577,
        "Gorgias Code": ":- dynamic subscription_due/0, hot_day/0\nrule(r1, go_to(theater), []) :- subscription_due.\nrule(r2, explore_city, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hot_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(explore_city, go_to(theater)).\ncomplement(go_to(theater), explore_city).",
        "NL Translation": "When there is a subscription due, I go to the theater or explore the city. Generally, I prefer to go to the theater but if it is a hot day, I prefer to explore the city. I can't at the same time go to the theater and explore the city."
    },
    {
        "Example Number": 210,
        "Gorgias Code": ":- dynamic family_emergency/0, moving_house/0, expensive_event/0.\nrule(r1, cycle_to_work, []) :- family_emergency.\nrule(r2, review_documents, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- family_emergency, moving_house.\nrule(p2, prefer(r2, r1), []) :- family_emergency, moving_house, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(review_documents, cycle_to_work).\ncomplement(cycle_to_work, review_documents).\ncomplement(family_emergency, moving_house).\ncomplement(moving_house, family_emergency).",
        "NL Translation": "If there is a family emergency, I cycle to work. If I am moving house, I review documents. If there is both a family emergency and moving house, I prefer to cycle to work; however, if there is also a school reunion, I prefer to review documents. I cannot cycle to work and review documents at the same time, and family emergency and moving house are not compatible. If there is an expensive event, I prefer to review documents over cycling to work."
    },
    {
        "Example Number": 342,
        "Gorgias Code": ":- dynamic weekend/0.\nrule(r1, pay_bills, []) :- weekend.\nrule(r2, schedule_meeting, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\ncomplement(schedule_meeting, pay_bills).\ncomplement(pay_bills, schedule_meeting).",
        "NL Translation": "When it is the weekend, I either pay bills or schedule a meeting. I prefer to pay bills over scheduling a meeting. I can't do both at the same time."
    },
    {
        "Example Number": 965,
        "Gorgias Code": ":- dynamic boss_in_office/0, dusk/0, family_emergency/0, party_invitation/0, vacation_planned/0.\nrule(r1, cycle_to_work, []) :- boss_in_office.\nrule(r2, go_to(park), []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, dusk.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, dusk, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(park), cycle_to_work).\ncomplement(cycle_to_work, go_to(park)).\ncomplement(boss_in_office, dusk).\ncomplement(dusk, boss_in_office).",
        "NL Translation": "\"If the boss is in the office, I cycle to work. If it's dusk, I go to the park. If both conditions are met, I prefer to cycle to work; however, if there is a discount on a flight, I prefer to go to the park. In case of a family emergency, I prefer to go to the park. If there is a party invitation, I prefer to cycle to work. If a vacation is planned, I prefer to go to the park. I can't at the same time go to the park and cycle to work, and the boss being in the office and dusk are not compatible.\""
    },
    {
        "Example Number": 837,
        "Gorgias Code": ":- dynamic client_feedback/0, wedding_anniversary/0, unexpected_guest/0, hail_storm/0, good_weather/0.\nrule(r1, evening_walk, []) :- client_feedback.\nrule(r2, book_flight, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- client_feedback, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- client_feedback, wedding_anniversary, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_weather.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, evening_walk).\ncomplement(evening_walk, book_flight).\ncomplement(client_feedback, wedding_anniversary).\ncomplement(wedding_anniversary, client_feedback).",
        "NL Translation": "If there is client feedback, I go for an evening walk. If it's my wedding anniversary, I book a flight. If both client feedback and wedding anniversary are present, I prefer to go for an evening walk, but if it's also dusk, I prefer to book a flight. If there is an unexpected guest, I prefer to book a flight. If there is a hail storm, I prefer to go for an evening walk. If the weather is good, I prefer to book a flight."
    },
    {
        "Example Number": 974,
        "Gorgias Code": ":- dynamic relationship_break/0, project_extension/0, discount_on_flight/0, client_feedback/0, night_time/0.\nrule(r1, book_ride_share, []) :- relationship_break.\nrule(r2, read_book, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- relationship_break, project_extension.\nrule(p2, prefer(r2, r1), []) :- relationship_break, project_extension, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- night_time.\nrule(c5, prefer(c4, c3), []).\ncomplement(read_book, book_ride_share).\ncomplement(book_ride_share, read_book).\ncomplement(relationship_break, project_extension).\ncomplement(project_extension, relationship_break).",
        "NL Translation": "If there is a relationship break, I book a ride share. If there is a project extension, I read a book. If both a relationship break and a project extension occur, I prefer to book a ride share; however, if it is also my birthday today, I prefer to read a book. If there is a discount on flight, I prefer to book a ride share; if there is client feedback, I prefer to read a book. I can't at the same time read a book and book a ride share, and relationship break and project extension aren't compatible. If it's night time, I prefer to book a ride share over reading a book. If there is a relationship break and a project extension, I prefer to book a ride share over reading a book."
    },
    {
        "Example Number": 302,
        "Gorgias Code": ":- dynamic expensive_event/0, humid_day/0, cloudy_day/0\nrule(r1, organize_workspace, []) :- expensive_event.\nrule(r2, join_fitness_class, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, organize_workspace).\ncomplement(organize_workspace, join_fitness_class).",
        "NL Translation": "\"If there is an expensive event, I organize my workspace or join a fitness class. Generally, I prefer to organize my workspace but if it is a humid day, I prefer to join a fitness class. However, if it is a cloudy day, I prefer to organize my workspace. I can't at the same time organize my workspace and join a fitness class.\""
    },
    {
        "Example Number": 99,
        "Gorgias Code": ":- dynamic got_bonus/0.\nrule(r1, book_flight, []) :- got_bonus.\nrule(r2, host_dinner_party, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, book_flight).\ncomplement(book_flight, host_dinner_party).",
        "NL Translation": "When I have received a bonus, I either book a flight or host a dinner party. Generally, I prefer to book a flight over hosting a dinner party."
    },
    {
        "Example Number": 830,
        "Gorgias Code": ":- dynamic good_investment/0, unexpected_expense/0\nrule(r1, clean_house, []) :- good_investment.\nrule(r2, attend_meeting, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_expense.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, clean_house).\ncomplement(clean_house, attend_meeting).",
        "NL Translation": "When there is a good investment, I clean the house or attend the meeting. Generally, I prefer to clean the house but if there is an unexpected expense, I prefer to attend the meeting."
    },
    {
        "Example Number": 180,
        "Gorgias Code": ":- dynamic family_gathering/0, feeling_sick/0.\nrule(r1, water_plants, []) :- family_gathering.\nrule(r2, order_taxi, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- family_gathering, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- family_gathering, feeling_sick, snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, water_plants).\ncomplement(water_plants, order_taxi).\ncomplement(family_gathering, feeling_sick).\ncomplement(feeling_sick, family_gathering).",
        "NL Translation": "\"If there is a family gathering, I water plants. If I am feeling sick, I order a taxi. But if there is both a family gathering and I am feeling sick, I prefer to water plants. However, if there is also a snowstorm, I prefer to order a taxi. I can't at the same time water plants and order a taxi, and family gathering and feeling sick are not compatible.\""
    },
    {
        "Example Number": 403,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, windy_day/0, urgent_deadline/0\nrule(r1, water_plants, []) :- new_restaurant_to_try.\nrule(r2, visit_museum, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, water_plants).\ncomplement(water_plants, visit_museum).",
        "NL Translation": "If there is a new restaurant to try, I either water plants or visit a museum. Generally, I prefer to water plants, but if it is a windy day, I prefer to visit a museum. However, if there is an urgent deadline, I prefer to water plants over visiting a museum."
    },
    {
        "Example Number": 393,
        "Gorgias Code": ":- dynamic humid_day/0.\nrule(r1, take_train, []) :- humid_day.\nrule(r2, visit_family, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, take_train).\ncomplement(take_train, visit_family).",
        "NL Translation": "\"When it is a humid day, I either take the train or visit family. Generally, I prefer to take the train over visiting family.\""
    },
    {
        "Example Number": 761,
        "Gorgias Code": ":- dynamic good_investment/0, birthday_today/0, networking_event/0\nrule(r1, pay_bills, []) :- good_investment.\nrule(r2, take_bus, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, pay_bills).\ncomplement(pay_bills, take_bus).",
        "NL Translation": "If there is a good investment, I pay bills or take the bus. Generally, I prefer to pay bills but if it's my birthday today, I prefer to take the bus. However, if there is a networking event, I prefer to pay bills. I can't at the same time pay bills and take the bus."
    },
    {
        "Example Number": 875,
        "Gorgias Code": ":- dynamic birthday_today/0.\nrule(r1, organize_workspace, []) :- birthday_today.\nrule(r2, visit_doctor, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_doctor, organize_workspace).\ncomplement(organize_workspace, visit_doctor).",
        "NL Translation": "When it is the birthday today, I can either organize my workspace or visit the doctor. I prefer to organize my workspace over visiting the doctor. I cannot do both at the same time."
    },
    {
        "Example Number": 942,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, school_reunion/0, good_weather/0, medical_appointment/0, concert_nearby/0.\nrule(r1, go_to(restaurant), []) :- wedding_anniversary.\nrule(r2, update_project_plan, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, school_reunion.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, school_reunion, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- concert_nearby.\nrule(c5, prefer(c4, c3), []).\ncomplement(update_project_plan, go_to(restaurant)).\ncomplement(go_to(restaurant), update_project_plan).\ncomplement(wedding_anniversary, school_reunion).\ncomplement(school_reunion, wedding_anniversary).",
        "NL Translation": "If it is your wedding anniversary, you go to a restaurant. If there is a school reunion, you update the project plan. You prefer going to a restaurant over updating the project plan if you have both a wedding anniversary and a school reunion. However, if it's lunchtime, you prefer updating the project plan. You prefer going to a restaurant over updating the project plan if the weather is good. If you have a medical appointment, you prefer updating the project plan. You prefer going to a restaurant over updating the project plan if there is a concert nearby."
    },
    {
        "Example Number": 488,
        "Gorgias Code": ":- dynamic rainy_day/0.\nrule(r1, order_taxi, []) :- rainy_day.\nrule(r2, attend_workshop, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_workshop, order_taxi).\ncomplement(order_taxi, attend_workshop).",
        "NL Translation": "When it is a rainy day, I either order a taxi or attend a workshop. I generally prefer to order a taxi over attending a workshop."
    },
    {
        "Example Number": 897,
        "Gorgias Code": ":- dynamic birthday_today/0, hot_day/0.\nrule(r1, go_to(theater), []) :- birthday_today.\nrule(r2, submit_timesheet, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- birthday_today, hot_day.\nrule(p2, prefer(r2, r1), []) :- birthday_today, hot_day, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(submit_timesheet, go_to(theater)).\ncomplement(go_to(theater), submit_timesheet).\ncomplement(birthday_today, hot_day).\ncomplement(hot_day, birthday_today).",
        "NL Translation": "\"If it is my birthday today, I go to the theater. If it is a hot day, I submit the timesheet. However, if it is both my birthday and a hot day, I prefer to go to the theater; but if there is also a hail storm, I prefer to submit the timesheet.\""
    },
    {
        "Example Number": 373,
        "Gorgias Code": ":- dynamic subscription_due/0, tax_refund/0, birthday_today/0\nrule(r1, explore_city, []) :- subscription_due.\nrule(r2, join_fitness_class, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, explore_city).\ncomplement(explore_city, join_fitness_class).",
        "NL Translation": "\"When there is a subscription due, I explore the city or join a fitness class. Generally, I prefer to explore the city but if there is a tax refund, I prefer to join a fitness class. However, if it is my birthday today, I prefer to explore the city. I can't at the same time explore the city and join a fitness class.\""
    },
    {
        "Example Number": 802,
        "Gorgias Code": ":- dynamic family_emergency/0, urgent_deadline/0, important_meeting/0, client_feedback/0, unexpected_expense/0.\nrule(r1, reply_emails, []) :- family_emergency.\nrule(r2, call_client, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- family_emergency, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- family_emergency, urgent_deadline, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- unexpected_expense.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, reply_emails).\ncomplement(reply_emails, call_client).\ncomplement(family_emergency, urgent_deadline).\ncomplement(urgent_deadline, family_emergency).",
        "NL Translation": "If there is a family emergency, I reply to emails. If there is an urgent deadline, I call the client. If there is a family emergency and an urgent deadline, I prefer to reply to emails; however, if I also got a bonus, I prefer to call the client. If there is an important meeting, I prefer to reply to emails. If there is client feedback, I prefer to call the client. If there is an unexpected expense, I prefer to reply to emails over calling the client."
    },
    {
        "Example Number": 900,
        "Gorgias Code": ":- dynamic discount_on_flight/0, afternoon/0.\nrule(r1, travel_abroad, []) :- discount_on_flight.\nrule(r2, book_flight, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, afternoon.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, afternoon, subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_flight, travel_abroad).\ncomplement(travel_abroad, book_flight).\ncomplement(discount_on_flight, afternoon).\ncomplement(afternoon, discount_on_flight).",
        "NL Translation": "\"If there is a discount on the flight, I travel abroad. If it is in the afternoon, I book a flight. However, if there is both a discount on the flight and it is in the afternoon, I prefer to travel abroad. If there is also a subscription due, I prefer to book a flight. I can't at the same time book a flight and travel abroad, and a discount on the flight and being in the afternoon are not compatible.\""
    },
    {
        "Example Number": 581,
        "Gorgias Code": ":- dynamic discount_on_flight/0, good_weather/0, got_bonus/0, friend_in_town/0, rainy_day/0.\nrule(r1, rent_car, []) :- discount_on_flight.\nrule(r2, visit_museum, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, good_weather.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, good_weather, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- rainy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_museum, rent_car).\ncomplement(rent_car, visit_museum).\ncomplement(discount_on_flight, good_weather).\ncomplement(good_weather, discount_on_flight).",
        "NL Translation": "If there is a discount on the flight, I rent a car. If the weather is good, I visit the museum. I prefer to rent a car over visiting the museum if there is a discount on the flight and the weather is good. However, if it's my wedding anniversary, I prefer to visit the museum. If I got a bonus, I prefer to rent a car over visiting the museum. If a friend is in town, I prefer to visit the museum. If it's a rainy day, I prefer to rent a car over visiting the museum."
    },
    {
        "Example Number": 872,
        "Gorgias Code": ":- dynamic new_neighbor/0, lunch_time/0, client_feedback/0\nrule(r1, dispose_trash, []) :- new_neighbor.\nrule(r2, go_to(restaurant), []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), dispose_trash).\ncomplement(dispose_trash, go_to(restaurant)).",
        "NL Translation": "\"If there is a new neighbor, I dispose trash or go to a restaurant. Generally, I prefer to dispose trash but if it is lunch time, I prefer to go to a restaurant. However, if there is client feedback, I prefer to go to a restaurant. I can't at the same time dispose trash and go to a restaurant.\""
    },
    {
        "Example Number": 467,
        "Gorgias Code": ":- dynamic party_invitation/0, discount_on_flight/0\nrule(r1, cook_dinner, []) :- party_invitation.\nrule(r2, prepare_report, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, cook_dinner).\ncomplement(cook_dinner, prepare_report).",
        "NL Translation": "If there is a party invitation, I cook dinner or prepare a report. Generally, I prefer to cook dinner but if there is a discount on the flight, I prefer to prepare a report. I can't at the same time cook dinner and prepare a report."
    },
    {
        "Example Number": 994,
        "Gorgias Code": ":- dynamic feeling_sick/0, new_neighbor/0\nrule(r1, go_to(park), []) :- feeling_sick.\nrule(r2, make_coffee, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(make_coffee, go_to(park)).\ncomplement(go_to(park), make_coffee).",
        "NL Translation": "\"If feeling sick, I go to the park or make coffee. Generally, I prefer to go to the park but if there is a new neighbor, I prefer to make coffee. I can't at the same time go to the park and make coffee.\""
    },
    {
        "Example Number": 33,
        "Gorgias Code": ":- dynamic snowstorm/0, weekend/0, moving_house/0, expensive_event/0, birthday_today/0.\nrule(r1, book_ride_share, []) :- snowstorm.\nrule(r2, join_fitness_class, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- snowstorm, weekend.\nrule(p2, prefer(r2, r1), []) :- snowstorm, weekend, networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, book_ride_share).\ncomplement(book_ride_share, join_fitness_class).\ncomplement(snowstorm, weekend).\ncomplement(weekend, snowstorm).",
        "NL Translation": "If there is a snowstorm, I book a ride share. If it's the weekend, I join a fitness class. If there is both a snowstorm and it's the weekend, I prefer to book a ride share; however, if there is also a networking event, I prefer to join a fitness class. I cannot book a ride share and join a fitness class at the same time. If I am moving house, I prefer to book a ride share over joining a fitness class. If there is an expensive event, I prefer to join a fitness class over booking a ride share. If it's my birthday today, I prefer to book a ride share over joining a fitness class."
    },
    {
        "Example Number": 382,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, organize_workspace, []) :- good_investment.\nrule(r2, book_flight, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_flight, organize_workspace).\ncomplement(organize_workspace, book_flight).",
        "NL Translation": "When there is a good investment, I organize my workspace or book a flight. Generally, I prefer to organize my workspace over booking a flight."
    },
    {
        "Example Number": 605,
        "Gorgias Code": ":- dynamic networking_event/0, good_weather/0\nrule(r1, take_bus, []) :- networking_event.\nrule(r2, reply_emails, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, take_bus).\ncomplement(take_bus, reply_emails).",
        "NL Translation": "When there is a networking event, I take the bus or reply to emails. Generally, I prefer to take the bus but if the weather is good, I prefer to reply to emails. I can't at the same time take the bus and reply to emails."
    },
    {
        "Example Number": 428,
        "Gorgias Code": ":- dynamic party_invitation/0, night_time/0, got_bonus/0\nrule(r1, book_flight, []) :- party_invitation.\nrule(r2, join_fitness_class, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, book_flight).\ncomplement(book_flight, join_fitness_class).",
        "NL Translation": "\"If there is a party invitation, I book a flight or join a fitness class. Generally, I prefer to book a flight, but if it's night time, I prefer to join a fitness class. If I have received a bonus, I prefer to book a flight over joining a fitness class. I can't at the same time book a flight and join a fitness class.\""
    },
    {
        "Example Number": 158,
        "Gorgias Code": ":- dynamic birthday_today/0, family_gathering/0, night_time/0, weekend/0, got_bonus/0.\nrule(r1, update_project_plan, []) :- birthday_today.\nrule(r2, take_picnic, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- birthday_today, family_gathering.\nrule(p2, prefer(r2, r1), []) :- birthday_today, family_gathering, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- got_bonus.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_picnic, update_project_plan).\ncomplement(update_project_plan, take_picnic).\ncomplement(birthday_today, family_gathering).\ncomplement(family_gathering, birthday_today).",
        "NL Translation": "\"If it is my birthday today, I update the project plan. If there is a family gathering, I take a picnic. I prefer to update the project plan over taking a picnic if it is my birthday and there is a family gathering. However, if it is my birthday, there is a family gathering, and there is a team project due, I prefer to take a picnic. If it is night time, I prefer to update the project plan over taking a picnic. If it is the weekend, I prefer to update the project plan over taking a picnic. If I have received a bonus, I prefer to update the project plan over taking a picnic. I can't at the same time take a picnic and update the project plan, or have my birthday and a family gathering.\""
    },
    {
        "Example Number": 747,
        "Gorgias Code": ":- dynamic family_gathering/0, morning_rush/0\nrule(r1, go_to_bar, []) :- family_gathering.\nrule(r2, visit_doctor, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, go_to_bar).\ncomplement(go_to_bar, visit_doctor).",
        "NL Translation": "When there is a family gathering, I go to the bar or visit the doctor. Generally, I prefer to go to the bar but if there is a morning rush, I prefer to visit the doctor."
    },
    {
        "Example Number": 514,
        "Gorgias Code": ":- dynamic client_feedback/0, financial_aid/0\nrule(r1, rent_car, []) :- client_feedback.\nrule(r2, go_to(cinema), []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(cinema), rent_car).\ncomplement(rent_car, go_to(cinema)).",
        "NL Translation": "When there is client feedback, I either rent a car or go to the cinema. Generally, I prefer to rent a car, but if there is financial aid, I prefer to go to the cinema. I cannot rent a car and go to the cinema at the same time."
    },
    {
        "Example Number": 767,
        "Gorgias Code": ":- dynamic urgent_deadline/0, important_meeting/0.\nrule(r1, travel_abroad, []) :- urgent_deadline.\nrule(r2, go_to(restaurant), []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, important_meeting.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, important_meeting, birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), travel_abroad).\ncomplement(travel_abroad, go_to(restaurant)).\ncomplement(urgent_deadline, important_meeting).\ncomplement(important_meeting, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I travel abroad. If there is an important meeting, I go to a restaurant. However, if there is both an urgent deadline and an important meeting, I prefer to travel abroad; but if it is also my birthday today, I prefer to go to a restaurant. I cannot at the same time go to a restaurant and travel abroad, and urgent deadlines and important meetings are not compatible."
    },
    {
        "Example Number": 628,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, unexpected_guest/0, hot_day/0, birthday_today/0, discount_on_flight/0.\nrule(r1, go_gym, []) :- wedding_anniversary.\nrule(r2, attend_meeting, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, unexpected_guest, boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- discount_on_flight.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_meeting, go_gym).\ncomplement(go_gym, attend_meeting).\ncomplement(wedding_anniversary, unexpected_guest).\ncomplement(unexpected_guest, wedding_anniversary).",
        "NL Translation": "\"If it is your wedding anniversary, you go to the gym. If there is an unexpected guest, you attend a meeting. However, if it is your wedding anniversary and there is an unexpected guest, you prefer to go to the gym, but if your boss is in the office, you prefer to attend the meeting. You can't go to the gym and attend the meeting at the same time. If it is a hot day, you prefer to attend the meeting. If it is your birthday today, you prefer to go to the gym. If there is a discount on a flight, you prefer to attend the meeting.\""
    },
    {
        "Example Number": 401,
        "Gorgias Code": ":- dynamic party_invitation/0, concert_nearby/0, medical_appointment/0, financial_aid/0, hot_day/0.\nrule(r1, meditate, []) :- party_invitation.\nrule(r2, go_to_bar, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- party_invitation, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- party_invitation, concert_nearby, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hot_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to_bar, meditate).\ncomplement(meditate, go_to_bar).\ncomplement(party_invitation, concert_nearby).\ncomplement(concert_nearby, party_invitation).",
        "NL Translation": "If there is a party invitation, I meditate; if there is a concert nearby, I go to the bar. I prefer to meditate over going to the bar if there is a party invitation and a concert nearby. However, if there is a medical appointment, I prefer going to the bar over meditating. If there is financial aid, I prefer meditating over going to the bar. If it is a hot day, I prefer going to the bar over meditating."
    },
    {
        "Example Number": 163,
        "Gorgias Code": ":- dynamic unexpected_expense/0.\nrule(r1, attend_meeting, []) :- unexpected_expense.\nrule(r2, take_picnic, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\ncomplement(take_picnic, attend_meeting).\ncomplement(attend_meeting, take_picnic).",
        "NL Translation": "If there is an unexpected expense, I attend a meeting or take a picnic. Generally, I prefer to attend the meeting over taking a picnic. I cannot attend the meeting and take a picnic at the same time."
    },
    {
        "Example Number": 45,
        "Gorgias Code": ":- dynamic dusk/0, discount_on_flight/0.\nrule(r1, take_train, []) :- dusk.\nrule(r2, go_shopping, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- dusk, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- dusk, discount_on_flight, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, take_train).\ncomplement(take_train, go_shopping).\ncomplement(dusk, discount_on_flight).\ncomplement(discount_on_flight, dusk).",
        "NL Translation": "\"If it is dusk, I take the train. If there is a discount on the flight, I go shopping. However, if it is both dusk and there is a discount on the flight, I prefer to take the train. If there is also a medical appointment, I prefer to go shopping. Go shopping and take the train are mutually exclusive, as well as dusk and discount on flight.\""
    },
    {
        "Example Number": 943,
        "Gorgias Code": ":- dynamic weekend/0, birthday_today/0, new_neighbor/0.\nrule(r1, make_coffee, []) :- weekend.\nrule(r2, rent_car, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- weekend, birthday_today.\nrule(p2, prefer(r2, r1), []) :- weekend, birthday_today, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, make_coffee).\ncomplement(make_coffee, rent_car).\ncomplement(weekend, birthday_today).\ncomplement(birthday_today, weekend).",
        "NL Translation": "\"If it is the weekend, I make coffee or rent a car. If it is also someone's birthday today, I prefer to make coffee, however if there is a party invitation, I prefer to rent a car. If there is a new neighbor, I prefer to rent a car over making coffee.\""
    },
    {
        "Example Number": 457,
        "Gorgias Code": ":- dynamic cloudy_day/0, afternoon/0, wedding_anniversary/0, expensive_event/0, windy_day/0.\nrule(r1, join_fitness_class, []) :- cloudy_day.\nrule(r2, visit_family, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, afternoon.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, afternoon, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_family, join_fitness_class).\ncomplement(join_fitness_class, visit_family).\ncomplement(cloudy_day, afternoon).\ncomplement(afternoon, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I join a fitness class. If it is afternoon, I visit family. I prefer to join a fitness class over visiting family if it is a cloudy day and afternoon, especially if I have extended work hours. However, if it is my wedding anniversary, I prefer to visit family. If there is an expensive event, I prefer to join a fitness class. If it is a windy day, I prefer to visit family over joining a fitness class. I can't visit family and join a fitness class at the same time, and cloudy day and afternoon aren't compatible.\""
    },
    {
        "Example Number": 419,
        "Gorgias Code": ":- dynamic low_budget/0, important_meeting/0\nrule(r1, go_to(cinema), []) :- low_budget.\nrule(r2, prepare_report, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, go_to(cinema)).\ncomplement(go_to(cinema), prepare_report).",
        "NL Translation": "When there is a low budget, I go to the cinema or prepare a report. Generally, I prefer to go to the cinema but if there is an important meeting, I prefer to prepare a report."
    },
    {
        "Example Number": 77,
        "Gorgias Code": ":- dynamic lunch_time/0, cloudy_day/0\nrule(r1, take_train, []) :- lunch_time.\nrule(r2, use_subway, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, take_train).\ncomplement(take_train, use_subway).",
        "NL Translation": "\"When it is lunch time, I can take the train or use the subway. Generally, I prefer to take the train but if it is a cloudy day, I prefer to use the subway. I can't at the same time take the train and use the subway.\""
    },
    {
        "Example Number": 364,
        "Gorgias Code": ":- dynamic cloudy_day/0, extended_work_hours/0, hot_day/0.\nrule(r1, join_fitness_class, []) :- cloudy_day.\nrule(r2, visit_museum, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, extended_work_hours, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, join_fitness_class).\ncomplement(join_fitness_class, visit_museum).\ncomplement(cloudy_day, extended_work_hours).\ncomplement(extended_work_hours, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I either join a fitness class or visit a museum. Generally, I prefer to join a fitness class, but if I have extended work hours, I prefer to visit a museum. However, if there is an unexpected guest, I prefer to visit a museum. If it is a hot day, I prefer to join a fitness class over visiting a museum.\""
    },
    {
        "Example Number": 526,
        "Gorgias Code": ":- dynamic extended_work_hours/0, relationship_break/0, good_investment/0, good_weather/0, cloudy_day/0.\nrule(r1, evening_walk, []) :- extended_work_hours.\nrule(r2, use_subway, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, relationship_break.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, relationship_break, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- cloudy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(use_subway, evening_walk).\ncomplement(evening_walk, use_subway).\ncomplement(extended_work_hours, relationship_break).\ncomplement(relationship_break, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I go for an evening walk. If there is a relationship break, I use the subway. If both conditions are present, I prefer an evening walk; however, if there is also a party invitation, I prefer to use the subway. I cannot simultaneously go for an evening walk and use the subway. Additionally, good weather is preferred over a good investment. On a cloudy day, I prefer a good investment over good weather."
    },
    {
        "Example Number": 315,
        "Gorgias Code": ":- dynamic family_emergency/0, new_restaurant_to_try/0\nrule(r1, call_client, []) :- family_emergency.\nrule(r2, use_subway, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, call_client).\ncomplement(call_client, use_subway).",
        "NL Translation": "If there is a family emergency, I call the client. If there is a family emergency, I use the subway. However, if there is a new restaurant to try, I prefer to call the client. I can't at the same time call the client and use the subway."
    },
    {
        "Example Number": 602,
        "Gorgias Code": ":- dynamic low_budget/0, afternoon/0.\nrule(r1, ride_bike, []) :- low_budget.\nrule(r2, go_gym, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- low_budget, afternoon.\nrule(p2, prefer(r2, r1), []) :- low_budget, afternoon, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, ride_bike).\ncomplement(ride_bike, go_gym).\ncomplement(low_budget, afternoon).\ncomplement(afternoon, low_budget).",
        "NL Translation": "If there is a low budget, I ride a bike. If it is afternoon, I go to the gym. If I have both a low budget and it's afternoon, I prefer to ride a bike. However, if there is also an unexpected guest, I prefer to go to the gym. I cannot at the same time go to the gym and ride a bike, and having a low budget and it being afternoon are not compatible."
    },
    {
        "Example Number": 644,
        "Gorgias Code": ":- dynamic school_reunion/0, feeling_sick/0, wedding_anniversary/0\nrule(r1, drive_car, []) :- school_reunion.\nrule(r2, take_bus, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, drive_car).\ncomplement(drive_car, take_bus).",
        "NL Translation": "\"When there is a school reunion, I drive the car or take the bus. Generally, I prefer to drive the car but if I am feeling sick, I prefer to take the bus. However, if it is my wedding anniversary, I prefer to take the bus. I can't at the same time drive the car and take the bus.\""
    },
    {
        "Example Number": 170,
        "Gorgias Code": ":- dynamic job_interview/0, holiday_season/0.\nrule(r1, go_to(cinema), []) :- job_interview.\nrule(r2, go_to(theater), []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- job_interview, holiday_season.\nrule(p2, prefer(r2, r1), []) :- job_interview, holiday_season, subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(theater), go_to(cinema)).\ncomplement(go_to(cinema), go_to(theater)).\ncomplement(job_interview, holiday_season).\ncomplement(holiday_season, job_interview).",
        "NL Translation": "If there is a job interview, I go to the cinema. If it's the holiday season, I go to the theater. However, if I have both a job interview and it's the holiday season, I prefer to go to the cinema. But if it's also the holiday season and there is a subscription due, I prefer to go to the theater. I can't at the same time go to the cinema and go to the theater, and job interview and holiday season are not compatible."
    },
    {
        "Example Number": 433,
        "Gorgias Code": ":- dynamic unexpected_expense/0, holiday_season/0, cloudy_day/0\nrule(r1, book_ride_share, []) :- unexpected_expense.\nrule(r2, prepare_report, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, book_ride_share).\ncomplement(book_ride_share, prepare_report).",
        "NL Translation": "If there is an unexpected expense, I book a ride share. If there is a holiday season, I prepare a report. I prefer to book a ride share over preparing a report, but during a holiday season, I prefer to prepare a report. However, if it is a cloudy day, I prefer to book a ride share over preparing a report."
    },
    {
        "Example Number": 341,
        "Gorgias Code": ":- dynamic hail_storm/0, client_feedback/0, good_weather/0.\nrule(r1, go_to(theater), []) :- hail_storm.\nrule(r2, reply_emails, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- hail_storm, client_feedback.\nrule(p2, prefer(r2, r1), []) :- hail_storm, client_feedback, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, go_to(theater)).\ncomplement(go_to(theater), reply_emails).\ncomplement(hail_storm, client_feedback).\ncomplement(client_feedback, hail_storm).",
        "NL Translation": "If there is a hail storm, I go to the theater. If there is client feedback, I reply to emails. If there is both a hail storm and client feedback, I prefer to go to the theater. However, if there is also a school reunion, I prefer to reply to emails. I can't reply to emails and go to the theater at the same time. Additionally, good weather is preferred over going to the theater."
    },
    {
        "Example Number": 594,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, cloudy_day/0, extended_work_hours/0\nrule(r1, go_to_bar, []) :- invitation_from_friend.\nrule(r2, finish_report, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, go_to_bar).\ncomplement(go_to_bar, finish_report).",
        "NL Translation": "\"If there is an invitation from a friend, I go to the bar or finish the report. Generally, I prefer to go to the bar but if it's a cloudy day, I prefer to finish the report. However, if there are extended work hours, I prefer to finish the report. I can't at the same time go to the bar and finish the report.\""
    },
    {
        "Example Number": 859,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, book_flight, []) :- extended_work_hours.\nrule(r2, visit_family, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, book_flight).\ncomplement(book_flight, visit_family).",
        "NL Translation": "When I have extended work hours, I either book a flight or visit family. I prefer to book a flight over visiting family. I cannot book a flight and visit family at the same time."
    },
    {
        "Example Number": 54,
        "Gorgias Code": ":- dynamic weekend/0, deadline_missed/0, good_weather/0\nrule(r1, book_ride_share, []) :- weekend.\nrule(r2, pay_bills, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, book_ride_share).\ncomplement(book_ride_share, pay_bills).",
        "NL Translation": "\"When it's the weekend, I book a ride share or pay bills. Generally, I prefer to book a ride share but if the deadline is missed, I prefer to pay bills. However, if the weather is good, I prefer to pay bills over booking a ride share. I can't at the same time book a ride share and pay bills.\""
    },
    {
        "Example Number": 108,
        "Gorgias Code": ":- dynamic party_invitation/0, discount_on_flight/0, urgent_deadline/0\nrule(r1, reply_emails, []) :- party_invitation.\nrule(r2, do_laundry, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, reply_emails).\ncomplement(reply_emails, do_laundry).",
        "NL Translation": "If there is a party invitation, I reply to emails or do laundry. Generally, I prefer to reply to emails, but if there is a discount on a flight, I prefer to do laundry. However, if there is an urgent deadline, I prefer to reply to emails. I can't do laundry and reply to emails at the same time."
    },
    {
        "Example Number": 776,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, water_plants, []) :- lunch_time.\nrule(r2, take_bus, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(take_bus, water_plants).\ncomplement(water_plants, take_bus).",
        "NL Translation": "\"When it is lunch time, I water plants or take the bus. Generally, I prefer to water plants over taking the bus.\""
    },
    {
        "Example Number": 188,
        "Gorgias Code": ":- dynamic boss_in_office/0, new_neighbor/0\nrule(r1, go_shopping, []) :- boss_in_office.\nrule(r2, go_to_bar, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to_bar, go_shopping).\ncomplement(go_shopping, go_to_bar).",
        "NL Translation": "When the boss is in the office, I go shopping or go to the bar. Generally, I prefer to go shopping but if there is a new neighbor, I prefer to go to the bar. I can't at the same time go shopping and go to the bar."
    },
    {
        "Example Number": 983,
        "Gorgias Code": ":- dynamic unexpected_guest/0, hail_storm/0, tax_refund/0, team_project_due/0, urgent_deadline/0.\nrule(r1, visit_museum, []) :- unexpected_guest.\nrule(r2, cook_dinner, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, hail_storm.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, hail_storm, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(cook_dinner, visit_museum).\ncomplement(visit_museum, cook_dinner).\ncomplement(unexpected_guest, hail_storm).\ncomplement(hail_storm, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I visit the museum. If there is a hail storm, I cook dinner. If there is both an unexpected guest and a hail storm, I prefer to visit the museum; however, if it's also a humid day, I prefer to cook dinner. If there is a tax refund, I prefer to cook dinner over visiting the museum. If there is a team project due, I prefer to visit the museum over cooking dinner. If there is an urgent deadline, I prefer to cook dinner over visiting the museum."
    },
    {
        "Example Number": 560,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, team_project_due/0\nrule(r1, give_presentation, []) :- wedding_anniversary.\nrule(r2, visit_doctor, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, give_presentation).\ncomplement(give_presentation, visit_doctor).",
        "NL Translation": "When it is the wedding anniversary, I give a presentation. When it is the wedding anniversary, I visit the doctor. Generally, I prefer to give a presentation but if there is a team project due, I prefer to visit the doctor. I can't at the same time give a presentation and visit the doctor."
    },
    {
        "Example Number": 120,
        "Gorgias Code": ":- dynamic vacation_planned/0.\nrule(r1, go_gym, []) :- vacation_planned.\nrule(r2, drive_car, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\ncomplement(drive_car, go_gym).\ncomplement(go_gym, drive_car).",
        "NL Translation": "When vacation is planned, I go to the gym or drive the car. Generally, I prefer to go to the gym over driving the car. I can't at the same time go to the gym and drive the car."
    },
    {
        "Example Number": 352,
        "Gorgias Code": ":- dynamic community_event/0, morning_rush/0, job_interview/0.\nrule(r1, yoga_session, []) :- community_event.\nrule(r2, rent_car, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- community_event, morning_rush.\nrule(p2, prefer(r2, r1), []) :- community_event, morning_rush, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, yoga_session).\ncomplement(yoga_session, rent_car).\ncomplement(community_event, morning_rush).\ncomplement(morning_rush, community_event).",
        "NL Translation": "If there is a community event, I attend a yoga session. If it's the morning rush, I rent a car. If there is a community event and it's the morning rush, I prefer to attend the yoga session; however, if it's also the holiday season, I prefer to rent a car. If there is a job interview, I prefer to attend the yoga session."
    },
    {
        "Example Number": 892,
        "Gorgias Code": ":- dynamic lunch_time/0, night_time/0.\nrule(r1, go_to(cinema), []) :- lunch_time.\nrule(r2, attend_concert, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- lunch_time, night_time.\nrule(p2, prefer(r2, r1), []) :- lunch_time, night_time, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_concert, go_to(cinema)).\ncomplement(go_to(cinema), attend_concert).\ncomplement(lunch_time, night_time).\ncomplement(night_time, lunch_time).",
        "NL Translation": "\"If it is lunch time, I go to the cinema. If it is night time, I attend a concert. However, if it is both lunch time and night time, I prefer to go to the cinema. But if it is also a medical appointment, I prefer to attend a concert. I can't at the same time go to the cinema and attend a concert, and lunch time and night time are not compatible.\""
    },
    {
        "Example Number": 678,
        "Gorgias Code": ":- dynamic urgent_deadline/0, lunch_time/0.\nrule(r1, go_to(restaurant), []) :- urgent_deadline.\nrule(r2, meditate, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, lunch_time.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, lunch_time, snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, go_to(restaurant)).\ncomplement(go_to(restaurant), meditate).\ncomplement(urgent_deadline, lunch_time).\ncomplement(lunch_time, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I go to the restaurant. If it's lunchtime, I meditate. However, if there is both an urgent deadline and it's lunchtime, I prefer to go to the restaurant. If it's also a snowstorm, I prefer to meditate."
    },
    {
        "Example Number": 692,
        "Gorgias Code": ":- dynamic networking_event/0, financial_aid/0, humid_day/0\nrule(r1, go_gym, []) :- networking_event.\nrule(r2, yoga_session, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, go_gym).\ncomplement(go_gym, yoga_session).",
        "NL Translation": "\"If there is a networking event, I go to the gym or attend a yoga session. Generally, I prefer to go to the gym, but if there is financial aid available, I prefer the yoga session. However, if it's a humid day, I prefer the gym over the yoga session. I can't do both the gym and yoga session, and humid day and financial aid aren't compatible.\""
    },
    {
        "Example Number": 8,
        "Gorgias Code": ":- dynamic job_interview/0, holiday_season/0, night_time/0.\nrule(r1, go_gym, []) :- job_interview.\nrule(r2, attend_concert, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- job_interview, holiday_season.\nrule(p2, prefer(r2, r1), []) :- job_interview, holiday_season, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, go_gym).\ncomplement(go_gym, attend_concert).\ncomplement(job_interview, holiday_season).\ncomplement(holiday_season, job_interview).",
        "NL Translation": "If there is a job interview, I go to the gym. If it is holiday season, I attend a concert. If both the job interview and holiday season are happening, I prefer to go to the gym; however, if there is also a new restaurant to try, I prefer to attend the concert. At night time, I prefer to go to the gym."
    },
    {
        "Example Number": 473,
        "Gorgias Code": ":- dynamic birthday_today/0, holiday_season/0, financial_aid/0.\nrule(r1, do_laundry, []) :- birthday_today.\nrule(r2, organize_workspace, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- birthday_today, holiday_season.\nrule(p2, prefer(r2, r1), []) :- birthday_today, holiday_season, concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, do_laundry).\ncomplement(do_laundry, organize_workspace).\ncomplement(birthday_today, holiday_season).\ncomplement(holiday_season, birthday_today).",
        "NL Translation": "\"If it is your birthday today, you do the laundry. If it is the holiday season, you organize your workspace. If it is both your birthday and the holiday season, you prefer to do the laundry; however, if there is a concert nearby, you prefer to organize your workspace. You cannot do the laundry and organize your workspace at the same time, and your birthday and the holiday season are not compatible. If there is financial aid, you prefer to do the laundry over organizing your workspace.\""
    },
    {
        "Example Number": 749,
        "Gorgias Code": ":- dynamic humid_day/0, invitation_from_friend/0, deadline_missed/0, dusk/0, feeling_sick/0.\nrule(r1, attend_concert, []) :- humid_day.\nrule(r2, join_fitness_class, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- humid_day, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- humid_day, invitation_from_friend, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- feeling_sick.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, attend_concert).\ncomplement(attend_concert, join_fitness_class).\ncomplement(humid_day, invitation_from_friend).\ncomplement(invitation_from_friend, humid_day).",
        "NL Translation": "If it is a humid day, I attend a concert. If I receive an invitation from a friend, I join a fitness class. If both conditions are met, I prefer to attend a concert; however, if there is also a snowstorm, I prefer to join a fitness class. I cannot attend a concert and join a fitness class at the same time. If I miss a deadline, I prefer to join a fitness class over attending a concert. If it is dusk, I prefer to attend a concert over joining a fitness class. If I am feeling sick, I prefer to attend a concert over joining a fitness class."
    },
    {
        "Example Number": 924,
        "Gorgias Code": ":- dynamic birthday_today/0, extended_work_hours/0, project_extension/0.\nrule(r1, call_client, []) :- birthday_today.\nrule(r2, update_project_plan, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- birthday_today, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- birthday_today, extended_work_hours, community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, call_client).\ncomplement(call_client, update_project_plan).\ncomplement(birthday_today, extended_work_hours).\ncomplement(extended_work_hours, birthday_today).",
        "NL Translation": "\"If it is my birthday today, I call the client. If I have extended work hours, I update the project plan. If both my birthday is today and I have extended work hours, I prefer to call the client; however, if there is also a community event, I prefer to update the project plan. I can't at the same time call the client and update the project plan, and having my birthday today and extended work hours are not compatible.\""
    },
    {
        "Example Number": 11,
        "Gorgias Code": ":- dynamic vacation_planned/0, humid_day/0, extended_work_hours/0, hot_day/0, school_reunion/0.\nrule(r1, give_presentation, []) :- vacation_planned.\nrule(r2, go_to(cinema), []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, humid_day.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, humid_day, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- school_reunion.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(cinema), give_presentation).\ncomplement(give_presentation, go_to(cinema)).\ncomplement(vacation_planned, humid_day).\ncomplement(humid_day, vacation_planned).",
        "NL Translation": "If vacation is planned, I give a presentation. If it's a humid day, I go to the cinema. I prefer to give a presentation over going to the cinema if vacation is planned and it's a humid day. However, if I'm moving house, I prefer going to the cinema over giving a presentation. If I have extended work hours, I prefer giving a presentation over going to the cinema. If it's a hot day, I prefer going to the cinema over giving a presentation. If there is a school reunion, I prefer giving a presentation over going to the cinema."
    },
    {
        "Example Number": 261,
        "Gorgias Code": ":- dynamic client_feedback/0, hot_day/0.\nrule(r1, read_book, []) :- client_feedback.\nrule(r2, rent_car, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- client_feedback, hot_day.\nrule(p2, prefer(r2, r1), []) :- client_feedback, hot_day, financial_aid.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, read_book).\ncomplement(read_book, rent_car).\ncomplement(client_feedback, hot_day).\ncomplement(hot_day, client_feedback).",
        "NL Translation": "If there is client feedback, I read a book. If it's a hot day, I rent a car. If there is client feedback and it's a hot day, I prefer to read a book. However, if there is client feedback, it's a hot day, and there is financial aid, I prefer to rent a car."
    },
    {
        "Example Number": 88,
        "Gorgias Code": ":- dynamic expensive_event/0, important_meeting/0, relationship_break/0, tax_refund/0, good_investment/0.\nrule(r1, go_shopping, []) :- expensive_event.\nrule(r2, join_fitness_class, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- expensive_event, important_meeting.\nrule(p2, prefer(r2, r1), []) :- expensive_event, important_meeting, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_investment.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, go_shopping).\ncomplement(go_shopping, join_fitness_class).\ncomplement(expensive_event, important_meeting).\ncomplement(important_meeting, expensive_event).",
        "NL Translation": "If there is an expensive event, I go shopping. If there is an important meeting, I join a fitness class. If both the expensive event and important meeting occur, I prefer to go shopping; however, if it is also in the afternoon, I prefer to join a fitness class. If there is a relationship break, I prefer to join a fitness class over going shopping. If there is a tax refund, I prefer to go shopping over joining a fitness class. If there is a good investment, I prefer going shopping over joining a fitness class."
    },
    {
        "Example Number": 753,
        "Gorgias Code": ":- dynamic morning_rush/0, holiday_season/0, rainy_day/0.\nrule(r1, drive_car, []) :- morning_rush.\nrule(r2, go_to(restaurant), []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- morning_rush, holiday_season.\nrule(p2, prefer(r2, r1), []) :- morning_rush, holiday_season, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), drive_car).\ncomplement(drive_car, go_to(restaurant)).\ncomplement(morning_rush, holiday_season).\ncomplement(holiday_season, morning_rush).",
        "NL Translation": "If there is a morning rush, I drive the car. If it's the holiday season, I go to the restaurant. If both the morning rush and holiday season occur, I prefer to drive the car; however, if there is also a party invitation, I prefer to go to the restaurant. In case of a rainy day, I prefer to go to the restaurant over driving the car."
    },
    {
        "Example Number": 326,
        "Gorgias Code": ":- dynamic moving_house/0, financial_aid/0, unexpected_guest/0\nrule(r1, swim_session, []) :- moving_house.\nrule(r2, water_plants, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, swim_session).\ncomplement(swim_session, water_plants).",
        "NL Translation": "\"If I am moving house, I either have a swim session or water plants. Generally, I prefer to have a swim session but if there is financial aid, I prefer to water plants. However, if there is an unexpected guest, I prefer to have a swim session. I can't at the same time have a swim session and water plants.\""
    },
    {
        "Example Number": 374,
        "Gorgias Code": ":- dynamic night_time/0, party_invitation/0, early_morning/0.\nrule(r1, go_to(restaurant), []) :- night_time.\nrule(r2, attend_concert, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- night_time, party_invitation.\nrule(p2, prefer(r2, r1), []) :- night_time, party_invitation, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, go_to(restaurant)).\ncomplement(go_to(restaurant), attend_concert).\ncomplement(night_time, party_invitation).\ncomplement(party_invitation, night_time).",
        "NL Translation": "If it is night time, I go to a restaurant. If I receive a party invitation, I attend a concert. If both conditions are met, I prefer to go to a restaurant; however, if financial aid is also involved, I prefer to attend the concert. I cannot go to a restaurant and attend a concert at the same time. Night time and party invitations are incompatible. If it is early morning, I prefer to attend a concert over going to a restaurant."
    },
    {
        "Example Number": 649,
        "Gorgias Code": ":- dynamic boss_in_office/0, snowstorm/0, community_event/0\nrule(r1, attend_meeting, []) :- boss_in_office.\nrule(r2, yoga_session, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, attend_meeting).\ncomplement(attend_meeting, yoga_session).",
        "NL Translation": "If the boss is in the office, I attend a meeting or a yoga session. Generally, I prefer to attend a meeting but if there is a snowstorm, I prefer a yoga session. However, if there is a community event, I prefer to attend a meeting. I can't at the same time attend a meeting and have a yoga session."
    },
    {
        "Example Number": 836,
        "Gorgias Code": ":- dynamic unexpected_guest/0, project_extension/0, afternoon/0, party_invitation/0, important_meeting/0.\nrule(r1, go_to(cinema), []) :- unexpected_guest.\nrule(r2, book_flight, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, project_extension.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, project_extension, networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- important_meeting.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, go_to(cinema)).\ncomplement(go_to(cinema), book_flight).\ncomplement(unexpected_guest, project_extension).\ncomplement(project_extension, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I go to the cinema. If there is a project extension, I book a flight. If both an unexpected guest and a project extension occur, I prefer to go to the cinema; however, if there is also a networking event, I prefer to book a flight. If it is afternoon, I prefer to book a flight over going to the cinema. If there is a party invitation, I prefer to go to the cinema. If there is an important meeting, I prefer to book a flight."
    },
    {
        "Example Number": 48,
        "Gorgias Code": ":- dynamic night_time/0, community_event/0, relationship_break/0, networking_event/0, hail_storm/0.\nrule(r1, take_train, []) :- night_time.\nrule(r2, finish_report, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- night_time, community_event.\nrule(p2, prefer(r2, r1), []) :- night_time, community_event, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- hail_storm.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, take_train).\ncomplement(take_train, finish_report).\ncomplement(night_time, community_event).\ncomplement(community_event, night_time).",
        "NL Translation": "\"If it's night time, I take the train. If there is a community event, I finish the report. If both are happening, I prefer to take the train, but if a friend is in town, I prefer to finish the report. If there is a relationship break, I prefer to finish the report over taking the train. If there is a networking event, I prefer to take the train over finishing the report. If there is a hail storm, I prefer to finish the report over taking the train.\""
    },
    {
        "Example Number": 748,
        "Gorgias Code": ":- dynamic cloudy_day/0, school_reunion/0\nrule(r1, cook_dinner, []) :- cloudy_day.\nrule(r2, do_laundry, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(do_laundry, cook_dinner).\ncomplement(cook_dinner, do_laundry).",
        "NL Translation": "When it is a cloudy day, I either cook dinner or do laundry. Generally, I prefer to cook dinner but if there is a school reunion, I prefer to do laundry. I can't at the same time cook dinner and do laundry."
    },
    {
        "Example Number": 479,
        "Gorgias Code": ":- dynamic dusk/0, concert_nearby/0, hail_storm/0\nrule(r1, explore_city, []) :- dusk.\nrule(r2, make_coffee, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, explore_city).\ncomplement(explore_city, make_coffee).",
        "NL Translation": "\"If it is dusk, I can either explore the city or make coffee. Generally, I prefer to explore the city but if there is a concert nearby, I prefer to make coffee. However, if there is a hail storm, I prefer to make coffee over exploring the city.\""
    },
    {
        "Example Number": 608,
        "Gorgias Code": ":- dynamic weekend/0, financial_aid/0.\nrule(r1, travel_abroad, []) :- weekend.\nrule(r2, read_book, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- weekend, financial_aid.\nrule(p2, prefer(r2, r1), []) :- weekend, financial_aid, snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, travel_abroad).\ncomplement(travel_abroad, read_book).\ncomplement(weekend, financial_aid).\ncomplement(financial_aid, weekend).",
        "NL Translation": "\"If it's the weekend, I travel abroad. If I have financial aid, I read a book. However, if it's both the weekend and I have financial aid, I prefer to travel abroad. But if there is also a snowstorm, I prefer to read a book. I can't at the same time travel abroad and read a book, and weekend and financial aid are incompatible.\""
    },
    {
        "Example Number": 720,
        "Gorgias Code": ":- dynamic extended_work_hours/0, good_investment/0\nrule(r1, meditate, []) :- extended_work_hours.\nrule(r2, plan_meals, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_investment.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, meditate).\ncomplement(meditate, plan_meals).",
        "NL Translation": "When I have extended work hours, I either meditate or plan meals. Generally, I prefer to meditate but if it is a good investment, I prefer to plan meals."
    },
    {
        "Example Number": 972,
        "Gorgias Code": ":- dynamic birthday_today/0, relationship_break/0, concert_nearby/0\nrule(r1, make_coffee, []) :- birthday_today.\nrule(r2, visit_museum, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, make_coffee).\ncomplement(make_coffee, visit_museum).",
        "NL Translation": "\"When it is someone's birthday today, I make coffee or visit a museum. Generally, I prefer to make coffee but if there is a relationship break, I prefer to visit a museum. However, if there is a concert nearby, I prefer to make coffee. I can't at the same time make coffee and visit a museum.\""
    },
    {
        "Example Number": 383,
        "Gorgias Code": ":- dynamic extended_work_hours/0, family_emergency/0.\nrule(r1, swim_session, []) :- extended_work_hours.\nrule(r2, read_book, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, family_emergency.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, family_emergency, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, swim_session).\ncomplement(swim_session, read_book).\ncomplement(extended_work_hours, family_emergency).\ncomplement(family_emergency, extended_work_hours).",
        "NL Translation": "\"If I have extended work hours, I have a swim session. If there is a family emergency, I read a book. But if I have both extended work hours and a family emergency, I prefer to have a swim session. However, if there is also an invitation from a friend, I prefer to read a book. I can't at the same time have a swim session and read a book, and extended work hours and a family emergency are not compatible.\""
    },
    {
        "Example Number": 152,
        "Gorgias Code": ":- dynamic tax_refund/0.\nrule(r1, go_gym, []) :- tax_refund.\nrule(r2, host_dinner_party, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, go_gym).\ncomplement(go_gym, host_dinner_party).",
        "NL Translation": "\"When I have a tax refund, I either go to the gym or host a dinner party. I prefer to go to the gym over hosting a dinner party.\""
    },
    {
        "Example Number": 231,
        "Gorgias Code": ":- dynamic morning_rush/0, community_event/0.\nrule(r1, cycle_to_work, []) :- morning_rush.\nrule(r2, update_project_plan, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- morning_rush, community_event.\nrule(p2, prefer(r2, r1), []) :- morning_rush, community_event, networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, cycle_to_work).\ncomplement(cycle_to_work, update_project_plan).\ncomplement(morning_rush, community_event).\ncomplement(community_event, morning_rush).",
        "NL Translation": "\"If there is a morning rush, I cycle to work. If there is a community event, I update the project plan. If both the morning rush and community event occur, I prefer to cycle to work. However, if there is also a networking event, I prefer to update the project plan. I cannot cycle to work and update the project plan at the same time, and morning rush and community event are not compatible.\""
    },
    {
        "Example Number": 659,
        "Gorgias Code": ":- dynamic boss_in_office/0.\nrule(r1, go_to(park), []) :- boss_in_office.\nrule(r2, plan_meals, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\ncomplement(plan_meals, go_to(park)).\ncomplement(go_to(park), plan_meals).",
        "NL Translation": "When the boss is in the office, I go to the park or plan meals. Generally, I prefer to go to the park over planning meals. I cannot go to the park and plan meals at the same time."
    },
    {
        "Example Number": 495,
        "Gorgias Code": ":- dynamic feeling_sick/0, invitation_from_friend/0, tax_refund/0.\nrule(r1, explore_city, []) :- feeling_sick.\nrule(r2, use_subway, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, invitation_from_friend, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, explore_city).\ncomplement(explore_city, use_subway).\ncomplement(feeling_sick, invitation_from_friend).\ncomplement(invitation_from_friend, feeling_sick).",
        "NL Translation": "If feeling sick, explore the city. If invited by a friend, use the subway. Prefer exploring the city over using the subway when feeling sick and invited by a friend. However, if feeling sick, invited by a friend, and it's your birthday today, prefer using the subway. Prefer using the subway over exploring the city if feeling sick, invited by a friend, and it's your birthday today. If there is a tax refund, prefer exploring the city over using the subway."
    },
    {
        "Example Number": 745,
        "Gorgias Code": ":- dynamic windy_day/0, good_investment/0.\nrule(r1, read_book, []) :- windy_day.\nrule(r2, plan_meals, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- windy_day, good_investment.\nrule(p2, prefer(r2, r1), []) :- windy_day, good_investment, morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, read_book).\ncomplement(read_book, plan_meals).\ncomplement(windy_day, good_investment).\ncomplement(good_investment, windy_day).",
        "NL Translation": "If it is a windy day, I read a book. If it is a good investment, I plan meals. If both conditions are met, I prefer to read a book; however, if it's also a morning rush, I prefer to plan meals."
    },
    {
        "Example Number": 523,
        "Gorgias Code": ":- dynamic financial_aid/0, lunch_time/0\nrule(r1, make_coffee, []) :- financial_aid.\nrule(r2, give_presentation, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(give_presentation, make_coffee).\ncomplement(make_coffee, give_presentation).",
        "NL Translation": "If I have financial aid, I make coffee. If it's lunchtime, I give a presentation. I generally prefer to make coffee, but if it's lunchtime, I prefer to give a presentation."
    },
    {
        "Example Number": 991,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, financial_aid/0, lunch_time/0\nrule(r1, clean_house, []) :- wedding_anniversary.\nrule(r2, call_client, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, clean_house).\ncomplement(clean_house, call_client).",
        "NL Translation": "If it is your wedding anniversary, you clean the house or call the client. Generally, you prefer to clean the house but if there is financial aid, you prefer to call the client. If it is lunchtime, you prefer to call the client over cleaning the house."
    },
    {
        "Example Number": 144,
        "Gorgias Code": ":- dynamic team_project_due/0, friend_in_town/0, extended_work_hours/0, holiday_season/0, family_gathering/0.\nrule(r1, book_flight, []) :- team_project_due.\nrule(r2, call_client, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- team_project_due, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- team_project_due, friend_in_town, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_gathering.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, book_flight).\ncomplement(book_flight, call_client).\ncomplement(team_project_due, friend_in_town).\ncomplement(friend_in_town, team_project_due).",
        "NL Translation": "\"If I have a team project due, I book a flight. If a friend is in town, I call the client. I prefer to book a flight over calling the client if I have a team project due and a friend in town. However, if it's a good investment, I prefer to call the client. If I have extended work hours, I prefer calling the client over booking a flight. If it's the holiday season, I prefer booking a flight over calling the client. If there is a family gathering, I prefer calling the client over booking a flight. I can't at the same time book a flight and call the client, have a team project due and a friend in town, have extended work hours and be in the holiday season, or have a family gathering and be in the holiday season.\""
    },
    {
        "Example Number": 68,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, family_gathering/0.\nrule(r1, book_ride_share, []) :- new_restaurant_to_try.\nrule(r2, take_bus, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, family_gathering.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, family_gathering, afternoon.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_bus, book_ride_share).\ncomplement(book_ride_share, take_bus).\ncomplement(new_restaurant_to_try, family_gathering).\ncomplement(family_gathering, new_restaurant_to_try).",
        "NL Translation": "If there is a new restaurant to try, I book a ride share. If there is a family gathering, I take the bus. If there is both a new restaurant to try and a family gathering, I prefer to book a ride share. However, if it's also the afternoon, I prefer to take the bus. I can't at the same time book a ride share and take the bus, and having a new restaurant to try and a family gathering are not compatible."
    },
    {
        "Example Number": 863,
        "Gorgias Code": ":- dynamic unexpected_expense/0, birthday_today/0\nrule(r1, review_documents, []) :- unexpected_expense.\nrule(r2, take_picnic, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, review_documents).\ncomplement(review_documents, take_picnic).",
        "NL Translation": "If there is an unexpected expense, I review documents or take a picnic. Generally, I prefer to review documents but if it is my birthday today, I prefer to take a picnic. I can't at the same time review documents and take a picnic."
    },
    {
        "Example Number": 959,
        "Gorgias Code": ":- dynamic medical_appointment/0, unexpected_expense/0, important_meeting/0, humid_day/0, job_interview/0.\nrule(r1, order_taxi, []) :- medical_appointment.\nrule(r2, submit_timesheet, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, unexpected_expense, community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- job_interview.\nrule(c5, prefer(c4, c3), []).\ncomplement(submit_timesheet, order_taxi).\ncomplement(order_taxi, submit_timesheet).\ncomplement(medical_appointment, unexpected_expense).\ncomplement(unexpected_expense, medical_appointment).",
        "NL Translation": "If there is a medical appointment, I order a taxi. If there is an unexpected expense, I submit a timesheet. If both the medical appointment and unexpected expense occur, I prefer to order a taxi; however, if there is also a community event, I prefer to submit a timesheet. If there is an important meeting, I prefer to submit a timesheet. If it's a humid day, I prefer to order a taxi. If there is a job interview, I prefer to submit a timesheet."
    },
    {
        "Example Number": 984,
        "Gorgias Code": ":- dynamic early_morning/0, discount_on_flight/0.\nrule(r1, make_coffee, []) :- early_morning.\nrule(r2, organize_workspace, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- early_morning, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- early_morning, discount_on_flight, dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, make_coffee).\ncomplement(make_coffee, organize_workspace).\ncomplement(early_morning, discount_on_flight).\ncomplement(discount_on_flight, early_morning).",
        "NL Translation": "If it is early morning, I make coffee. If there is a discount on the flight, I organize my workspace. If both are present, I prefer to make coffee; however, if it is also dusk, I prefer to organize my workspace. I cannot make coffee and organize my workspace at the same time, and early morning and having a discount on the flight are not compatible."
    },
    {
        "Example Number": 604,
        "Gorgias Code": ":- dynamic new_neighbor/0, morning_rush/0, family_emergency/0\nrule(r1, take_picnic, []) :- new_neighbor.\nrule(r2, submit_timesheet, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(submit_timesheet, take_picnic).\ncomplement(take_picnic, submit_timesheet).",
        "NL Translation": "If there is a new neighbor, I either take a picnic or submit a timesheet. Generally, I prefer to submit a timesheet, but if there is a morning rush, I prefer to take a picnic. However, if there is a family emergency, I prefer to submit a timesheet. I cannot take a picnic and submit a timesheet at the same time."
    },
    {
        "Example Number": 100,
        "Gorgias Code": ":- dynamic wedding_anniversary/0.\nrule(r1, do_laundry, []) :- wedding_anniversary.\nrule(r2, book_ride_share, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_ride_share, do_laundry).\ncomplement(do_laundry, book_ride_share).",
        "NL Translation": "When there is a wedding anniversary, I do laundry or book a ride share. Generally, I prefer to do laundry over booking a ride share."
    },
    {
        "Example Number": 729,
        "Gorgias Code": ":- dynamic discount_on_flight/0, networking_event/0, night_time/0, important_meeting/0, concert_nearby/0.\nrule(r1, cycling_session, []) :- discount_on_flight.\nrule(r2, join_fitness_class, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, networking_event.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, networking_event, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- concert_nearby.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, cycling_session).\ncomplement(cycling_session, join_fitness_class).\ncomplement(discount_on_flight, networking_event).\ncomplement(networking_event, discount_on_flight).",
        "NL Translation": "If there is a discount on flight, I have a cycling session. If there is a networking event, I join a fitness class. If both are available, I prefer the cycling session, however, if I am also moving house, I prefer to join the fitness class. If it is night time, I prefer to join a fitness class. If there is an important meeting, I prefer the cycling session. If there is a concert nearby, I prefer to join a fitness class."
    },
    {
        "Example Number": 890,
        "Gorgias Code": ":- dynamic concert_nearby/0, urgent_deadline/0, discount_on_flight/0\nrule(r1, schedule_meeting, []) :- concert_nearby.\nrule(r2, swim_session, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, schedule_meeting).\ncomplement(schedule_meeting, swim_session).",
        "NL Translation": "If there is a concert nearby, I schedule a meeting or attend a swim session. Generally, I prefer to schedule a meeting, but if there is an urgent deadline, I prefer to attend a swim session. However, if there is a discount on the flight, I prefer to schedule a meeting. I cannot attend a swim session and schedule a meeting at the same time."
    },
    {
        "Example Number": 758,
        "Gorgias Code": ":- dynamic unexpected_expense/0, school_reunion/0, hot_day/0, discount_on_flight/0, expensive_event/0.\nrule(r1, finish_report, []) :- unexpected_expense.\nrule(r2, plan_meals, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, school_reunion.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, school_reunion, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- expensive_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(plan_meals, finish_report).\ncomplement(finish_report, plan_meals).\ncomplement(unexpected_expense, school_reunion).\ncomplement(school_reunion, unexpected_expense).",
        "NL Translation": "\"If there is an unexpected expense, I finish the report. If there is a school reunion, I plan meals. If both unexpected expense and school reunion occur, I prefer to finish the report; however, if it is also the holiday season, I prefer to plan meals. In case of a hot day, I prefer to finish the report. If there is a discount on the flight, I prefer to plan meals. If there is an expensive event, I prefer to finish the report over planning meals.\""
    },
    {
        "Example Number": 862,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, medical_appointment/0, family_gathering/0, expensive_event/0, weekend/0.\nrule(r1, morning_run, []) :- invitation_from_friend.\nrule(r2, reply_emails, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, medical_appointment, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- weekend.\nrule(c5, prefer(c4, c3), []).\ncomplement(reply_emails, morning_run).\ncomplement(morning_run, reply_emails).\ncomplement(invitation_from_friend, medical_appointment).\ncomplement(medical_appointment, invitation_from_friend).",
        "NL Translation": "\"If there is an invitation from a friend, I go for a morning run. If I have a medical appointment, I reply to emails. However, if I have both an invitation from a friend and a medical appointment, I prefer to reply to emails. On a humid day, I prefer to reply to emails rather than go for a morning run. If there is a family gathering, I prefer to go for a morning run over replying to emails. If there is an expensive event, I prefer to reply to emails over going for a morning run. On weekends, I prefer replying to emails over going for a morning run. I can't at the same time reply to emails and go for a morning run, or have an invitation from a friend and a medical appointment.\""
    },
    {
        "Example Number": 304,
        "Gorgias Code": ":- dynamic hail_storm/0, extended_work_hours/0, relationship_break/0.\nrule(r1, schedule_meeting, []) :- hail_storm.\nrule(r2, make_coffee, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- hail_storm, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- hail_storm, extended_work_hours, feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, schedule_meeting).\ncomplement(schedule_meeting, make_coffee).\ncomplement(hail_storm, extended_work_hours).\ncomplement(extended_work_hours, hail_storm).",
        "NL Translation": "If there is a hail storm, I schedule a meeting. If I have extended work hours, I make coffee. When both conditions are met, I prefer to schedule a meeting; however, if I also feel sick, I prefer to make coffee. If there is a relationship break, I prefer to make coffee over scheduling a meeting."
    },
    {
        "Example Number": 969,
        "Gorgias Code": ":- dynamic urgent_deadline/0, new_restaurant_to_try/0, project_extension/0\nrule(r1, make_coffee, []) :- urgent_deadline.\nrule(r2, go_gym, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, make_coffee).\ncomplement(make_coffee, go_gym).",
        "NL Translation": "If there is an urgent deadline, I make coffee or go to the gym. Generally, I prefer to make coffee, but if there is a new restaurant to try, I prefer to go to the gym. However, if there is a project extension, I prefer to make coffee. I cannot make coffee and go to the gym at the same time."
    },
    {
        "Example Number": 520,
        "Gorgias Code": ":- dynamic community_event/0, cloudy_day/0\nrule(r1, visit_doctor, []) :- community_event.\nrule(r2, go_to(park), []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(park), visit_doctor).\ncomplement(visit_doctor, go_to(park)).",
        "NL Translation": "\"When there is a community event, I visit the doctor or go to the park. Generally, I prefer to visit the doctor but if it is a cloudy day, I prefer to go to the park. I can't at the same time visit the doctor and go to the park.\""
    },
    {
        "Example Number": 546,
        "Gorgias Code": ":- dynamic rainy_day/0, lunch_time/0\nrule(r1, book_flight, []) :- rainy_day.\nrule(r2, meditate, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, book_flight).\ncomplement(book_flight, meditate).",
        "NL Translation": "When it's a rainy day, I book a flight or meditate. Generally, I prefer to book a flight but if it's lunchtime, I prefer to meditate. I can't at the same time book a flight and meditate."
    },
    {
        "Example Number": 645,
        "Gorgias Code": ":- dynamic tax_refund/0, birthday_today/0\nrule(r1, morning_run, []) :- tax_refund.\nrule(r2, cycling_session, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycling_session, morning_run).\ncomplement(morning_run, cycling_session).",
        "NL Translation": "When I receive a tax refund, I either go for a morning run or have a cycling session. Generally, I prefer a morning run, but if it is my birthday today, I prefer a cycling session. I cannot do both a morning run and a cycling session."
    },
    {
        "Example Number": 778,
        "Gorgias Code": ":- dynamic financial_aid/0.\nrule(r1, attend_workshop, []) :- financial_aid.\nrule(r2, drive_car, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\ncomplement(drive_car, attend_workshop).\ncomplement(attend_workshop, drive_car).",
        "NL Translation": "When there is financial aid, I attend the workshop or drive the car. Generally, I prefer to attend the workshop over driving the car."
    },
    {
        "Example Number": 116,
        "Gorgias Code": ":- dynamic got_bonus/0, family_gathering/0, unexpected_guest/0\nrule(r1, visit_museum, []) :- got_bonus.\nrule(r2, schedule_meeting, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, visit_museum).\ncomplement(visit_museum, schedule_meeting).",
        "NL Translation": "If I got a bonus, I either visit the museum or schedule a meeting. Generally, I prefer to visit the museum but if there is a family gathering, I prefer to schedule a meeting. However, if there is an unexpected guest, I prefer to visit the museum. I can't at the same time visit the museum and schedule a meeting."
    },
    {
        "Example Number": 601,
        "Gorgias Code": ":- dynamic tax_refund/0, windy_day/0, expensive_event/0\nrule(r1, evening_walk, []) :- tax_refund.\nrule(r2, update_project_plan, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, evening_walk).\ncomplement(evening_walk, update_project_plan).",
        "NL Translation": "If there is a tax refund, I either go for an evening walk or update the project plan. Generally, I prefer going for an evening walk, but if it is a windy day, I prefer to update the project plan. However, if there is an expensive event, I prefer to update the project plan over going for an evening walk."
    },
    {
        "Example Number": 739,
        "Gorgias Code": ":- dynamic night_time/0, early_morning/0, project_extension/0, hail_storm/0, boss_in_office/0.\nrule(r1, water_plants, []) :- night_time.\nrule(r2, call_client, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- night_time, early_morning.\nrule(p2, prefer(r2, r1), []) :- night_time, early_morning, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, water_plants).\ncomplement(water_plants, call_client).\ncomplement(night_time, early_morning).\ncomplement(early_morning, night_time).",
        "NL Translation": "\"If it is night time, I water plants. If it is early morning, I call the client. However, if it is both night time and early morning, I prefer to water plants; but if it is also my birthday today, I prefer to call the client. Additionally, if there is a project extension, I prefer to water plants. If there is a hail storm, I prefer to call the client. If the boss is in the office, I prefer to water plants over calling the client.\""
    },
    {
        "Example Number": 367,
        "Gorgias Code": ":- dynamic low_budget/0, new_restaurant_to_try/0.\nrule(r1, morning_run, []) :- low_budget.\nrule(r2, yoga_session, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- low_budget, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- low_budget, new_restaurant_to_try, good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(yoga_session, morning_run).\ncomplement(morning_run, yoga_session).\ncomplement(low_budget, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, low_budget).",
        "NL Translation": "\"If I have a low budget, I go for a morning run. If there is a new restaurant to try, I opt for a yoga session. However, if both conditions are met, I prefer a morning run; but if the weather is good as well, I prefer a yoga session. Yoga session and morning run are not compatible, and having a low budget and a new restaurant to try are also not compatible.\""
    },
    {
        "Example Number": 192,
        "Gorgias Code": ":- dynamic early_morning/0, weekend/0.\nrule(r1, call_client, []) :- early_morning.\nrule(r2, order_taxi, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- early_morning, weekend.\nrule(p2, prefer(r2, r1), []) :- early_morning, weekend, morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, call_client).\ncomplement(call_client, order_taxi).\ncomplement(early_morning, weekend).\ncomplement(weekend, early_morning).",
        "NL Translation": "\"When it's early morning, I call the client. On weekends, I order a taxi. If it's both early morning and a weekend, I prefer to call the client; however, if it's also during the morning rush, I prefer to order a taxi. I can't at the same time call the client and order a taxi, and early morning and weekends are not compatible.\""
    },
    {
        "Example Number": 225,
        "Gorgias Code": ":- dynamic humid_day/0, concert_nearby/0\nrule(r1, yoga_session, []) :- humid_day.\nrule(r2, rent_car, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, yoga_session).\ncomplement(yoga_session, rent_car).",
        "NL Translation": "If it is a humid day, I either have a yoga session or rent a car. Generally, I prefer to have a yoga session but if there is a concert nearby, I prefer to rent a car. I cannot have a yoga session and rent a car at the same time."
    },
    {
        "Example Number": 321,
        "Gorgias Code": ":- dynamic morning_rush/0.\nrule(r1, swim_session, []) :- morning_rush.\nrule(r2, reply_emails, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\ncomplement(reply_emails, swim_session).\ncomplement(swim_session, reply_emails).",
        "NL Translation": "When there is a morning rush, I either have a swim session or reply to emails. I generally prefer to have a swim session over replying to emails. I cannot do both at the same time."
    },
    {
        "Example Number": 354,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, urgent_deadline/0, hail_storm/0, dusk/0, family_emergency/0.\nrule(r1, buy_groceries, []) :- new_restaurant_to_try.\nrule(r2, take_picnic, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, urgent_deadline, feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_emergency.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_picnic, buy_groceries).\ncomplement(buy_groceries, take_picnic).\ncomplement(new_restaurant_to_try, urgent_deadline).\ncomplement(urgent_deadline, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I buy groceries. If there is an urgent deadline, I take a picnic. But if there is both, I prefer to buy groceries; however, if I am feeling sick, I prefer to take a picnic. If there is a hail storm, I prefer to take a picnic. If it's dusk, I prefer to buy groceries. If there is a family emergency, I prefer to buy groceries over taking a picnic.\""
    },
    {
        "Example Number": 927,
        "Gorgias Code": ":- dynamic relationship_break/0, financial_aid/0, urgent_deadline/0.\nrule(r1, organize_workspace, []) :- relationship_break.\nrule(r2, go_to(park), []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- relationship_break, financial_aid.\nrule(p2, prefer(r2, r1), []) :- relationship_break, financial_aid, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(park), organize_workspace).\ncomplement(organize_workspace, go_to(park)).\ncomplement(relationship_break, financial_aid).\ncomplement(financial_aid, relationship_break).",
        "NL Translation": "If there is a relationship break, I organize my workspace. If I have financial aid, I go to the park. If there is both a relationship break and financial aid, I prefer to organize my workspace; however, if it is also my wedding anniversary, I prefer to go to the park. If there is an urgent deadline, I prefer to go to the park over organizing my workspace. I cannot at the same time go to the park and organize my workspace, and a relationship break and financial aid are not compatible."
    },
    {
        "Example Number": 226,
        "Gorgias Code": ":- dynamic early_morning/0, humid_day/0\nrule(r1, go_to(restaurant), []) :- early_morning.\nrule(r2, read_book, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, go_to(restaurant)).\ncomplement(go_to(restaurant), read_book).",
        "NL Translation": "\"When it is early morning, I go to a restaurant or read a book. Generally, I prefer to go to a restaurant but if it is a humid day, I prefer to read a book. I can't at the same time go to a restaurant and read a book.\""
    },
    {
        "Example Number": 976,
        "Gorgias Code": ":- dynamic cloudy_day/0, new_restaurant_to_try/0, extended_work_hours/0.\nrule(r1, buy_groceries, []) :- cloudy_day.\nrule(r2, book_flight, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, new_restaurant_to_try, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_flight, buy_groceries).\ncomplement(buy_groceries, book_flight).\ncomplement(cloudy_day, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I buy groceries. If there is a new restaurant to try, I book a flight. If both conditions are met, I prefer to buy groceries; however, if there is also a family emergency, I prefer to book a flight. If I have extended work hours, I prefer to buy groceries over booking a flight.\""
    },
    {
        "Example Number": 993,
        "Gorgias Code": ":- dynamic discount_on_flight/0, urgent_deadline/0, subscription_due/0\nrule(r1, visit_museum, []) :- discount_on_flight.\nrule(r2, update_project_plan, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, visit_museum).\ncomplement(visit_museum, update_project_plan).",
        "NL Translation": "\"If there is a discount on flight, I visit the museum or update the project plan. Generally, I prefer to visit the museum but if there is an urgent deadline, I prefer to update the project plan. However, if the subscription is due, I prefer to update the project plan. I can't at the same time visit the museum and update the project plan.\""
    },
    {
        "Example Number": 328,
        "Gorgias Code": ":- dynamic humid_day/0, dusk/0, community_event/0\nrule(r1, cook_dinner, []) :- humid_day.\nrule(r2, order_taxi, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, cook_dinner).\ncomplement(cook_dinner, order_taxi).",
        "NL Translation": "\"If it is a humid day, I cook dinner or order a taxi. Generally, I prefer to cook dinner but if it is dusk, I prefer to order a taxi. However, if there is a community event, I prefer to cook dinner. I can't at the same time order a taxi and cook dinner.\""
    },
    {
        "Example Number": 291,
        "Gorgias Code": ":- dynamic holiday_season/0.\nrule(r1, organize_workspace, []) :- holiday_season.\nrule(r2, finish_report, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, organize_workspace).\ncomplement(organize_workspace, finish_report).",
        "NL Translation": "When it is holiday season, I either organize my workspace or finish the report. I generally prefer to organize my workspace over finishing the report. I cannot do both organizing my workspace and finishing the report at the same time."
    },
    {
        "Example Number": 763,
        "Gorgias Code": ":- dynamic project_extension/0, unexpected_expense/0, low_budget/0.\nrule(r1, clean_house, []) :- project_extension.\nrule(r2, travel_abroad, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- project_extension, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- project_extension, unexpected_expense, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(travel_abroad, clean_house).\ncomplement(clean_house, travel_abroad).\ncomplement(project_extension, unexpected_expense).\ncomplement(unexpected_expense, project_extension).",
        "NL Translation": "If there is a project extension, I clean the house. If there is an unexpected expense, I travel abroad. If both the project extension and unexpected expense occur, I prefer to clean the house; however, if it's also the weekend, I prefer to travel abroad. If there is a low budget, I prefer to clean the house over traveling abroad."
    },
    {
        "Example Number": 452,
        "Gorgias Code": ":- dynamic subscription_due/0, feeling_sick/0.\nrule(r1, swim_session, []) :- subscription_due.\nrule(r2, book_flight, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- subscription_due, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- subscription_due, feeling_sick, afternoon.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_flight, swim_session).\ncomplement(swim_session, book_flight).\ncomplement(subscription_due, feeling_sick).\ncomplement(feeling_sick, subscription_due).",
        "NL Translation": "\"If subscription is due, I have a swim session. If I am feeling sick, I book a flight. However, if both conditions are met, I prefer to have a swim session; but if it's also in the afternoon, I prefer to book a flight. I cannot at the same time have a swim session and book a flight, and subscription due and feeling sick are not compatible.\""
    },
    {
        "Example Number": 904,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, rent_car, []) :- good_investment.\nrule(r2, water_plants, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(water_plants, rent_car).\ncomplement(rent_car, water_plants).",
        "NL Translation": "If there is a good investment, I either rent a car or water plants. I generally prefer to rent a car over watering plants."
    },
    {
        "Example Number": 795,
        "Gorgias Code": ":- dynamic afternoon/0, morning_rush/0.\nrule(r1, pay_bills, []) :- afternoon.\nrule(r2, explore_city, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- afternoon, morning_rush.\nrule(p2, prefer(r2, r1), []) :- afternoon, morning_rush, windy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(explore_city, pay_bills).\ncomplement(pay_bills, explore_city).\ncomplement(afternoon, morning_rush).\ncomplement(morning_rush, afternoon).",
        "NL Translation": "If it is afternoon, I pay bills. If there is a morning rush, I explore the city. However, if it is both afternoon and morning rush, I prefer to pay bills. But if it is also a windy day, I prefer to explore the city. I cannot at the same time explore the city and pay bills, and afternoon and morning rush are not compatible."
    },
    {
        "Example Number": 850,
        "Gorgias Code": ":- dynamic tax_refund/0, discount_on_flight/0, low_budget/0, expensive_event/0, snowstorm/0.\nrule(r1, go_to(park), []) :- tax_refund.\nrule(r2, go_to(theater), []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- tax_refund, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- tax_refund, discount_on_flight, networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- snowstorm.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(theater), go_to(park)).\ncomplement(go_to(park), go_to(theater)).\ncomplement(tax_refund, discount_on_flight).\ncomplement(discount_on_flight, tax_refund).",
        "NL Translation": "\"If there is a tax refund, I go to the park. If there is a discount on the flight, I go to the theater. If both the tax refund and discount on the flight are available, I prefer to go to the park; however, if there is a networking event, I prefer to go to the theater. If there is a low budget, I prefer going to the theater over the park. If there is an expensive event, I prefer going to the park over the theater. In case of a snowstorm, I prefer going to the theater over the park.\""
    },
    {
        "Example Number": 395,
        "Gorgias Code": ":- dynamic subscription_due/0, holiday_season/0, got_bonus/0\nrule(r1, evening_walk, []) :- subscription_due.\nrule(r2, cycling_session, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, evening_walk).\ncomplement(evening_walk, cycling_session).",
        "NL Translation": "\"When subscription is due, I go for an evening walk or a cycling session. Generally, I prefer an evening walk but if it's the holiday season, I prefer a cycling session. However, if I have received a bonus, I prefer an evening walk over a cycling session. I can't at the same time go for an evening walk and a cycling session.\""
    },
    {
        "Example Number": 812,
        "Gorgias Code": ":- dynamic urgent_deadline/0, medical_appointment/0, early_morning/0.\nrule(r1, review_documents, []) :- urgent_deadline.\nrule(r2, drive_car, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, medical_appointment, night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, review_documents).\ncomplement(review_documents, drive_car).\ncomplement(urgent_deadline, medical_appointment).\ncomplement(medical_appointment, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I review documents. If I have a medical appointment, I drive a car. If both the urgent deadline and medical appointment are present, I prefer to review documents; however, if it is also nighttime, I prefer to drive a car. I cannot review documents and drive a car at the same time, and urgent deadlines and medical appointments are not compatible. If it is early morning, I prefer to review documents over driving a car."
    },
    {
        "Example Number": 787,
        "Gorgias Code": ":- dynamic feeling_sick/0, concert_nearby/0, expensive_event/0.\nrule(r1, explore_city, []) :- feeling_sick.\nrule(r2, use_subway, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, concert_nearby, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, explore_city).\ncomplement(explore_city, use_subway).\ncomplement(feeling_sick, concert_nearby).\ncomplement(concert_nearby, feeling_sick).",
        "NL Translation": "If feeling sick, explore the city. If there is a concert nearby, use the subway. Prefer to explore the city over using the subway when feeling sick and there is a concert nearby. Prefer to use the subway over exploring the city when feeling sick, there is a concert nearby, and a vacation is planned. Prefer the latter preference over the former if there is an expensive event."
    },
    {
        "Example Number": 505,
        "Gorgias Code": ":- dynamic school_reunion/0, medical_appointment/0.\nrule(r1, travel_abroad, []) :- school_reunion.\nrule(r2, meditate, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- school_reunion, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- school_reunion, medical_appointment, cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, travel_abroad).\ncomplement(travel_abroad, meditate).\ncomplement(school_reunion, medical_appointment).\ncomplement(medical_appointment, school_reunion).",
        "NL Translation": "\"If there is a school reunion, I travel abroad. If I have a medical appointment, I meditate. But if I have both, I prefer to travel abroad; however, if it's also a cloudy day, I prefer to meditate. I can't at the same time travel abroad and meditate, and school reunion and medical appointment aren't compatible.\""
    },
    {
        "Example Number": 300,
        "Gorgias Code": ":- dynamic expensive_event/0, new_restaurant_to_try/0, boss_in_office/0.\nrule(r1, morning_run, []) :- expensive_event.\nrule(r2, go_to(restaurant), []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- expensive_event, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- expensive_event, new_restaurant_to_try, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), morning_run).\ncomplement(morning_run, go_to(restaurant)).\ncomplement(expensive_event, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, expensive_event).",
        "NL Translation": "\"If there is an expensive event, I go for a morning run. If there is a new restaurant to try, I go to the restaurant. If both are present, I prefer to go for a morning run; however, if there is also an invitation from a friend, I prefer to go to the restaurant. If the boss is in the office, I prefer going to the restaurant over a morning run.\""
    },
    {
        "Example Number": 97,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, snowstorm/0, community_event/0.\nrule(r1, cycle_to_work, []) :- wedding_anniversary.\nrule(r2, swim_session, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, snowstorm.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, snowstorm, rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, cycle_to_work).\ncomplement(cycle_to_work, swim_session).\ncomplement(wedding_anniversary, snowstorm).\ncomplement(snowstorm, wedding_anniversary).",
        "NL Translation": "If there is a wedding anniversary, I cycle to work. If there is a snowstorm, I have a swim session. However, if there is both a wedding anniversary and a snowstorm, I prefer to cycle to work; but if it's also a rainy day, I prefer to have a swim session. I can't at the same time cycle to work and have a swim session, and wedding anniversary and snowstorm are not compatible. If there is a community event, I prefer to cycle to work over having a swim session."
    },
    {
        "Example Number": 921,
        "Gorgias Code": ":- dynamic weekend/0, new_restaurant_to_try/0, hail_storm/0, party_invitation/0, friend_in_town/0.\nrule(r1, visit_family, []) :- weekend.\nrule(r2, do_laundry, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- weekend, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- weekend, new_restaurant_to_try, unexpected_expense.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- friend_in_town.\nrule(c5, prefer(c4, c3), []).\ncomplement(do_laundry, visit_family).\ncomplement(visit_family, do_laundry).\ncomplement(weekend, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, weekend).",
        "NL Translation": "\"If it is the weekend, I visit family or do laundry. Generally, I prefer to visit family but if there is a new restaurant to try, I prefer to do laundry. If there is a hail storm, I prefer to do laundry. If there is an unexpected expense, I prefer to visit family. If there is a party invitation, I prefer to do laundry. If a friend is in town, I prefer to visit family. I can't at the same time visit family and do laundry, and weekend and new restaurant to try aren't compatible.\""
    },
    {
        "Example Number": 603,
        "Gorgias Code": ":- dynamic friend_in_town/0.\nrule(r1, prepare_report, []) :- friend_in_town.\nrule(r2, explore_city, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []).\ncomplement(explore_city, prepare_report).\ncomplement(prepare_report, explore_city).",
        "NL Translation": "When a friend is in town, I either prepare a report or explore the city. I generally prefer to prepare a report over exploring the city. I cannot prepare a report and explore the city at the same time."
    },
    {
        "Example Number": 507,
        "Gorgias Code": ":- dynamic school_reunion/0, early_morning/0\nrule(r1, update_project_plan, []) :- school_reunion.\nrule(r2, rent_car, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, update_project_plan).\ncomplement(update_project_plan, rent_car).",
        "NL Translation": "When there is a school reunion, I update the project plan. If it is early morning, I rent a car. If both conditions are met, I prefer to update the project plan."
    },
    {
        "Example Number": 110,
        "Gorgias Code": ":- dynamic unexpected_expense/0, low_budget/0, holiday_season/0\nrule(r1, book_ride_share, []) :- unexpected_expense.\nrule(r2, plan_meals, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, book_ride_share).\ncomplement(book_ride_share, plan_meals).",
        "NL Translation": "If there is an unexpected expense, I book a ride-share. If there is a low budget, I plan meals. Generally, I prefer to book a ride-share over planning meals. However, if it is the holiday season, I prefer to plan meals."
    },
    {
        "Example Number": 444,
        "Gorgias Code": ":- dynamic rainy_day/0, friend_in_town/0, family_gathering/0, relationship_break/0, dusk/0.\nrule(r1, call_client, []) :- rainy_day.\nrule(r2, visit_museum, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- rainy_day, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- rainy_day, friend_in_town, new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- dusk.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_museum, call_client).\ncomplement(call_client, visit_museum).\ncomplement(rainy_day, friend_in_town).\ncomplement(friend_in_town, rainy_day).",
        "NL Translation": "If it is a rainy day, I call the client. If a friend is in town, I visit the museum. When it is both a rainy day and a friend is in town, I prefer to call the client; however, if there is a new neighbor, I prefer to visit the museum. I prefer to visit the museum over calling the client if there is a family gathering. I prefer to call the client over visiting the museum if there is a relationship break. At dusk, I prefer to call the client over visiting the museum."
    },
    {
        "Example Number": 406,
        "Gorgias Code": ":- dynamic urgent_deadline/0, windy_day/0, vacation_planned/0, networking_event/0, tax_refund/0.\nrule(r1, host_dinner_party, []) :- urgent_deadline.\nrule(r2, visit_doctor, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, windy_day.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, windy_day, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- tax_refund.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, host_dinner_party).\ncomplement(host_dinner_party, visit_doctor).\ncomplement(urgent_deadline, windy_day).\ncomplement(windy_day, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I host a dinner party. If it's a windy day, I visit the doctor. If I have both an urgent deadline and a windy day, I prefer to host a dinner party; however, if it's also the weekend, I prefer to visit the doctor. If I have a vacation planned, I prefer to visit the doctor over hosting a dinner party. If there is a networking event, I prefer to host a dinner party over visiting the doctor. If I receive a tax refund, I prefer to host a dinner party over attending a networking event."
    },
    {
        "Example Number": 570,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, morning_rush/0, weekend/0, night_time/0, vacation_planned/0.\nrule(r1, go_gym, []) :- new_restaurant_to_try.\nrule(r2, call_client, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, morning_rush.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, morning_rush, community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, go_gym).\ncomplement(go_gym, call_client).\ncomplement(new_restaurant_to_try, morning_rush).\ncomplement(morning_rush, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I go to the gym. If it's the morning rush, I call the client. However, if there is a new restaurant to try and it's the morning rush, I prefer to go to the gym. If there is a community event, I prefer to call the client. If it's the weekend, I prefer to go to the gym. If it's nighttime, I prefer to call the client. If there is a vacation planned, I prefer to call the client over going to the gym. I can't at the same time call the client and go to the gym, and new restaurant to try and morning rush are not compatible.\""
    },
    {
        "Example Number": 783,
        "Gorgias Code": ":- dynamic rainy_day/0, cloudy_day/0\nrule(r1, visit_museum, []) :- rainy_day.\nrule(r2, morning_run, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(morning_run, visit_museum).\ncomplement(visit_museum, morning_run).",
        "NL Translation": "When it is a rainy day, I visit the museum or go for a morning run. Generally, I prefer to visit the museum but if it is a cloudy day, I prefer to go for a morning run. I can't at the same time visit the museum and go for a morning run."
    },
    {
        "Example Number": 96,
        "Gorgias Code": ":- dynamic feeling_sick/0, hail_storm/0.\nrule(r1, attend_concert, []) :- feeling_sick.\nrule(r2, dispose_trash, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, hail_storm.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, hail_storm, weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, attend_concert).\ncomplement(attend_concert, dispose_trash).\ncomplement(feeling_sick, hail_storm).\ncomplement(hail_storm, feeling_sick).",
        "NL Translation": "If feeling sick, attend concert. If hail storm, dispose trash. If feeling sick and hail storm, prefer attending concert; if also weekend, prefer disposing trash. Attend concert and dispose trash are incompatible, and feeling sick and hail storm are incompatible."
    },
    {
        "Example Number": 950,
        "Gorgias Code": ":- dynamic hot_day/0, friend_in_town/0.\nrule(r1, read_book, []) :- hot_day.\nrule(r2, rent_car, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- hot_day, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- hot_day, friend_in_town, concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, read_book).\ncomplement(read_book, rent_car).\ncomplement(hot_day, friend_in_town).\ncomplement(friend_in_town, hot_day).",
        "NL Translation": "\"If it's a hot day, I read a book. If a friend is in town, I rent a car. But if it's both a hot day and a friend is in town, I prefer to read a book. However, if there is also a concert nearby, I prefer to rent a car. I can't at the same time read a book and rent a car, and hot day and friend in town are not compatible.\""
    },
    {
        "Example Number": 162,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, expensive_event/0, concert_nearby/0\nrule(r1, morning_run, []) :- wedding_anniversary.\nrule(r2, book_flight, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_flight, morning_run).\ncomplement(morning_run, book_flight).",
        "NL Translation": "If there is a wedding anniversary, I go for a morning run. If there is an expensive event, I book a flight. I prefer to go for a morning run over booking a flight. However, if there is a concert nearby, I prefer to book a flight over going for a morning run."
    },
    {
        "Example Number": 7,
        "Gorgias Code": ":- dynamic invitation_from_friend/0.\nrule(r1, organize_workspace, []) :- invitation_from_friend.\nrule(r2, review_documents, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\ncomplement(review_documents, organize_workspace).\ncomplement(organize_workspace, review_documents).",
        "NL Translation": "When there is an invitation from a friend, I either organize my workspace or review documents. Generally, I prefer to organize my workspace over reviewing documents."
    },
    {
        "Example Number": 205,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, client_feedback/0, deadline_missed/0, windy_day/0, urgent_deadline/0.\nrule(r1, attend_meeting, []) :- wedding_anniversary.\nrule(r2, finish_report, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, client_feedback.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, client_feedback, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, attend_meeting).\ncomplement(attend_meeting, finish_report).\ncomplement(wedding_anniversary, client_feedback).\ncomplement(client_feedback, wedding_anniversary).",
        "NL Translation": "If there is a wedding anniversary, attend a meeting. If there is client feedback, finish a report. Prefer attending a meeting over finishing a report if there is a wedding anniversary and client feedback. Prefer finishing a report over attending a meeting if there is a wedding anniversary, client feedback, and morning rush. Prefer finishing a report over attending a meeting if there is a windy day. Prefer attending a meeting over finishing a report if a deadline is missed. Prefer finishing a report over attending a meeting if there is an urgent deadline."
    },
    {
        "Example Number": 458,
        "Gorgias Code": ":- dynamic urgent_deadline/0, night_time/0, early_morning/0, extended_work_hours/0, dusk/0.\nrule(r1, join_fitness_class, []) :- urgent_deadline.\nrule(r2, call_client, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, night_time.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, night_time, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- dusk.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, join_fitness_class).\ncomplement(join_fitness_class, call_client).\ncomplement(urgent_deadline, night_time).\ncomplement(night_time, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I join the fitness class. If it's night time, I call the client. If there is an urgent deadline and it's night time, I prefer to join the fitness class. If there is an urgent deadline, it's night time, and there is a medical appointment, I prefer to call the client. I prefer to call the client over joining the fitness class if it's early morning. I prefer to join the fitness class over calling the client if there are extended work hours. I prefer to call the client over joining the fitness class if it's dusk."
    },
    {
        "Example Number": 61,
        "Gorgias Code": ":- dynamic tax_refund/0, lunch_time/0, family_emergency/0\nrule(r1, ride_bike, []) :- tax_refund.\nrule(r2, schedule_meeting, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, ride_bike).\ncomplement(ride_bike, schedule_meeting).",
        "NL Translation": "If there is a tax refund, I ride a bike or schedule a meeting. Generally, I prefer to ride a bike but if it's lunchtime, I prefer to schedule a meeting. However, if there is a family emergency, I prefer to schedule a meeting over riding a bike. I cannot at the same time ride a bike and schedule a meeting."
    },
    {
        "Example Number": 934,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, extended_work_hours/0, humid_day/0, rainy_day/0, subscription_due/0.\nrule(r1, plan_meals, []) :- invitation_from_friend.\nrule(r2, attend_concert, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, extended_work_hours, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- subscription_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, plan_meals).\ncomplement(plan_meals, attend_concert).\ncomplement(invitation_from_friend, extended_work_hours).\ncomplement(extended_work_hours, invitation_from_friend).",
        "NL Translation": "If there is an invitation from a friend, I plan meals. If I have extended work hours, I attend a concert. If both the invitation from a friend and extended work hours are present, I prefer planning meals; however, if there is a project extension, I prefer attending a concert. In case of a humid day, I prefer planning meals over attending a concert. In case of a rainy day, I prefer attending a concert over planning meals. If there is a subscription due, I prefer planning meals over attending a concert."
    },
    {
        "Example Number": 26,
        "Gorgias Code": ":- dynamic important_meeting/0, weekend/0.\nrule(r1, travel_abroad, []) :- important_meeting.\nrule(r2, go_gym, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- important_meeting, weekend.\nrule(p2, prefer(r2, r1), []) :- important_meeting, weekend, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, travel_abroad).\ncomplement(travel_abroad, go_gym).\ncomplement(important_meeting, weekend).\ncomplement(weekend, important_meeting).",
        "NL Translation": "If there is an important meeting, I travel abroad. If it's the weekend, I go to the gym. If both the important meeting and weekend are present, I prefer to travel abroad; however, if it's also a tax refund day, I prefer to go to the gym. I cannot travel abroad and go to the gym at the same time, and important meetings and weekends are not compatible."
    },
    {
        "Example Number": 60,
        "Gorgias Code": ":- dynamic night_time/0, client_feedback/0, boss_in_office/0.\nrule(r1, take_bus, []) :- night_time.\nrule(r2, call_client, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- night_time, client_feedback.\nrule(p2, prefer(r2, r1), []) :- night_time, client_feedback, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, take_bus).\ncomplement(take_bus, call_client).\ncomplement(night_time, client_feedback).\ncomplement(client_feedback, night_time).",
        "NL Translation": "If it is night time, I take the bus. If there is client feedback, I call the client. I prefer to take the bus over calling the client when it is night time and there is client feedback. However, if there is also a project extension, I prefer to call the client. I can't at the same time take the bus and call the client, and night time and client feedback are not compatible. If the boss is in the office, I prefer to call the client over taking the bus."
    },
    {
        "Example Number": 917,
        "Gorgias Code": ":- dynamic team_project_due/0, morning_rush/0, night_time/0, unexpected_expense/0, unexpected_guest/0.\nrule(r1, give_presentation, []) :- team_project_due.\nrule(r2, take_picnic, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- team_project_due, morning_rush.\nrule(p2, prefer(r2, r1), []) :- team_project_due, morning_rush, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- unexpected_guest.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_picnic, give_presentation).\ncomplement(give_presentation, take_picnic).\ncomplement(team_project_due, morning_rush).\ncomplement(morning_rush, team_project_due).",
        "NL Translation": "If there is a team project due, I give a presentation. If it's during the morning rush, I take a picnic. I prefer giving a presentation over taking a picnic if there is a team project due and it's during the morning rush. However, if it's also dusk, I prefer taking a picnic. If it's night time, I prefer giving a presentation. If there is an unexpected expense, I prefer taking a picnic. If there is an unexpected guest, I prefer giving a presentation. If there is an unexpected guest, I prefer giving a presentation over having an unexpected expense."
    },
    {
        "Example Number": 567,
        "Gorgias Code": ":- dynamic job_interview/0, morning_rush/0, expensive_event/0\nrule(r1, visit_family, []) :- job_interview.\nrule(r2, prepare_report, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, visit_family).\ncomplement(visit_family, prepare_report).",
        "NL Translation": "If there is a job interview, I visit family or prepare a report. Generally, I prefer to visit family but if there is a morning rush, I prefer to prepare a report. However, if there is an expensive event, I prefer to visit family. I can't at the same time visit family and prepare a report."
    },
    {
        "Example Number": 591,
        "Gorgias Code": ":- dynamic networking_event/0, project_extension/0, extended_work_hours/0, relationship_break/0, family_emergency/0.\nrule(r1, visit_museum, []) :- networking_event.\nrule(r2, book_ride_share, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- networking_event, project_extension.\nrule(p2, prefer(r2, r1), []) :- networking_event, project_extension, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_emergency.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_ride_share, visit_museum).\ncomplement(visit_museum, book_ride_share).\ncomplement(networking_event, project_extension).\ncomplement(project_extension, networking_event).",
        "NL Translation": "If there is a networking event, I visit the museum. If there is a project extension, I book a ride share. I prefer to visit the museum over booking a ride share if there is both a networking event and a project extension. If there are extended work hours, I prefer to book a ride share over visiting the museum. If there is a relationship break, I prefer to visit the museum over booking a ride share. If there is a family emergency, I prefer to book a ride share over visiting the museum."
    },
    {
        "Example Number": 626,
        "Gorgias Code": ":- dynamic low_budget/0.\nrule(r1, attend_workshop, []) :- low_budget.\nrule(r2, join_fitness_class, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, attend_workshop).\ncomplement(attend_workshop, join_fitness_class).",
        "NL Translation": "When there is a low budget, I attend a workshop or join a fitness class. Generally, I prefer to attend a workshop over joining a fitness class. I cannot attend a workshop and join a fitness class at the same time."
    },
    {
        "Example Number": 533,
        "Gorgias Code": ":- dynamic birthday_today/0.\nrule(r1, prepare_report, []) :- birthday_today.\nrule(r2, go_shopping, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_shopping, prepare_report).\ncomplement(prepare_report, go_shopping).",
        "NL Translation": "When it is the birthday today, I prepare a report or go shopping. I prefer to prepare a report over going shopping. I can't at the same time go shopping and prepare a report."
    },
    {
        "Example Number": 143,
        "Gorgias Code": ":- dynamic deadline_missed/0, invitation_from_friend/0.\nrule(r1, take_picnic, []) :- deadline_missed.\nrule(r2, travel_abroad, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, invitation_from_friend, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(travel_abroad, take_picnic).\ncomplement(take_picnic, travel_abroad).\ncomplement(deadline_missed, invitation_from_friend).\ncomplement(invitation_from_friend, deadline_missed).",
        "NL Translation": "\"If the deadline is missed, I take a picnic. If there is an invitation from a friend, I travel abroad. However, if both the deadline is missed and there is an invitation from a friend, I prefer to take a picnic. But if there is also a hail storm, I prefer to travel abroad. I cannot at the same time take a picnic and travel abroad, and a missed deadline and an invitation from a friend are not compatible.\""
    },
    {
        "Example Number": 287,
        "Gorgias Code": ":- dynamic deadline_missed/0.\nrule(r1, meditate, []) :- deadline_missed.\nrule(r2, read_book, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\ncomplement(read_book, meditate).\ncomplement(meditate, read_book).",
        "NL Translation": "If the deadline is missed, I either meditate or read a book. I generally prefer to meditate over reading a book."
    },
    {
        "Example Number": 439,
        "Gorgias Code": ":- dynamic feeling_sick/0.\nrule(r1, visit_doctor, []) :- feeling_sick.\nrule(r2, clean_house, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\ncomplement(clean_house, visit_doctor).\ncomplement(visit_doctor, clean_house).",
        "NL Translation": "When feeling sick, I either visit the doctor or clean the house. I prefer to visit the doctor over cleaning the house. I cannot do both at the same time."
    },
    {
        "Example Number": 27,
        "Gorgias Code": ":- dynamic team_project_due/0, boss_in_office/0\nrule(r1, order_taxi, []) :- team_project_due.\nrule(r2, reply_emails, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, order_taxi).\ncomplement(order_taxi, reply_emails).",
        "NL Translation": "When there is a team project due, I order a taxi. When there is a team project due, I reply to emails. Generally, I prefer to order a taxi, but if the boss is in the office, I prefer to reply to emails. I cannot order a taxi and reply to emails at the same time."
    },
    {
        "Example Number": 416,
        "Gorgias Code": ":- dynamic good_weather/0, dusk/0, extended_work_hours/0, friend_in_town/0, team_project_due/0.\nrule(r1, ride_bike, []) :- good_weather.\nrule(r2, take_train, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- good_weather, dusk.\nrule(p2, prefer(r2, r1), []) :- good_weather, dusk, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- team_project_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_train, ride_bike).\ncomplement(ride_bike, take_train).\ncomplement(good_weather, dusk).\ncomplement(dusk, good_weather).",
        "NL Translation": "\"If it is good weather, I ride a bike. If it is dusk, I take the train. If both conditions are met, I prefer to ride a bike, but if there is a project extension, I prefer to take the train. If I have extended work hours, I prefer to take the train over riding a bike. If a friend is in town, I prefer to ride a bike over taking the train. If there is a team project due, I prefer to take the train over riding a bike.\""
    },
    {
        "Example Number": 462,
        "Gorgias Code": ":- dynamic subscription_due/0, moving_house/0, networking_event/0\nrule(r1, finish_report, []) :- subscription_due.\nrule(r2, drive_car, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, finish_report).\ncomplement(finish_report, drive_car).",
        "NL Translation": "\"If there is a subscription due, I finish the report or drive the car. Generally, I prefer to finish the report but if I am moving house, I prefer to drive the car. If there is a networking event, I prefer to finish the report over driving the car. I can't at the same time finish the report and drive the car.\""
    },
    {
        "Example Number": 867,
        "Gorgias Code": ":- dynamic relationship_break/0, good_weather/0, school_reunion/0, community_event/0, good_investment/0.\nrule(r1, submit_timesheet, []) :- relationship_break.\nrule(r2, host_dinner_party, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- relationship_break, good_weather.\nrule(p2, prefer(r2, r1), []) :- relationship_break, good_weather, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_investment.\nrule(c5, prefer(c4, c3), []).\ncomplement(host_dinner_party, submit_timesheet).\ncomplement(submit_timesheet, host_dinner_party).\ncomplement(relationship_break, good_weather).\ncomplement(good_weather, relationship_break).",
        "NL Translation": "\"If there is a relationship break, I submit a timesheet. If the weather is good, I host a dinner party. I prefer to submit a timesheet over hosting a dinner party if there is a relationship break and the weather is good. However, if there is a relationship break, good weather, and a medical appointment, I prefer to host a dinner party. I can't at the same time host a dinner party and submit a timesheet. If there is a school reunion, I prefer submitting a timesheet over hosting a dinner party. If there is a community event, I prefer hosting a dinner party over submitting a timesheet. If there is a good investment, I prefer submitting a timesheet over hosting a dinner party.\""
    },
    {
        "Example Number": 344,
        "Gorgias Code": ":- dynamic snowstorm/0, windy_day/0, unexpected_guest/0.\nrule(r1, ride_bike, []) :- snowstorm.\nrule(r2, finish_report, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- snowstorm, windy_day.\nrule(p2, prefer(r2, r1), []) :- snowstorm, windy_day, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, ride_bike).\ncomplement(ride_bike, finish_report).\ncomplement(snowstorm, windy_day).\ncomplement(windy_day, snowstorm).",
        "NL Translation": "If there is a snowstorm, I ride a bike. If it's a windy day, I finish a report. If there is both a snowstorm and a windy day, I prefer to ride a bike; however, if it's also an important meeting day, I prefer to finish a report. I can't at the same time ride a bike and finish a report, and snowstorm and windy day are not compatible. If there is an unexpected guest, I prefer to ride a bike over finishing a report."
    },
    {
        "Example Number": 564,
        "Gorgias Code": ":- dynamic windy_day/0, client_feedback/0, important_meeting/0.\nrule(r1, rent_car, []) :- windy_day.\nrule(r2, call_client, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- windy_day, client_feedback.\nrule(p2, prefer(r2, r1), []) :- windy_day, client_feedback, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, rent_car).\ncomplement(rent_car, call_client).\ncomplement(windy_day, client_feedback).\ncomplement(client_feedback, windy_day).",
        "NL Translation": "If it is a windy day, I rent a car. If there is client feedback, I call the client. If both conditions are met, I prefer to rent a car; however, if I also received a bonus, I prefer to call the client. If there is an important meeting, I prefer to rent a car over calling the client."
    },
    {
        "Example Number": 524,
        "Gorgias Code": ":- dynamic community_event/0, dusk/0\nrule(r1, go_gym, []) :- community_event.\nrule(r2, submit_timesheet, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(submit_timesheet, go_gym).\ncomplement(go_gym, submit_timesheet).",
        "NL Translation": "\"When there is a community event, I either go to the gym or submit my timesheet. Generally, I prefer to go to the gym but if it is dusk, I prefer to submit my timesheet. I cannot go to the gym and submit my timesheet at the same time.\""
    },
    {
        "Example Number": 193,
        "Gorgias Code": ":- dynamic early_morning/0, tax_refund/0, family_gathering/0\nrule(r1, take_picnic, []) :- early_morning.\nrule(r2, reply_emails, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, take_picnic).\ncomplement(take_picnic, reply_emails).",
        "NL Translation": "If it is early morning, I take a picnic or reply to emails. Generally, I prefer to take a picnic but if there is a tax refund, I prefer to reply to emails. However, if there is a family gathering, I prefer to take a picnic. I cannot do both take a picnic and reply to emails."
    },
    {
        "Example Number": 366,
        "Gorgias Code": ":- dynamic family_gathering/0, low_budget/0, windy_day/0, early_morning/0, holiday_season/0.\nrule(r1, visit_family, []) :- family_gathering.\nrule(r2, finish_report, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- family_gathering, low_budget.\nrule(p2, prefer(r2, r1), []) :- family_gathering, low_budget, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- holiday_season.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, visit_family).\ncomplement(visit_family, finish_report).\ncomplement(family_gathering, low_budget).\ncomplement(low_budget, family_gathering).",
        "NL Translation": "If there is a family gathering, I visit family. If there is a low budget, I finish the report. If there is both a family gathering and a low budget, I prefer to visit family, but if the weather is good, I prefer to finish the report. If it's a windy day, I prefer to finish the report over visiting family. If it's early morning, I prefer to visit family over finishing the report. If it's a holiday season, I prefer to finish the report over visiting family."
    },
    {
        "Example Number": 944,
        "Gorgias Code": ":- dynamic party_invitation/0.\nrule(r1, prepare_report, []) :- party_invitation.\nrule(r2, order_taxi, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\ncomplement(order_taxi, prepare_report).\ncomplement(prepare_report, order_taxi).",
        "NL Translation": "When there is a party invitation, I prepare a report or order a taxi. I prefer to prepare a report over ordering a taxi. I cannot prepare a report and order a taxi at the same time."
    },
    {
        "Example Number": 527,
        "Gorgias Code": ":- dynamic boss_in_office/0.\nrule(r1, host_dinner_party, []) :- boss_in_office.\nrule(r2, finish_report, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, host_dinner_party).\ncomplement(host_dinner_party, finish_report).",
        "NL Translation": "When the boss is in the office, I either host a dinner party or finish a report. I generally prefer to host a dinner party over finishing a report."
    },
    {
        "Example Number": 290,
        "Gorgias Code": ":- dynamic got_bonus/0, school_reunion/0\nrule(r1, travel_abroad, []) :- got_bonus.\nrule(r2, book_flight, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_flight, travel_abroad).\ncomplement(travel_abroad, book_flight).",
        "NL Translation": "If I got a bonus, I either travel abroad or book a flight. Generally, I prefer to travel abroad but if there is a school reunion, I prefer to book a flight. I can't at the same time travel abroad and book a flight."
    },
    {
        "Example Number": 273,
        "Gorgias Code": ":- dynamic client_feedback/0, morning_rush/0\nrule(r1, attend_concert, []) :- client_feedback.\nrule(r2, update_project_plan, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, attend_concert).\ncomplement(attend_concert, update_project_plan).",
        "NL Translation": "When there is client feedback, I attend a concert or update the project plan. Generally, I prefer to attend a concert but if there is a morning rush, I prefer to update the project plan. I cannot attend a concert and update the project plan at the same time."
    },
    {
        "Example Number": 270,
        "Gorgias Code": ":- dynamic networking_event/0, hot_day/0, team_project_due/0, party_invitation/0, holiday_season/0.\nrule(r1, read_book, []) :- networking_event.\nrule(r2, review_documents, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- networking_event, hot_day.\nrule(p2, prefer(r2, r1), []) :- networking_event, hot_day, community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- holiday_season.\nrule(c5, prefer(c4, c3), []).\ncomplement(review_documents, read_book).\ncomplement(read_book, review_documents).\ncomplement(networking_event, hot_day).\ncomplement(hot_day, networking_event).",
        "NL Translation": "If there is a networking event, I read a book. If it's a hot day, I review documents. If both the networking event and hot day occur, I prefer to read a book; however, if there is also a community event, I prefer to review documents. If there is a team project due, I prefer to read a book over reviewing documents. If there is a party invitation, I prefer to review documents over reading a book. If it's the holiday season, I prefer to read a book over reviewing documents."
    },
    {
        "Example Number": 56,
        "Gorgias Code": ":- dynamic holiday_season/0, new_restaurant_to_try/0, good_weather/0, community_event/0, weekend/0.\nrule(r1, buy_groceries, []) :- holiday_season.\nrule(r2, go_to(cinema), []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- holiday_season, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- holiday_season, new_restaurant_to_try, new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- weekend.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(cinema), buy_groceries).\ncomplement(buy_groceries, go_to(cinema)).\ncomplement(holiday_season, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, holiday_season).",
        "NL Translation": "\"If it is holiday season, I buy groceries. If there is a new restaurant to try, I go to the cinema. If both holiday season and new restaurant to try are present, I prefer to buy groceries; however, if there is also a new neighbor, I prefer to go to the cinema. I can't at the same time go to the cinema and buy groceries. If there is good weather, I prefer to buy groceries over going to the cinema. If there is a community event, I prefer to go to the cinema over buying groceries. If it's the weekend, I prefer to buy groceries over going to the cinema.\""
    },
    {
        "Example Number": 497,
        "Gorgias Code": ":- dynamic snowstorm/0, new_restaurant_to_try/0, relationship_break/0, night_time/0, moving_house/0.\nrule(r1, book_ride_share, []) :- snowstorm.\nrule(r2, book_flight, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- snowstorm, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- snowstorm, new_restaurant_to_try, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, book_ride_share).\ncomplement(book_ride_share, book_flight).\ncomplement(snowstorm, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, snowstorm).",
        "NL Translation": "If there is a snowstorm, I book a ride share. If there is a new restaurant to try, I book a flight. If there is both a snowstorm and a new restaurant to try, I prefer to book a ride share, but if it's also lunch time, I prefer to book a flight. If there is a relationship break, I prefer to book a ride share over booking a flight. If it's night time, I prefer to book a flight over booking a ride share. If there is a relationship break, I prefer booking a ride share over booking a flight. If I am moving house, I prefer to book a flight over booking a ride share."
    },
    {
        "Example Number": 169,
        "Gorgias Code": ":- dynamic relationship_break/0, new_neighbor/0, windy_day/0\nrule(r1, host_dinner_party, []) :- relationship_break.\nrule(r2, reply_emails, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, host_dinner_party).\ncomplement(host_dinner_party, reply_emails).",
        "NL Translation": "If there is a relationship break, I either host a dinner party or reply to emails. Generally, I prefer to host a dinner party but if there is a new neighbor, I prefer to reply to emails. However, if it's a windy day, I prefer to host a dinner party over replying to emails. I cannot do both hosting a dinner party and replying to emails, and windy day and new neighbor are not compatible."
    },
    {
        "Example Number": 71,
        "Gorgias Code": ":- dynamic project_extension/0.\nrule(r1, review_documents, []) :- project_extension.\nrule(r2, join_fitness_class, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, review_documents).\ncomplement(review_documents, join_fitness_class).",
        "NL Translation": "When there is a project extension, I review documents or join a fitness class. I prefer to review documents over joining a fitness class."
    },
    {
        "Example Number": 643,
        "Gorgias Code": ":- dynamic birthday_today/0, moving_house/0, dusk/0\nrule(r1, visit_doctor, []) :- birthday_today.\nrule(r2, morning_run, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, visit_doctor).\ncomplement(visit_doctor, morning_run).",
        "NL Translation": "\"If it is my birthday today, I visit the doctor or go for a morning run. Generally, I prefer to visit the doctor but if I am moving house, I prefer to go for a morning run. However, if it is dusk, I prefer to go for a morning run over visiting the doctor.\""
    },
    {
        "Example Number": 655,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, community_event/0, low_budget/0\nrule(r1, do_laundry, []) :- new_restaurant_to_try.\nrule(r2, finish_report, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, do_laundry).\ncomplement(do_laundry, finish_report).",
        "NL Translation": "If there is a new restaurant to try, I either do laundry or finish the report. Generally, I prefer to do laundry but if there is a community event, I prefer to finish the report. If I have a low budget, I prefer to finish the report over doing laundry."
    },
    {
        "Example Number": 375,
        "Gorgias Code": ":- dynamic important_meeting/0, vacation_planned/0, community_event/0, family_gathering/0, deadline_missed/0.\nrule(r1, go_to(theater), []) :- important_meeting.\nrule(r2, cycle_to_work, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- important_meeting, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- important_meeting, vacation_planned, night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- deadline_missed.\nrule(c5, prefer(c4, c3), []).\ncomplement(cycle_to_work, go_to(theater)).\ncomplement(go_to(theater), cycle_to_work).\ncomplement(important_meeting, vacation_planned).\ncomplement(vacation_planned, important_meeting).",
        "NL Translation": "If there is an important meeting, I go to the theater. If I have a vacation planned, I cycle to work. If I have both an important meeting and a vacation planned, I prefer to go to the theater; however, if it's also night time, I prefer to cycle to work. If there is a community event, I prefer to go to the theater over cycling to work. If there is a family gathering, I prefer to cycle to work over going to the theater. If I have missed a deadline, I prefer to go to the theater over cycling to work."
    },
    {
        "Example Number": 704,
        "Gorgias Code": ":- dynamic community_event/0, invitation_from_friend/0.\nrule(r1, use_subway, []) :- community_event.\nrule(r2, go_shopping, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- community_event, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- community_event, invitation_from_friend, family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, use_subway).\ncomplement(use_subway, go_shopping).\ncomplement(community_event, invitation_from_friend).\ncomplement(invitation_from_friend, community_event).",
        "NL Translation": "If there is a community event, I use the subway. If I receive an invitation from a friend, I go shopping. If there is both a community event and an invitation from a friend, I prefer to use the subway; however, if there is also a family emergency, I prefer to go shopping. I can't at the same time go shopping and use the subway, and community event and invitation from a friend aren't compatible."
    },
    {
        "Example Number": 285,
        "Gorgias Code": ":- dynamic snowstorm/0, networking_event/0, got_bonus/0\nrule(r1, give_presentation, []) :- snowstorm.\nrule(r2, dispose_trash, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(dispose_trash, give_presentation).\ncomplement(give_presentation, dispose_trash).",
        "NL Translation": "\"If there is a snowstorm, I give a presentation or dispose of trash. Generally, I prefer to give a presentation but if there is a networking event, I prefer to dispose of trash. I prefer to dispose of trash over giving a presentation if I got a bonus. I can't at the same time dispose of trash and give a presentation.\""
    },
    {
        "Example Number": 630,
        "Gorgias Code": ":- dynamic medical_appointment/0, night_time/0, unexpected_guest/0, family_gathering/0, moving_house/0.\nrule(r1, go_to(theater), []) :- medical_appointment.\nrule(r2, attend_meeting, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, night_time.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, night_time, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_meeting, go_to(theater)).\ncomplement(go_to(theater), attend_meeting).\ncomplement(medical_appointment, night_time).\ncomplement(night_time, medical_appointment).",
        "NL Translation": "If I have a medical appointment, I go to the theater. If it's night time, I attend a meeting. But if I have both a medical appointment and it's night time, I prefer to go to the theater; however, if it's also lunchtime, I prefer to attend the meeting. If there is an unexpected guest, I prefer to attend the meeting. If there is a family gathering, I prefer to go to the theater. If I am moving house, I prefer to attend the meeting."
    },
    {
        "Example Number": 402,
        "Gorgias Code": ":- dynamic extended_work_hours/0, dusk/0, hail_storm/0.\nrule(r1, travel_abroad, []) :- extended_work_hours.\nrule(r2, finish_report, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, dusk.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, dusk, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, travel_abroad).\ncomplement(travel_abroad, finish_report).\ncomplement(extended_work_hours, dusk).\ncomplement(dusk, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I travel abroad. If it's dusk, I finish the report. However, if I have both extended work hours and dusk, I prefer to travel abroad; but if there is an urgent deadline, I prefer to finish the report. In the case of a hail storm, I prefer to travel abroad over finishing the report."
    },
    {
        "Example Number": 380,
        "Gorgias Code": ":- dynamic good_weather/0, wedding_anniversary/0, cloudy_day/0, lunch_time/0, vacation_planned/0.\nrule(r1, organize_workspace, []) :- good_weather.\nrule(r2, give_presentation, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- good_weather, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- good_weather, wedding_anniversary, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(give_presentation, organize_workspace).\ncomplement(organize_workspace, give_presentation).\ncomplement(good_weather, wedding_anniversary).\ncomplement(wedding_anniversary, good_weather).",
        "NL Translation": "If there is good weather, I organize my workspace. If it's my wedding anniversary, I give a presentation. If both conditions are met, I prefer to organize my workspace; however, if there are extended work hours, I prefer to give a presentation. If it's a cloudy day, I prefer to give a presentation over organizing my workspace. If it's lunchtime, I prefer to organize my workspace. If I have a vacation planned, I prefer to give a presentation over organizing my workspace."
    },
    {
        "Example Number": 166,
        "Gorgias Code": ":- dynamic snowstorm/0, relationship_break/0, good_weather/0\nrule(r1, explore_city, []) :- snowstorm.\nrule(r2, reply_emails, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, explore_city).\ncomplement(explore_city, reply_emails).",
        "NL Translation": "\"If there is a snowstorm, I explore the city or reply to emails. Generally, I prefer to explore the city but if there is a relationship break, I prefer to reply to emails. If the weather is good, I prefer to explore the city over replying to emails. I can't at the same time explore the city and reply to emails.\""
    },
    {
        "Example Number": 880,
        "Gorgias Code": ":- dynamic birthday_today/0, humid_day/0\nrule(r1, give_presentation, []) :- birthday_today.\nrule(r2, travel_abroad, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(travel_abroad, give_presentation).\ncomplement(give_presentation, travel_abroad).",
        "NL Translation": "If it is your birthday today, you either give a presentation or travel abroad. Generally, you prefer to give a presentation, but if it is a humid day, you prefer to travel abroad."
    },
    {
        "Example Number": 960,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, discount_on_flight/0, morning_rush/0, night_time/0, family_gathering/0.\nrule(r1, do_laundry, []) :- invitation_from_friend.\nrule(r2, buy_groceries, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, discount_on_flight, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_gathering.\nrule(c5, prefer(c4, c3), []).\ncomplement(buy_groceries, do_laundry).\ncomplement(do_laundry, buy_groceries).\ncomplement(invitation_from_friend, discount_on_flight).\ncomplement(discount_on_flight, invitation_from_friend).",
        "NL Translation": "\"If there is an invitation from a friend, I do the laundry. If there is a discount on a flight, I buy groceries. If both are present, I prefer to do the laundry; however, if there are extended work hours, I prefer to buy groceries. I cannot do both the laundry and buy groceries. If there is a morning rush, I prefer to buy groceries. If it is night time, I prefer to do the laundry. If there is a family gathering, I prefer buying groceries over doing the laundry. I cannot do the laundry during a family gathering.\""
    },
    {
        "Example Number": 329,
        "Gorgias Code": ":- dynamic early_morning/0, discount_on_flight/0, important_meeting/0.\nrule(r1, plan_meals, []) :- early_morning.\nrule(r2, finish_report, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- early_morning, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- early_morning, discount_on_flight, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, plan_meals).\ncomplement(plan_meals, finish_report).\ncomplement(early_morning, discount_on_flight).\ncomplement(discount_on_flight, early_morning).",
        "NL Translation": "If it is early morning, I plan meals. If there is a discount on the flight, I finish the report. If it's early morning and there is a discount on the flight, I prefer planning meals. However, if there is also a relationship break, I prefer finishing the report. If there is an important meeting, I prefer planning meals over finishing the report."
    },
    {
        "Example Number": 646,
        "Gorgias Code": ":- dynamic team_project_due/0, new_restaurant_to_try/0\nrule(r1, pay_bills, []) :- team_project_due.\nrule(r2, read_book, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, pay_bills).\ncomplement(pay_bills, read_book).",
        "NL Translation": "If I have a team project due, I pay bills. If I have a team project due, I read a book. If there is a new restaurant to try, I prefer to read a book over paying bills."
    },
    {
        "Example Number": 235,
        "Gorgias Code": ":- dynamic networking_event/0, feeling_sick/0\nrule(r1, evening_walk, []) :- networking_event.\nrule(r2, plan_meals, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, evening_walk).\ncomplement(evening_walk, plan_meals).",
        "NL Translation": "When there is a networking event, I either go for an evening walk or plan meals. Generally, I prefer to go for an evening walk, but if I am feeling sick, I prefer to plan meals. I can't go for an evening walk and plan meals at the same time."
    },
    {
        "Example Number": 677,
        "Gorgias Code": ":- dynamic project_extension/0, tax_refund/0, networking_event/0, windy_day/0, job_interview/0.\nrule(r1, do_laundry, []) :- project_extension.\nrule(r2, yoga_session, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- project_extension, tax_refund.\nrule(p2, prefer(r2, r1), []) :- project_extension, tax_refund, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- job_interview.\nrule(c5, prefer(c4, c3), []).\ncomplement(yoga_session, do_laundry).\ncomplement(do_laundry, yoga_session).\ncomplement(project_extension, tax_refund).\ncomplement(tax_refund, project_extension).",
        "NL Translation": "If there is a project extension, I do laundry. If I receive a tax refund, I attend a yoga session. If both the project extension and tax refund are present, I prefer to do laundry; however, if there is also an invitation from a friend, I prefer the yoga session. If there is a networking event, I prefer the yoga session over doing laundry. If it is a windy day, I prefer doing laundry over the yoga session. If there is a job interview, I prefer attending the networking event over doing laundry."
    },
    {
        "Example Number": 562,
        "Gorgias Code": ":- dynamic rainy_day/0.\nrule(r1, book_flight, []) :- rainy_day.\nrule(r2, order_taxi, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(order_taxi, book_flight).\ncomplement(book_flight, order_taxi).",
        "NL Translation": "\"When it's a rainy day, I book a flight or order a taxi. I generally prefer to book a flight over ordering a taxi.\""
    },
    {
        "Example Number": 876,
        "Gorgias Code": ":- dynamic cloudy_day/0, networking_event/0, humid_day/0\nrule(r1, swim_session, []) :- cloudy_day.\nrule(r2, submit_timesheet, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(submit_timesheet, swim_session).\ncomplement(swim_session, submit_timesheet).",
        "NL Translation": "\"When it is a cloudy day, I either have a swim session or submit a timesheet. Generally, I prefer to have a swim session but if there is a networking event, I prefer to submit a timesheet. However, if it is a humid day, I prefer to have a swim session. I cannot at the same time have a swim session and submit a timesheet.\""
    },
    {
        "Example Number": 657,
        "Gorgias Code": ":- dynamic expensive_event/0, family_emergency/0, snowstorm/0\nrule(r1, visit_museum, []) :- expensive_event.\nrule(r2, evening_walk, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(evening_walk, visit_museum).\ncomplement(visit_museum, evening_walk).",
        "NL Translation": "\"If there is an expensive event, I visit the museum or take an evening walk. Generally, I prefer to visit the museum but if there is a family emergency, I prefer to take an evening walk. However, if there is a snowstorm, I prefer to take an evening walk over visiting the museum.\""
    },
    {
        "Example Number": 275,
        "Gorgias Code": ":- dynamic team_project_due/0, family_emergency/0, subscription_due/0\nrule(r1, give_presentation, []) :- team_project_due.\nrule(r2, drive_car, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, give_presentation).\ncomplement(give_presentation, drive_car).",
        "NL Translation": "If I have a team project due, I give a presentation. If I have a team project due, I drive a car. If there is a family emergency, I prefer to drive a car. I prefer to give a presentation over driving a car if a subscription is due. If a subscription is due, I prefer to drive a car over giving a presentation. If a subscription is due, I prefer the preference of driving a car over giving a presentation."
    },
    {
        "Example Number": 663,
        "Gorgias Code": ":- dynamic invitation_from_friend/0.\nrule(r1, ride_bike, []) :- invitation_from_friend.\nrule(r2, yoga_session, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\ncomplement(yoga_session, ride_bike).\ncomplement(ride_bike, yoga_session).",
        "NL Translation": "When there is an invitation from a friend, I either ride a bike or attend a yoga session. Generally, I prefer to ride a bike over attending a yoga session."
    },
    {
        "Example Number": 686,
        "Gorgias Code": ":- dynamic networking_event/0, unexpected_expense/0, expensive_event/0\nrule(r1, plan_meals, []) :- networking_event.\nrule(r2, go_shopping, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_expense.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, plan_meals).\ncomplement(plan_meals, go_shopping).",
        "NL Translation": "If there is a networking event, I plan meals or go shopping. Generally, I prefer to plan meals but if there is an unexpected expense, I prefer to go shopping. However, if it is an expensive event, I prefer to plan meals. I can't at the same time plan meals and go shopping."
    },
    {
        "Example Number": 470,
        "Gorgias Code": ":- dynamic family_emergency/0, financial_aid/0.\nrule(r1, take_bus, []) :- family_emergency.\nrule(r2, book_ride_share, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- family_emergency, financial_aid.\nrule(p2, prefer(r2, r1), []) :- family_emergency, financial_aid, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, take_bus).\ncomplement(take_bus, book_ride_share).\ncomplement(family_emergency, financial_aid).\ncomplement(financial_aid, family_emergency).",
        "NL Translation": "\"If there is a family emergency, I take the bus. If there is financial aid, I book a ride share. If both the family emergency and financial aid are present, I prefer to take the bus; however, if there is also a hail storm, I prefer to book a ride share. I can't at the same time take the bus and book a ride share, and family emergency and financial aid are not compatible.\""
    },
    {
        "Example Number": 443,
        "Gorgias Code": ":- dynamic unexpected_expense/0, morning_rush/0, concert_nearby/0.\nrule(r1, clean_house, []) :- unexpected_expense.\nrule(r2, use_subway, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, morning_rush.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, morning_rush, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, clean_house).\ncomplement(clean_house, use_subway).\ncomplement(unexpected_expense, morning_rush).\ncomplement(morning_rush, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I clean the house. If it's the morning rush, I use the subway. However, if there is both an unexpected expense and morning rush, I prefer to clean the house. If there is an unexpected guest as well, I prefer to use the subway. If there is a concert nearby, I prefer to clean the house over using the subway."
    },
    {
        "Example Number": 157,
        "Gorgias Code": ":- dynamic family_emergency/0, invitation_from_friend/0\nrule(r1, evening_walk, []) :- family_emergency.\nrule(r2, explore_city, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\ncomplement(explore_city, evening_walk).\ncomplement(evening_walk, explore_city).",
        "NL Translation": "When there is a family emergency, I either go for an evening walk or explore the city. Generally, I prefer to go for an evening walk but if there is an invitation from a friend, I prefer to explore the city. I can't at the same time go for an evening walk and explore the city."
    },
    {
        "Example Number": 377,
        "Gorgias Code": ":- dynamic new_neighbor/0, financial_aid/0, subscription_due/0.\nrule(r1, visit_family, []) :- new_neighbor.\nrule(r2, book_flight, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, financial_aid.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, financial_aid, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_flight, visit_family).\ncomplement(visit_family, book_flight).\ncomplement(new_neighbor, financial_aid).\ncomplement(financial_aid, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I visit family. If I receive financial aid, I book a flight. If there is both a new neighbor and financial aid, I prefer to visit family; however, if there is also a relationship break, I prefer to book a flight. I cannot visit family and book a flight at the same time, and having a subscription due affects the preference between visiting family and booking a flight."
    },
    {
        "Example Number": 64,
        "Gorgias Code": ":- dynamic tax_refund/0, project_extension/0, discount_on_flight/0, afternoon/0, important_meeting/0.\nrule(r1, buy_groceries, []) :- tax_refund.\nrule(r2, reply_emails, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- tax_refund, project_extension.\nrule(p2, prefer(r2, r1), []) :- tax_refund, project_extension, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- important_meeting.\nrule(c5, prefer(c4, c3), []).\ncomplement(reply_emails, buy_groceries).\ncomplement(buy_groceries, reply_emails).\ncomplement(tax_refund, project_extension).\ncomplement(project_extension, tax_refund).",
        "NL Translation": "If there is a tax refund, I buy groceries. If there is a project extension, I reply to emails. If I have both a tax refund and a project extension, I prefer to buy groceries; however, if I also have a vacation planned, I prefer to reply to emails. If there is a discount on flight tickets, I prefer to reply to emails. If it is the afternoon, I prefer to buy groceries. If there is an important meeting, I prefer to reply to emails."
    },
    {
        "Example Number": 913,
        "Gorgias Code": ":- dynamic unexpected_guest/0, subscription_due/0, unexpected_expense/0.\nrule(r1, go_to(cinema), []) :- unexpected_guest.\nrule(r2, attend_workshop, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, subscription_due.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, subscription_due, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, go_to(cinema)).\ncomplement(go_to(cinema), attend_workshop).\ncomplement(unexpected_guest, subscription_due).\ncomplement(subscription_due, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I go to the cinema. If there is a subscription due, I attend a workshop. If there is both an unexpected guest and a subscription due, I prefer to go to the cinema; however, if there is also a school reunion, I prefer to attend the workshop. If there is an unexpected expense, I prefer to attend the workshop over going to the cinema."
    },
    {
        "Example Number": 922,
        "Gorgias Code": ":- dynamic community_event/0, hail_storm/0, unexpected_expense/0, subscription_due/0, new_restaurant_to_try/0.\nrule(r1, morning_run, []) :- community_event.\nrule(r2, explore_city, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- community_event, hail_storm.\nrule(p2, prefer(r2, r1), []) :- community_event, hail_storm, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_restaurant_to_try.\nrule(c5, prefer(c4, c3), []).\ncomplement(explore_city, morning_run).\ncomplement(morning_run, explore_city).\ncomplement(community_event, hail_storm).\ncomplement(hail_storm, community_event).",
        "NL Translation": "\"If there is a community event, I go for a morning run. If there is a hail storm, I explore the city. If there is both a community event and a hail storm, I prefer to go for a morning run, however, if there is also a school reunion, I prefer to explore the city. If there is an unexpected expense, I prefer to explore the city over going for a morning run. If there is a subscription due, I prefer to go for a morning run over exploring the city. If there is a new restaurant to try, I prefer to go for a morning run over exploring the city. If there is a new restaurant to try, I prefer to explore the city over going for a morning run.\""
    },
    {
        "Example Number": 624,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, buy_groceries, []) :- relationship_break.\nrule(r2, finish_report, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, buy_groceries).\ncomplement(buy_groceries, finish_report).",
        "NL Translation": "\"When there is a relationship break, I buy groceries or finish the report. I prefer to buy groceries over finishing the report.\""
    },
    {
        "Example Number": 405,
        "Gorgias Code": ":- dynamic holiday_season/0, job_interview/0, school_reunion/0.\nrule(r1, take_train, []) :- holiday_season.\nrule(r2, use_subway, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- holiday_season, job_interview.\nrule(p2, prefer(r2, r1), []) :- holiday_season, job_interview, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, take_train).\ncomplement(take_train, use_subway).\ncomplement(holiday_season, job_interview).\ncomplement(job_interview, holiday_season).",
        "NL Translation": "\"When it is holiday season, I take the train. If there is a job interview, I use the subway. If both holiday season and a job interview coincide, I prefer to take the train; however, if there is also a snowstorm, I prefer to use the subway. I can't at the same time take the train and use the subway, and holiday season and job interview are not compatible. If there is a school reunion, I prefer to take the train over using the subway.\""
    },
    {
        "Example Number": 843,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, holiday_season/0\nrule(r1, ride_bike, []) :- invitation_from_friend.\nrule(r2, evening_walk, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, ride_bike).\ncomplement(ride_bike, evening_walk).",
        "NL Translation": "If there is an invitation from a friend, I ride a bike or take an evening walk. Generally, I prefer to ride a bike, but if it is the holiday season, I prefer to take an evening walk. I cannot ride a bike and take an evening walk at the same time."
    },
    {
        "Example Number": 547,
        "Gorgias Code": ":- dynamic got_bonus/0, rainy_day/0\nrule(r1, dispose_trash, []) :- got_bonus.\nrule(r2, attend_concert, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_concert, dispose_trash).\ncomplement(dispose_trash, attend_concert).",
        "NL Translation": "If I got a bonus, I dispose of the trash. If I got a bonus, I attend a concert. If it's a rainy day, I prefer to attend a concert over disposing of the trash."
    },
    {
        "Example Number": 653,
        "Gorgias Code": ":- dynamic important_meeting/0, community_event/0, early_morning/0, discount_on_flight/0, cloudy_day/0.\nrule(r1, reply_emails, []) :- important_meeting.\nrule(r2, give_presentation, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- important_meeting, community_event.\nrule(p2, prefer(r2, r1), []) :- important_meeting, community_event, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- cloudy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(give_presentation, reply_emails).\ncomplement(reply_emails, give_presentation).\ncomplement(important_meeting, community_event).\ncomplement(community_event, important_meeting).",
        "NL Translation": "\"If there is an important meeting, I reply to emails. If there is a community event, I give a presentation. If both are present, I prefer to reply to emails, however, if it is also the holiday season, I prefer to give a presentation. If it is early morning, I prefer to reply to emails. If there is a discount on a flight, I prefer to give a presentation. If it is a cloudy day, I prefer to reply to emails.\""
    },
    {
        "Example Number": 160,
        "Gorgias Code": ":- dynamic project_extension/0.\nrule(r1, travel_abroad, []) :- project_extension.\nrule(r2, morning_run, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\ncomplement(morning_run, travel_abroad).\ncomplement(travel_abroad, morning_run).",
        "NL Translation": "When there is a project extension, I travel abroad or go for a morning run. I generally prefer to travel abroad over going for a morning run."
    },
    {
        "Example Number": 782,
        "Gorgias Code": ":- dynamic new_neighbor/0.\nrule(r1, attend_meeting, []) :- new_neighbor.\nrule(r2, call_client, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\ncomplement(call_client, attend_meeting).\ncomplement(attend_meeting, call_client).",
        "NL Translation": "When there is a new neighbor, I attend a meeting or call a client. Generally, I prefer to attend the meeting over calling the client. I cannot attend the meeting and call the client at the same time."
    },
    {
        "Example Number": 618,
        "Gorgias Code": ":- dynamic unexpected_guest/0.\nrule(r1, go_to(theater), []) :- unexpected_guest.\nrule(r2, update_project_plan, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\ncomplement(update_project_plan, go_to(theater)).\ncomplement(go_to(theater), update_project_plan).",
        "NL Translation": "If there is an unexpected guest, I go to the theater or update the project plan. Generally, I prefer to go to the theater over updating the project plan. I can't at the same time go to the theater and update the project plan."
    },
    {
        "Example Number": 549,
        "Gorgias Code": ":- dynamic hot_day/0, community_event/0\nrule(r1, water_plants, []) :- hot_day.\nrule(r2, attend_workshop, []) :- hot_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, water_plants).\ncomplement(water_plants, attend_workshop).",
        "NL Translation": "\"When it is a hot day, I water plants or attend a workshop. Generally, I prefer to water plants but if there is a community event, I prefer to attend a workshop. I can't at the same time water plants and attend a workshop.\""
    },
    {
        "Example Number": 442,
        "Gorgias Code": ":- dynamic networking_event/0, dusk/0.\nrule(r1, attend_concert, []) :- networking_event.\nrule(r2, organize_workspace, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- networking_event, dusk.\nrule(p2, prefer(r2, r1), []) :- networking_event, dusk, subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, attend_concert).\ncomplement(attend_concert, organize_workspace).\ncomplement(networking_event, dusk).\ncomplement(dusk, networking_event).",
        "NL Translation": "If there is a networking event, I attend a concert. If it is dusk, I organize my workspace. However, if there is both a networking event and it is dusk, I prefer to organize my workspace. Additionally, if there is a networking event, it is dusk, and there is a subscription due, I prefer to attend a concert. I cannot attend a concert and organize my workspace at the same time, and networking event and dusk are not compatible."
    },
    {
        "Example Number": 168,
        "Gorgias Code": ":- dynamic vacation_planned/0, early_morning/0, unexpected_guest/0\nrule(r1, go_gym, []) :- vacation_planned.\nrule(r2, read_book, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(read_book, go_gym).\ncomplement(go_gym, read_book).",
        "NL Translation": "If vacation is planned, I either go to the gym or read a book. Generally, I prefer to go to the gym, but if it is early morning, I prefer to read a book. However, if there is an unexpected guest, I prefer to read a book. I cannot go to the gym and read a book at the same time."
    },
    {
        "Example Number": 709,
        "Gorgias Code": ":- dynamic concert_nearby/0, school_reunion/0, client_feedback/0\nrule(r1, take_picnic, []) :- concert_nearby.\nrule(r2, water_plants, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, take_picnic).\ncomplement(take_picnic, water_plants).",
        "NL Translation": "If there is a nearby concert, I either take a picnic or water plants. Generally, I prefer to take a picnic but if there is a school reunion, I prefer to water plants. However, if there is client feedback, I prefer to take a picnic. I can't at the same time take a picnic and water plants."
    },
    {
        "Example Number": 247,
        "Gorgias Code": ":- dynamic new_neighbor/0, dusk/0, medical_appointment/0\nrule(r1, call_client, []) :- new_neighbor.\nrule(r2, attend_workshop, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, call_client).\ncomplement(call_client, attend_workshop).",
        "NL Translation": "\"When there is a new neighbor, I either call the client or attend the workshop. Generally, I prefer to call the client but if it is dusk, I prefer to attend the workshop. However, if I have a medical appointment, I prefer to call the client. I can't at the same time call the client and attend the workshop.\""
    },
    {
        "Example Number": 424,
        "Gorgias Code": ":- dynamic cloudy_day/0.\nrule(r1, visit_family, []) :- cloudy_day.\nrule(r2, host_dinner_party, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(host_dinner_party, visit_family).\ncomplement(visit_family, host_dinner_party).",
        "NL Translation": "When it is a cloudy day, I either visit family or host a dinner party. I generally prefer to visit family over hosting a dinner party. I cannot visit family and host a dinner party at the same time."
    },
    {
        "Example Number": 309,
        "Gorgias Code": ":- dynamic morning_rush/0, new_restaurant_to_try/0, extended_work_hours/0, team_project_due/0, deadline_missed/0.\nrule(r1, attend_concert, []) :- morning_rush.\nrule(r2, review_documents, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- morning_rush, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- morning_rush, new_restaurant_to_try, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- deadline_missed.\nrule(c5, prefer(c4, c3), []).\ncomplement(review_documents, attend_concert).\ncomplement(attend_concert, review_documents).\ncomplement(morning_rush, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, morning_rush).",
        "NL Translation": "If there is a morning rush, I attend a concert. If there is a new restaurant to try, I review documents. If there is both a morning rush and a new restaurant to try, I prefer to attend a concert, but if it's also dusk, I prefer to review documents. If there are extended work hours, I prefer to attend a concert over reviewing documents. If there is a team project due, I prefer to review documents over attending a concert. If a deadline is missed, I prefer attending a concert over reviewing documents."
    },
    {
        "Example Number": 963,
        "Gorgias Code": ":- dynamic dusk/0, early_morning/0\nrule(r1, swim_session, []) :- dusk.\nrule(r2, plan_meals, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(plan_meals, swim_session).\ncomplement(swim_session, plan_meals).",
        "NL Translation": "When it is dusk, I either have a swim session or plan meals. Generally, I prefer to have a swim session but if it is early morning, I prefer to plan meals. I can't at the same time have a swim session and plan meals."
    },
    {
        "Example Number": 916,
        "Gorgias Code": ":- dynamic good_weather/0, dusk/0\nrule(r1, prepare_report, []) :- good_weather.\nrule(r2, attend_meeting, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, prepare_report).\ncomplement(prepare_report, attend_meeting).",
        "NL Translation": "When there is good weather, I prepare a report or attend a meeting. Generally, I prefer to prepare a report but if it is dusk, I prefer to attend a meeting. I cannot prepare a report and attend a meeting at the same time."
    },
    {
        "Example Number": 826,
        "Gorgias Code": ":- dynamic community_event/0, relationship_break/0\nrule(r1, ride_bike, []) :- community_event.\nrule(r2, visit_museum, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, ride_bike).\ncomplement(ride_bike, visit_museum).",
        "NL Translation": "When there is a community event, I ride a bike or visit a museum. Generally, I prefer to ride a bike, but if there is a relationship break, I prefer to visit a museum. I can't at the same time ride a bike and visit a museum."
    },
    {
        "Example Number": 744,
        "Gorgias Code": ":- dynamic team_project_due/0, hot_day/0, family_gathering/0.\nrule(r1, host_dinner_party, []) :- team_project_due.\nrule(r2, cook_dinner, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- team_project_due, hot_day.\nrule(p2, prefer(r2, r1), []) :- team_project_due, hot_day, client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, host_dinner_party).\ncomplement(host_dinner_party, cook_dinner).\ncomplement(team_project_due, hot_day).\ncomplement(hot_day, team_project_due).",
        "NL Translation": "If there is a team project due, I host a dinner party. If it's a hot day, I cook dinner. If I have both a team project due and a hot day, I prefer to host a dinner party; however, if there is also client feedback, I prefer to cook dinner. I cannot host a dinner party and cook dinner at the same time, and team project due and hot day are not compatible. If there is a family gathering, I prefer to host a dinner party over cooking dinner."
    },
    {
        "Example Number": 189,
        "Gorgias Code": ":- dynamic wedding_anniversary/0.\nrule(r1, attend_meeting, []) :- wedding_anniversary.\nrule(r2, read_book, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\ncomplement(read_book, attend_meeting).\ncomplement(attend_meeting, read_book).",
        "NL Translation": "When there is a wedding anniversary, I attend a meeting or read a book. Generally, I prefer to attend a meeting over reading a book. I can't do both attend a meeting and read a book."
    },
    {
        "Example Number": 835,
        "Gorgias Code": ":- dynamic boss_in_office/0, new_restaurant_to_try/0, friend_in_town/0\nrule(r1, host_dinner_party, []) :- boss_in_office.\nrule(r2, cook_dinner, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, host_dinner_party).\ncomplement(host_dinner_party, cook_dinner).",
        "NL Translation": "\"If the boss is in the office, I host a dinner party or cook dinner. Generally, I prefer to host a dinner party but if there is a new restaurant to try, I prefer to cook dinner. However, if a friend is in town, I prefer to host a dinner party. I can't at the same time cook dinner and host a dinner party.\""
    },
    {
        "Example Number": 818,
        "Gorgias Code": ":- dynamic morning_rush/0, snowstorm/0, moving_house/0, community_event/0, good_investment/0.\nrule(r1, update_project_plan, []) :- morning_rush.\nrule(r2, book_flight, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- morning_rush, snowstorm.\nrule(p2, prefer(r2, r1), []) :- morning_rush, snowstorm, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_investment.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, update_project_plan).\ncomplement(update_project_plan, book_flight).\ncomplement(morning_rush, snowstorm).\ncomplement(snowstorm, morning_rush).",
        "NL Translation": "If there is a morning rush, I update the project plan. If there is a snowstorm, I book a flight. If both the morning rush and snowstorm occur, I prefer to update the project plan; however, if there is also a discount on the flight, I prefer to book a flight. If I am moving house, I prefer to book a flight over updating the project plan. If there is a community event, I prefer to update the project plan over booking a flight. If it is a good investment, I prefer to update the project plan over booking a flight. If there is a community event, I prefer to update the project plan over booking a flight."
    },
    {
        "Example Number": 578,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, order_taxi, []) :- team_project_due.\nrule(r2, visit_family, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, order_taxi).\ncomplement(order_taxi, visit_family).",
        "NL Translation": "If I have a team project due, I order a taxi. If I have a team project due, I visit family. I prefer to order a taxi over visiting family. I can't at the same time order a taxi and visit family."
    },
    {
        "Example Number": 72,
        "Gorgias Code": ":- dynamic concert_nearby/0, important_meeting/0.\nrule(r1, give_presentation, []) :- concert_nearby.\nrule(r2, rent_car, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, important_meeting.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, important_meeting, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, give_presentation).\ncomplement(give_presentation, rent_car).\ncomplement(concert_nearby, important_meeting).\ncomplement(important_meeting, concert_nearby).",
        "NL Translation": "If there is a nearby concert, I give a presentation. If there is an important meeting, I rent a car. If both the concert is nearby and there is an important meeting, I prefer to give a presentation; however, if there is also a tax refund, I prefer to rent a car. I cannot at the same time rent a car and give a presentation, and a nearby concert and an important meeting are not compatible."
    },
    {
        "Example Number": 74,
        "Gorgias Code": ":- dynamic new_neighbor/0, early_morning/0, hot_day/0, afternoon/0, windy_day/0.\nrule(r1, take_bus, []) :- new_neighbor.\nrule(r2, read_book, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, early_morning.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, early_morning, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(read_book, take_bus).\ncomplement(take_bus, read_book).\ncomplement(new_neighbor, early_morning).\ncomplement(early_morning, new_neighbor).",
        "NL Translation": "\"If there is a new neighbor, I take the bus. In the early morning, I read a book. I prefer to take the bus over reading a book if there is a new neighbor and it's early morning. However, if there is an urgent deadline, I prefer to read a book over taking the bus. Additionally, I prefer reading a book over taking the bus on a hot day or in the afternoon. Furthermore, I prefer taking the bus over reading a book in the afternoon. If it's a windy day, I prefer reading a book over taking the bus.\""
    },
    {
        "Example Number": 572,
        "Gorgias Code": ":- dynamic subscription_due/0, networking_event/0\nrule(r1, submit_timesheet, []) :- subscription_due.\nrule(r2, swim_session, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(swim_session, submit_timesheet).\ncomplement(submit_timesheet, swim_session).",
        "NL Translation": "\"When subscription is due, I submit timesheet or have a swim session. Generally, I prefer to submit timesheet but if there is a networking event, I prefer to have a swim session. I can't at the same time submit timesheet and have a swim session.\""
    },
    {
        "Example Number": 491,
        "Gorgias Code": ":- dynamic lunch_time/0, expensive_event/0, wedding_anniversary/0.\nrule(r1, book_flight, []) :- lunch_time.\nrule(r2, meditate, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- lunch_time, expensive_event.\nrule(p2, prefer(r2, r1), []) :- lunch_time, expensive_event, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, book_flight).\ncomplement(book_flight, meditate).\ncomplement(lunch_time, expensive_event).\ncomplement(expensive_event, lunch_time).",
        "NL Translation": "If it is lunch time, I book a flight. If there is an expensive event, I meditate. I prefer to book a flight over meditating if it is lunch time and there is an expensive event. However, if there are extended work hours, I prefer to meditate instead. If it is my wedding anniversary, I prefer booking a flight over meditating."
    },
    {
        "Example Number": 593,
        "Gorgias Code": ":- dynamic family_emergency/0, invitation_from_friend/0\nrule(r1, take_picnic, []) :- family_emergency.\nrule(r2, cycling_session, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycling_session, take_picnic).\ncomplement(take_picnic, cycling_session).",
        "NL Translation": "If there is a family emergency, I take a picnic. If there is a family emergency, I have a cycling session. If I have an invitation from a friend, I prefer to have a cycling session."
    },
    {
        "Example Number": 216,
        "Gorgias Code": ":- dynamic medical_appointment/0.\nrule(r1, cycling_session, []) :- medical_appointment.\nrule(r2, finish_report, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, cycling_session).\ncomplement(cycling_session, finish_report).",
        "NL Translation": "If I have a medical appointment, I either have a cycling session or finish a report. I prefer to have a cycling session over finishing a report. I cannot do both a cycling session and finish a report."
    },
    {
        "Example Number": 431,
        "Gorgias Code": ":- dynamic feeling_sick/0, good_weather/0, extended_work_hours/0, rainy_day/0, family_gathering/0.\nrule(r1, ride_bike, []) :- feeling_sick.\nrule(r2, travel_abroad, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, good_weather.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, good_weather, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_gathering.\nrule(c5, prefer(c4, c3), []).\ncomplement(travel_abroad, ride_bike).\ncomplement(ride_bike, travel_abroad).\ncomplement(feeling_sick, good_weather).\ncomplement(good_weather, feeling_sick).",
        "NL Translation": "If feeling sick, ride a bike. If there is good weather, travel abroad. If feeling sick and good weather, prefer riding a bike. If feeling sick, good weather, and a humid day, prefer traveling abroad. If there are extended work hours, prefer riding a bike. If it's a rainy day, prefer traveling abroad. If there is a family gathering, prefer riding a bike over traveling abroad. If there is a family gathering, prefer traveling abroad over extended work hours."
    },
    {
        "Example Number": 223,
        "Gorgias Code": ":- dynamic deadline_missed/0, important_meeting/0\nrule(r1, host_dinner_party, []) :- deadline_missed.\nrule(r2, drive_car, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, host_dinner_party).\ncomplement(host_dinner_party, drive_car).",
        "NL Translation": "If the deadline is missed, I host a dinner party. If the deadline is missed, I drive the car. I prefer to host a dinner party over driving the car. If there is an important meeting, I prefer to drive the car. I prefer to drive the car over hosting a dinner party if there is an important meeting."
    },
    {
        "Example Number": 694,
        "Gorgias Code": ":- dynamic community_event/0, party_invitation/0.\nrule(r1, yoga_session, []) :- community_event.\nrule(r2, use_subway, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- community_event, party_invitation.\nrule(p2, prefer(r2, r1), []) :- community_event, party_invitation, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, yoga_session).\ncomplement(yoga_session, use_subway).\ncomplement(community_event, party_invitation).\ncomplement(party_invitation, community_event).",
        "NL Translation": "If there is a community event, I attend a yoga session. If I receive a party invitation, I use the subway. If both the community event and party invitation occur, I prefer attending the yoga session, but if there is also a tax refund, I prefer using the subway. I cannot attend a yoga session and use the subway at the same time, and community event and party invitation are incompatible."
    },
    {
        "Example Number": 670,
        "Gorgias Code": ":- dynamic unexpected_expense/0, morning_rush/0.\nrule(r1, attend_workshop, []) :- unexpected_expense.\nrule(r2, visit_doctor, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, morning_rush.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, morning_rush, family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, attend_workshop).\ncomplement(attend_workshop, visit_doctor).\ncomplement(unexpected_expense, morning_rush).\ncomplement(morning_rush, unexpected_expense).",
        "NL Translation": "\"If there is an unexpected expense, I attend a workshop. If it's during the morning rush, I visit the doctor. But if both the unexpected expense and morning rush occur, I prefer to attend the workshop. However, if there is also a family emergency, I prefer to visit the doctor. I can't at the same time attend a workshop and visit the doctor, and unexpected expenses and morning rush are not compatible.\""
    },
    {
        "Example Number": 940,
        "Gorgias Code": ":- dynamic moving_house/0, job_interview/0\nrule(r1, visit_family, []) :- moving_house.\nrule(r2, go_to(park), []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(park), visit_family).\ncomplement(visit_family, go_to(park)).",
        "NL Translation": "When I am moving house, I visit family or go to the park. Generally, I prefer to visit family but if I have a job interview, I prefer to go to the park. I can't at the same time go to the park and visit family."
    },
    {
        "Example Number": 762,
        "Gorgias Code": ":- dynamic expensive_event/0, rainy_day/0\nrule(r1, dispose_trash, []) :- expensive_event.\nrule(r2, take_picnic, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, dispose_trash).\ncomplement(dispose_trash, take_picnic).",
        "NL Translation": "\"When there is an expensive event, I dispose of trash or take a picnic. Generally, I prefer to dispose of trash but if it is a rainy day, I prefer to take a picnic. I can't at the same time dispose of trash and take a picnic.\""
    },
    {
        "Example Number": 781,
        "Gorgias Code": ":- dynamic got_bonus/0, unexpected_expense/0, school_reunion/0.\nrule(r1, morning_run, []) :- got_bonus.\nrule(r2, make_coffee, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- got_bonus, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- got_bonus, unexpected_expense, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, morning_run).\ncomplement(morning_run, make_coffee).\ncomplement(got_bonus, unexpected_expense).\ncomplement(unexpected_expense, got_bonus).",
        "NL Translation": "If I got a bonus, I go for a morning run. If there is an unexpected expense, I make coffee. But if I both got a bonus and have an unexpected expense, I prefer to go for a morning run. However, if I also have an invitation from a friend, I prefer to make coffee. I can't at the same time go for a morning run and make coffee, and having a bonus and unexpected expense are not compatible. If there is a school reunion, I prefer to go for a morning run over making coffee."
    },
    {
        "Example Number": 955,
        "Gorgias Code": ":- dynamic family_gathering/0, good_investment/0, tax_refund/0, relationship_break/0, weekend/0.\nrule(r1, host_dinner_party, []) :- family_gathering.\nrule(r2, make_coffee, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- family_gathering, good_investment.\nrule(p2, prefer(r2, r1), []) :- family_gathering, good_investment, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- weekend.\nrule(c5, prefer(c4, c3), []).\ncomplement(make_coffee, host_dinner_party).\ncomplement(host_dinner_party, make_coffee).\ncomplement(family_gathering, good_investment).\ncomplement(good_investment, family_gathering).",
        "NL Translation": "\"If there is a family gathering, I host a dinner party. If it's a good investment, I make coffee. If both are present, I prefer to host a dinner party, but if it's also an expensive event, I prefer to make coffee. If there is a tax refund, I prefer hosting a dinner party over making coffee. If there is a relationship break, I prefer making coffee over hosting a dinner party. If it's the weekend, I prefer hosting a dinner party over making coffee.\""
    },
    {
        "Example Number": 37,
        "Gorgias Code": ":- dynamic cloudy_day/0, job_interview/0, boss_in_office/0\nrule(r1, do_laundry, []) :- cloudy_day.\nrule(r2, go_to(theater), []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), do_laundry).\ncomplement(do_laundry, go_to(theater)).",
        "NL Translation": "If it is a cloudy day, I do laundry or go to the theater. Generally, I prefer to do laundry but if there is a job interview, I prefer to go to the theater. If my boss is in the office, I prefer to go to the theater over doing laundry. I cannot do laundry and go to the theater at the same time."
    },
    {
        "Example Number": 750,
        "Gorgias Code": ":- dynamic new_neighbor/0, subscription_due/0, snowstorm/0\nrule(r1, make_coffee, []) :- new_neighbor.\nrule(r2, go_to(theater), []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), make_coffee).\ncomplement(make_coffee, go_to(theater)).",
        "NL Translation": "If there is a new neighbor, I make coffee or go to the theater. Generally, I prefer to make coffee but if the subscription is due, I prefer to go to the theater. However, if there is a snowstorm, I prefer to make coffee. I can't at the same time make coffee and go to the theater."
    },
    {
        "Example Number": 489,
        "Gorgias Code": ":- dynamic deadline_missed/0, weekend/0, discount_on_flight/0, night_time/0, team_project_due/0.\nrule(r1, meditate, []) :- deadline_missed.\nrule(r2, rent_car, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, weekend.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, weekend, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- team_project_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(rent_car, meditate).\ncomplement(meditate, rent_car).\ncomplement(deadline_missed, weekend).\ncomplement(weekend, deadline_missed).",
        "NL Translation": "If the deadline is missed, I meditate. If it's the weekend, I rent a car. I prefer to meditate over renting a car if the deadline is missed and it's the weekend. However, if it's the weekend and lunchtime, I prefer to rent a car over meditating. I prefer renting a car over meditating if there is a discount on the flight. If it's night time, I prefer to meditate over renting a car. If there is a team project due, I prefer to rent a car over meditating. I prefer the preference of renting a car over the preference of having a discount on the flight."
    },
    {
        "Example Number": 759,
        "Gorgias Code": ":- dynamic subscription_due/0, invitation_from_friend/0, extended_work_hours/0\nrule(r1, water_plants, []) :- subscription_due.\nrule(r2, take_train, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, water_plants).\ncomplement(water_plants, take_train).",
        "NL Translation": "\"When the subscription is due, I water plants or take the train. Generally, I prefer to water plants but if there is an invitation from a friend, I prefer to take the train. If I have extended work hours, I prefer to water plants over taking the train. I cannot water plants and take the train at the same time.\""
    },
    {
        "Example Number": 651,
        "Gorgias Code": ":- dynamic networking_event/0, birthday_today/0, weekend/0, lunch_time/0, medical_appointment/0.\nrule(r1, go_gym, []) :- networking_event.\nrule(r2, attend_meeting, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- networking_event, birthday_today.\nrule(p2, prefer(r2, r1), []) :- networking_event, birthday_today, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- medical_appointment.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_meeting, go_gym).\ncomplement(go_gym, attend_meeting).\ncomplement(networking_event, birthday_today).\ncomplement(birthday_today, networking_event).",
        "NL Translation": "If there is a networking event, I go to the gym. If it's someone's birthday today, I attend a meeting. However, if there is a networking event and it's someone's birthday today, I prefer to go to the gym, but if I am moving house, I prefer to attend the meeting. I prefer going to the gym over attending the meeting on weekends. I prefer attending the meeting over going to the gym during lunchtime. If I have a medical appointment, I prefer attending the meeting over going to the gym."
    },
    {
        "Example Number": 590,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, financial_aid/0, vacation_planned/0.\nrule(r1, meditate, []) :- new_restaurant_to_try.\nrule(r2, take_bus, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, financial_aid.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, financial_aid, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, meditate).\ncomplement(meditate, take_bus).\ncomplement(new_restaurant_to_try, financial_aid).\ncomplement(financial_aid, new_restaurant_to_try).",
        "NL Translation": "If there is a new restaurant to try, I meditate. If I have financial aid, I take the bus. If there is both a new restaurant to try and financial aid, I prefer to meditate; however, if it's also a hot day, I prefer to take the bus. If there is a vacation planned, I prefer to take the bus over meditating."
    },
    {
        "Example Number": 486,
        "Gorgias Code": ":- dynamic family_emergency/0, weekend/0, rainy_day/0\nrule(r1, clean_house, []) :- family_emergency.\nrule(r2, go_gym, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, clean_house).\ncomplement(clean_house, go_gym).",
        "NL Translation": "If there is a family emergency, I clean the house or go to the gym. Generally, I prefer to clean the house but if it is the weekend, I prefer to go to the gym. However, if it is a rainy day, I prefer to clean the house. I cannot clean the house and go to the gym at the same time."
    },
    {
        "Example Number": 792,
        "Gorgias Code": ":- dynamic project_extension/0, humid_day/0, party_invitation/0.\nrule(r1, evening_walk, []) :- project_extension.\nrule(r2, yoga_session, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- project_extension, humid_day.\nrule(p2, prefer(r2, r1), []) :- project_extension, humid_day, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, evening_walk).\ncomplement(evening_walk, yoga_session).\ncomplement(project_extension, humid_day).\ncomplement(humid_day, project_extension).",
        "NL Translation": "\"If there is a project extension, I go for an evening walk. If it's a humid day, I attend a yoga session. If I have both a project extension and a humid day, I prefer an evening walk; however, if it's also a wedding anniversary, I prefer a yoga session. I can't at the same time attend a yoga session and go for an evening walk, and project extension and humid day are not compatible.\""
    },
    {
        "Example Number": 878,
        "Gorgias Code": ":- dynamic holiday_season/0, team_project_due/0, boss_in_office/0.\nrule(r1, morning_run, []) :- holiday_season.\nrule(r2, go_gym, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- holiday_season, team_project_due.\nrule(p2, prefer(r2, r1), []) :- holiday_season, team_project_due, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, morning_run).\ncomplement(morning_run, go_gym).\ncomplement(holiday_season, team_project_due).\ncomplement(team_project_due, holiday_season).",
        "NL Translation": "\"When it is holiday season, I either go for a morning run or go to the gym. Generally, I prefer to go for a morning run if it is holiday season and I have a team project due. However, if it is holiday season and I have a team project due and a job interview, I prefer to go to the gym. If the boss is in the office, I prefer going for a morning run over going to the gym.\""
    },
    {
        "Example Number": 93,
        "Gorgias Code": ":- dynamic boss_in_office/0, birthday_today/0, important_meeting/0.\nrule(r1, call_client, []) :- boss_in_office.\nrule(r2, cook_dinner, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, birthday_today.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, birthday_today, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, call_client).\ncomplement(call_client, cook_dinner).\ncomplement(boss_in_office, birthday_today).\ncomplement(birthday_today, boss_in_office).",
        "NL Translation": "If the boss is in the office and it is the birthday today, I call the client. If it is the boss's birthday and it is a weekend, I cook dinner. I prefer calling the client over cooking dinner if both conditions are met. However, if there is an important meeting, I prefer cooking dinner over calling the client."
    },
    {
        "Example Number": 253,
        "Gorgias Code": ":- dynamic vacation_planned/0, cloudy_day/0, low_budget/0, community_event/0, afternoon/0.\nrule(r1, book_ride_share, []) :- vacation_planned.\nrule(r2, attend_workshop, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, cloudy_day, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- afternoon.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_workshop, book_ride_share).\ncomplement(book_ride_share, attend_workshop).\ncomplement(vacation_planned, cloudy_day).\ncomplement(cloudy_day, vacation_planned).",
        "NL Translation": "If there is a vacation planned, I book a ride share. If it's a cloudy day, I attend a workshop. If both the vacation is planned and it's a cloudy day, I prefer to book a ride share; however, if I'm also moving house, I prefer to attend a workshop. If there is a low budget, I prefer to attend a workshop. If there is a community event, I prefer to book a ride share. If it's in the afternoon, I prefer to attend a workshop."
    },
    {
        "Example Number": 682,
        "Gorgias Code": ":- dynamic concert_nearby/0, new_neighbor/0.\nrule(r1, take_train, []) :- concert_nearby.\nrule(r2, join_fitness_class, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, new_neighbor, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, take_train).\ncomplement(take_train, join_fitness_class).\ncomplement(concert_nearby, new_neighbor).\ncomplement(new_neighbor, concert_nearby).",
        "NL Translation": "If there is a nearby concert, I take the train. If I have a new neighbor, I join a fitness class. But if there is both a nearby concert and a new neighbor, I prefer to take the train; however, if it's also lunchtime, I prefer to join a fitness class. I can't at the same time take the train and join a fitness class, and having a nearby concert and a new neighbor are not compatible."
    },
    {
        "Example Number": 194,
        "Gorgias Code": ":- dynamic deadline_missed/0, windy_day/0.\nrule(r1, do_laundry, []) :- deadline_missed.\nrule(r2, evening_walk, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, windy_day.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, windy_day, job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, do_laundry).\ncomplement(do_laundry, evening_walk).\ncomplement(deadline_missed, windy_day).\ncomplement(windy_day, deadline_missed).",
        "NL Translation": "\"If the deadline is missed, I do the laundry. If it's a windy day, I go for an evening walk. However, if both the deadline is missed and it's a windy day, I prefer to go for an evening walk. If it's a windy day and there is a job interview, I prefer to do the laundry. Doing the laundry and going for an evening walk are mutually exclusive, and the deadline being missed and a windy day are not compatible.\""
    },
    {
        "Example Number": 336,
        "Gorgias Code": ":- dynamic birthday_today/0, moving_house/0, party_invitation/0\nrule(r1, clean_house, []) :- birthday_today.\nrule(r2, meditate, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(meditate, clean_house).\ncomplement(clean_house, meditate).",
        "NL Translation": "If it is your birthday today, you can either clean the house or meditate. Generally, you prefer to clean the house, but if you are moving house, you prefer to meditate. However, if you have a party invitation, you prefer to clean the house. You cannot clean the house and meditate at the same time."
    },
    {
        "Example Number": 49,
        "Gorgias Code": ":- dynamic project_extension/0, tax_refund/0.\nrule(r1, use_subway, []) :- project_extension.\nrule(r2, host_dinner_party, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- project_extension, tax_refund.\nrule(p2, prefer(r2, r1), []) :- project_extension, tax_refund, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, use_subway).\ncomplement(use_subway, host_dinner_party).\ncomplement(project_extension, tax_refund).\ncomplement(tax_refund, project_extension).",
        "NL Translation": "\"If I have a project extension, I use the subway. If I have a tax refund, I host a dinner party. But if I have both, I prefer to use the subway; however, if it's also my wedding anniversary, I prefer to host a dinner party. I can't at the same time use the subway and host a dinner party, and having a project extension and a tax refund are not compatible.\""
    },
    {
        "Example Number": 308,
        "Gorgias Code": ":- dynamic got_bonus/0, snowstorm/0\nrule(r1, dispose_trash, []) :- got_bonus.\nrule(r2, go_to(restaurant), []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), dispose_trash).\ncomplement(dispose_trash, go_to(restaurant)).",
        "NL Translation": "If I got a bonus, I either dispose of the trash or go to a restaurant. Generally, I prefer to dispose of the trash, but if there is a snowstorm, I prefer to go to a restaurant. I can't at the same time go to a restaurant and dispose of the trash."
    },
    {
        "Example Number": 616,
        "Gorgias Code": ":- dynamic cloudy_day/0, rainy_day/0, concert_nearby/0, subscription_due/0, early_morning/0.\nrule(r1, visit_museum, []) :- cloudy_day.\nrule(r2, book_ride_share, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, rainy_day.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, rainy_day, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- early_morning.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_ride_share, visit_museum).\ncomplement(visit_museum, book_ride_share).\ncomplement(cloudy_day, rainy_day).\ncomplement(rainy_day, cloudy_day).",
        "NL Translation": "\"If it is a cloudy day, I visit the museum. If it is a rainy day, I book a ride share. If it is both a cloudy and rainy day, I prefer to visit the museum; however, if there is also a snowstorm, I prefer to book a ride share. I cannot book a ride share and visit the museum at the same time. If there is a concert nearby, I prefer to visit the museum. If there is a subscription due, I prefer to book a ride share. If it is early morning, I prefer to visit the museum over booking a ride share.\""
    },
    {
        "Example Number": 517,
        "Gorgias Code": ":- dynamic boss_in_office/0, new_neighbor/0, important_meeting/0\nrule(r1, take_bus, []) :- boss_in_office.\nrule(r2, go_gym, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, take_bus).\ncomplement(take_bus, go_gym).",
        "NL Translation": "If the boss is in the office, I take the bus or go to the gym. Generally, I prefer to take the bus, but if there is a new neighbor, I prefer to go to the gym. However, if there is an important meeting, I prefer to take the bus. I can't at the same time take the bus and go to the gym."
    },
    {
        "Example Number": 98,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, night_time/0, hail_storm/0\nrule(r1, explore_city, []) :- wedding_anniversary.\nrule(r2, book_ride_share, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, explore_city).\ncomplement(explore_city, book_ride_share).",
        "NL Translation": "If it is your wedding anniversary, you can explore the city or book a ride share. Generally, you prefer to book a ride share, but if it is night time, you prefer to explore the city. However, if there is a hail storm, you prefer to book a ride share over exploring the city. You cannot explore the city and book a ride share at the same time."
    },
    {
        "Example Number": 392,
        "Gorgias Code": ":- dynamic hail_storm/0, holiday_season/0, client_feedback/0\nrule(r1, take_picnic, []) :- hail_storm.\nrule(r2, give_presentation, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(give_presentation, take_picnic).\ncomplement(take_picnic, give_presentation).",
        "NL Translation": "If there is a hail storm, I take a picnic or give a presentation. Generally, I prefer to take a picnic but if it is the holiday season, I prefer to give a presentation. However, if there is client feedback, I prefer to take a picnic. I can't at the same time take a picnic and give a presentation."
    },
    {
        "Example Number": 804,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, go_gym, []) :- lunch_time.\nrule(r2, explore_city, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(explore_city, go_gym).\ncomplement(go_gym, explore_city).",
        "NL Translation": "When it is lunch time, I can either go to the gym or explore the city. Generally, I prefer to go to the gym over exploring the city."
    },
    {
        "Example Number": 400,
        "Gorgias Code": ":- dynamic family_emergency/0, moving_house/0\nrule(r1, make_coffee, []) :- family_emergency.\nrule(r2, take_picnic, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, make_coffee).\ncomplement(make_coffee, take_picnic).",
        "NL Translation": "If there is a family emergency, I make coffee or take a picnic. Generally, I prefer to make coffee but if I am moving house, I prefer to take a picnic. I can't at the same time make coffee and take a picnic."
    },
    {
        "Example Number": 558,
        "Gorgias Code": ":- dynamic feeling_sick/0, holiday_season/0, windy_day/0\nrule(r1, attend_concert, []) :- feeling_sick.\nrule(r2, pay_bills, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, attend_concert).\ncomplement(attend_concert, pay_bills).",
        "NL Translation": "If feeling sick, attend concert or pay bills. Generally prefer to attend concert, but if it's the holiday season, prefer to pay bills. If it's a windy day, prefer to pay bills over attending concert."
    },
    {
        "Example Number": 622,
        "Gorgias Code": ":- dynamic school_reunion/0, medical_appointment/0, got_bonus/0.\nrule(r1, dispose_trash, []) :- school_reunion.\nrule(r2, take_train, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []) :- school_reunion, medical_appointment.\nrule(p2, prefer(r2, r1), []) :- school_reunion, medical_appointment, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, dispose_trash).\ncomplement(dispose_trash, take_train).\ncomplement(school_reunion, medical_appointment).\ncomplement(medical_appointment, school_reunion).",
        "NL Translation": "\"If there is a school reunion, I dispose trash. If I have a medical appointment, I take the train. But if I have both, I prefer to dispose trash; however, if there is also an urgent deadline, I prefer to take the train. If I got a bonus, I prefer to dispose trash over taking the train.\""
    },
    {
        "Example Number": 268,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, hail_storm/0\nrule(r1, evening_walk, []) :- wedding_anniversary.\nrule(r2, join_fitness_class, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, evening_walk).\ncomplement(evening_walk, join_fitness_class).",
        "NL Translation": "If there is a wedding anniversary, I go for an evening walk or join a fitness class. Generally, I prefer an evening walk but if there is a hail storm, I prefer to join a fitness class. I can't at the same time go for an evening walk and join a fitness class."
    },
    {
        "Example Number": 425,
        "Gorgias Code": ":- dynamic school_reunion/0, hot_day/0.\nrule(r1, plan_meals, []) :- school_reunion.\nrule(r2, go_to(theater), []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- school_reunion, hot_day.\nrule(p2, prefer(r2, r1), []) :- school_reunion, hot_day, party_invitation.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(theater), plan_meals).\ncomplement(plan_meals, go_to(theater)).\ncomplement(school_reunion, hot_day).\ncomplement(hot_day, school_reunion).",
        "NL Translation": "\"If there is a school reunion, I plan meals. On a hot day, I go to the theater. If there is both a school reunion and a hot day, I prefer to plan meals; however, if there is also a party invitation, I prefer to go to the theater. I can't at the same time plan meals and go to the theater, and school reunion and hot day are not compatible.\""
    },
    {
        "Example Number": 563,
        "Gorgias Code": ":- dynamic financial_aid/0.\nrule(r1, dispose_trash, []) :- financial_aid.\nrule(r2, book_ride_share, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_ride_share, dispose_trash).\ncomplement(dispose_trash, book_ride_share).",
        "NL Translation": "If I have financial aid, I dispose of the trash. If I have financial aid, I book a ride share. I prefer to dispose of the trash over booking a ride share."
    },
    {
        "Example Number": 722,
        "Gorgias Code": ":- dynamic school_reunion/0, subscription_due/0, client_feedback/0, friend_in_town/0, expensive_event/0.\nrule(r1, finish_report, []) :- school_reunion.\nrule(r2, evening_walk, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- school_reunion, subscription_due.\nrule(p2, prefer(r2, r1), []) :- school_reunion, subscription_due, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- expensive_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(evening_walk, finish_report).\ncomplement(finish_report, evening_walk).\ncomplement(school_reunion, subscription_due).\ncomplement(subscription_due, school_reunion).",
        "NL Translation": "If there is a school reunion, I finish the report. If a subscription is due, I go for an evening walk. If both the school reunion and subscription are due, I prefer to finish the report; however, if there is a family emergency, I prefer the evening walk. If there is client feedback, I prefer finishing the report. If a friend is in town, I prefer going for an evening walk. If there is a family emergency, I prefer finishing the report over the evening walk. If there is an expensive event, I prefer finishing the report over the evening walk."
    },
    {
        "Example Number": 650,
        "Gorgias Code": ":- dynamic important_meeting/0, medical_appointment/0, hot_day/0\nrule(r1, join_fitness_class, []) :- important_meeting.\nrule(r2, attend_concert, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, join_fitness_class).\ncomplement(join_fitness_class, attend_concert).",
        "NL Translation": "If there is an important meeting, I join a fitness class. If there is an important meeting, I attend a concert. However, if I have a medical appointment, I prefer to attend a concert. I can't at the same time join a fitness class and attend a concert. If it's a hot day, I prefer to join a fitness class over attending a concert."
    },
    {
        "Example Number": 6,
        "Gorgias Code": ":- dynamic good_investment/0, rainy_day/0\nrule(r1, buy_groceries, []) :- good_investment.\nrule(r2, visit_museum, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, buy_groceries).\ncomplement(buy_groceries, visit_museum).",
        "NL Translation": "\"If it is a good investment, I either buy groceries or visit the museum. Generally, I prefer to buy groceries but if it is a rainy day, I prefer to visit the museum. I can't at the same time buy groceries and visit the museum.\""
    },
    {
        "Example Number": 436,
        "Gorgias Code": ":- dynamic boss_in_office/0.\nrule(r1, go_to(theater), []) :- boss_in_office.\nrule(r2, schedule_meeting, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []).\ncomplement(schedule_meeting, go_to(theater)).\ncomplement(go_to(theater), schedule_meeting).",
        "NL Translation": "When the boss is in the office, I go to the theater or schedule a meeting. I generally prefer to go to the theater over scheduling a meeting. I can't go to the theater and schedule a meeting at the same time."
    },
    {
        "Example Number": 360,
        "Gorgias Code": ":- dynamic concert_nearby/0, deadline_missed/0.\nrule(r1, schedule_meeting, []) :- concert_nearby.\nrule(r2, call_client, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, deadline_missed.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, deadline_missed, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(call_client, schedule_meeting).\ncomplement(schedule_meeting, call_client).\ncomplement(concert_nearby, deadline_missed).\ncomplement(deadline_missed, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I schedule a meeting. If a deadline is missed, I call the client. However, if there is both a concert nearby and a missed deadline, I prefer to call the client. If it's also a rainy day, I prefer to schedule a meeting. I can't at the same time schedule a meeting and call the client, and concert nearby and missed deadline are not compatible."
    },
    {
        "Example Number": 343,
        "Gorgias Code": ":- dynamic morning_rush/0, cloudy_day/0, important_meeting/0\nrule(r1, morning_run, []) :- morning_rush.\nrule(r2, update_project_plan, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, morning_run).\ncomplement(morning_run, update_project_plan).",
        "NL Translation": "\"If there is a morning rush, I do a morning run or update the project plan. Generally, I prefer to do a morning run but if it's a cloudy day, I prefer to update the project plan. However, if there is an important meeting, I prefer to update the project plan. I can't at the same time do a morning run and update the project plan.\""
    },
    {
        "Example Number": 47,
        "Gorgias Code": ":- dynamic unexpected_expense/0, invitation_from_friend/0, feeling_sick/0\nrule(r1, rent_car, []) :- unexpected_expense.\nrule(r2, cycling_session, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, rent_car).\ncomplement(rent_car, cycling_session).",
        "NL Translation": "\"If there is an unexpected expense, I rent a car. If there is an unexpected expense, I attend a cycling session. Generally, I prefer to rent a car, but if there is an invitation from a friend, I prefer to attend a cycling session. If I am feeling sick, I prefer to attend a cycling session over renting a car.\""
    },
    {
        "Example Number": 190,
        "Gorgias Code": ":- dynamic extended_work_hours/0, good_weather/0\nrule(r1, attend_concert, []) :- extended_work_hours.\nrule(r2, cook_dinner, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(cook_dinner, attend_concert).\ncomplement(attend_concert, cook_dinner).",
        "NL Translation": "When I have extended work hours, I attend a concert or cook dinner. Generally, I prefer to attend a concert but if the weather is good, I prefer to cook dinner. I can't at the same time attend a concert and cook dinner."
    },
    {
        "Example Number": 707,
        "Gorgias Code": ":- dynamic dusk/0, family_emergency/0.\nrule(r1, go_to_bar, []) :- dusk.\nrule(r2, visit_family, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- dusk, family_emergency.\nrule(p2, prefer(r2, r1), []) :- dusk, family_emergency, friend_in_town.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, go_to_bar).\ncomplement(go_to_bar, visit_family).\ncomplement(dusk, family_emergency).\ncomplement(family_emergency, dusk).",
        "NL Translation": "\"If it is dusk, I go to the bar. If there is a family emergency, I visit family. However, if it is both dusk and a family emergency, I prefer to go to the bar; but if there is also a friend in town, I prefer to visit family. I can't at the same time go to the bar and visit family, and dusk and family emergency are not compatible.\""
    },
    {
        "Example Number": 681,
        "Gorgias Code": ":- dynamic family_emergency/0, new_restaurant_to_try/0\nrule(r1, clean_house, []) :- family_emergency.\nrule(r2, join_fitness_class, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, clean_house).\ncomplement(clean_house, join_fitness_class).",
        "NL Translation": "When there is a family emergency, I clean the house or join a fitness class. Generally, I prefer to clean the house, but if there is a new restaurant to try, I prefer to join a fitness class. I can't at the same time clean the house and join a fitness class."
    },
    {
        "Example Number": 551,
        "Gorgias Code": ":- dynamic morning_rush/0, hot_day/0, invitation_from_friend/0, unexpected_guest/0, medical_appointment/0.\nrule(r1, travel_abroad, []) :- morning_rush.\nrule(r2, go_gym, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- morning_rush, hot_day.\nrule(p2, prefer(r2, r1), []) :- morning_rush, hot_day, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- medical_appointment.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_gym, travel_abroad).\ncomplement(travel_abroad, go_gym).\ncomplement(morning_rush, hot_day).\ncomplement(hot_day, morning_rush).",
        "NL Translation": "\"If there is a morning rush, I travel abroad. On a hot day, I go to the gym. If there is both a morning rush and a hot day, I prefer to travel abroad, but if I am moving house, I prefer to go to the gym. If there is an invitation from a friend, I prefer to go to the gym. If there is an unexpected guest, I prefer to travel abroad. If there is a medical appointment, I prefer to go to the gym. I can't at the same time go to the gym and travel abroad, and morning rush and hot day are not compatible.\""
    },
    {
        "Example Number": 933,
        "Gorgias Code": ":- dynamic family_gathering/0.\nrule(r1, read_book, []) :- family_gathering.\nrule(r2, go_to(theater), []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(theater), read_book).\ncomplement(read_book, go_to(theater)).",
        "NL Translation": "When there is a family gathering, I either read a book or go to the theater. I generally prefer to read a book over going to the theater."
    },
    {
        "Example Number": 254,
        "Gorgias Code": ":- dynamic team_project_due/0, project_extension/0.\nrule(r1, go_to(theater), []) :- team_project_due.\nrule(r2, drive_car, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- team_project_due, project_extension.\nrule(p2, prefer(r2, r1), []) :- team_project_due, project_extension, friend_in_town.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, go_to(theater)).\ncomplement(go_to(theater), drive_car).\ncomplement(team_project_due, project_extension).\ncomplement(project_extension, team_project_due).",
        "NL Translation": "\"If I have a team project due, I go to the theater. If I have a project extension, I drive the car. But if I have both, I prefer to go to the theater, however if there is also a friend in town I prefer to drive the car. I can't at the same time go to the theater and drive the car, and having a team project due and a project extension aren't compatible.\""
    },
    {
        "Example Number": 434,
        "Gorgias Code": ":- dynamic project_extension/0, concert_nearby/0\nrule(r1, visit_doctor, []) :- project_extension.\nrule(r2, water_plants, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, visit_doctor).\ncomplement(visit_doctor, water_plants).",
        "NL Translation": "If there is a project extension, I visit the doctor or water plants. Generally, I prefer to visit the doctor but if there is a concert nearby, I prefer to water plants. I can't at the same time water plants and visit the doctor."
    },
    {
        "Example Number": 40,
        "Gorgias Code": ":- dynamic got_bonus/0, night_time/0, project_extension/0, friend_in_town/0, client_feedback/0.\nrule(r1, attend_concert, []) :- got_bonus.\nrule(r2, explore_city, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- got_bonus, night_time.\nrule(p2, prefer(r2, r1), []) :- got_bonus, night_time, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- client_feedback.\nrule(c5, prefer(c4, c3), []).\ncomplement(explore_city, attend_concert).\ncomplement(attend_concert, explore_city).\ncomplement(got_bonus, night_time).\ncomplement(night_time, got_bonus).",
        "NL Translation": "If I have received a bonus, I attend a concert. If it is night time, I explore the city. However, if I have both a bonus and it is night time, I prefer to attend a concert. If there is an unexpected guest, I prefer to explore the city. If there is a project extension, I prefer to attend a concert. If a friend is in town, I prefer to explore the city. If there is client feedback, I prefer to attend a concert over exploring the city."
    },
    {
        "Example Number": 519,
        "Gorgias Code": ":- dynamic networking_event/0, night_time/0, lunch_time/0, discount_on_flight/0, humid_day/0.\nrule(r1, visit_family, []) :- networking_event.\nrule(r2, meditate, []) :- night_time.\nrule(p1, prefer(r1, r2), []) :- networking_event, night_time.\nrule(p2, prefer(r2, r1), []) :- networking_event, night_time, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- humid_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(meditate, visit_family).\ncomplement(visit_family, meditate).\ncomplement(networking_event, night_time).\ncomplement(night_time, networking_event).",
        "NL Translation": "\"If there is a networking event, I visit family. If it is night time, I meditate. I prefer to visit family over meditate if there is a networking event and it is night time. However, if it is also dusk, I prefer to meditate over visit family. I can't visit family and meditate at the same time. If it is lunch time, I prefer to visit family over meditate. If there is a discount on flight, I prefer to meditate over visit family. If it is a humid day, I prefer to visit family over meditate.\""
    },
    {
        "Example Number": 665,
        "Gorgias Code": ":- dynamic snowstorm/0, afternoon/0, feeling_sick/0\nrule(r1, make_coffee, []) :- snowstorm.\nrule(r2, book_ride_share, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, make_coffee).\ncomplement(make_coffee, book_ride_share).",
        "NL Translation": "If there is a snowstorm, I make coffee or book a ride share. Generally, I prefer to book a ride share but if it is in the afternoon, I prefer to make coffee. However, if I am feeling sick, I prefer to make coffee over booking a ride share. I cannot make coffee and book a ride share at the same time."
    },
    {
        "Example Number": 746,
        "Gorgias Code": ":- dynamic unexpected_guest/0.\nrule(r1, prepare_report, []) :- unexpected_guest.\nrule(r2, rent_car, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\ncomplement(rent_car, prepare_report).\ncomplement(prepare_report, rent_car).",
        "NL Translation": "If there is an unexpected guest, I prepare a report. If there is an unexpected guest, I rent a car. I prefer to prepare a report over renting a car. I cannot prepare a report and rent a car at the same time."
    },
    {
        "Example Number": 323,
        "Gorgias Code": ":- dynamic afternoon/0, got_bonus/0\nrule(r1, prepare_report, []) :- afternoon.\nrule(r2, order_taxi, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, prepare_report).\ncomplement(prepare_report, order_taxi).",
        "NL Translation": "When it is afternoon, I prepare a report or order a taxi. Generally, I prefer to prepare a report but if I got a bonus, I prefer to order a taxi. I can't at the same time prepare a report and order a taxi."
    },
    {
        "Example Number": 232,
        "Gorgias Code": ":- dynamic party_invitation/0, invitation_from_friend/0.\nrule(r1, travel_abroad, []) :- party_invitation.\nrule(r2, go_to(restaurant), []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- party_invitation, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- party_invitation, invitation_from_friend, birthday_today.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), travel_abroad).\ncomplement(travel_abroad, go_to(restaurant)).\ncomplement(party_invitation, invitation_from_friend).\ncomplement(invitation_from_friend, party_invitation).",
        "NL Translation": "If there is a party invitation, I travel abroad. If I receive an invitation from a friend, I go to a restaurant. If both the party invitation and the invitation from a friend are present, and it's also my birthday today, I prefer to go to a restaurant. I can't travel abroad and go to a restaurant at the same time, and party invitation and invitation from a friend are incompatible."
    },
    {
        "Example Number": 737,
        "Gorgias Code": ":- dynamic dusk/0, wedding_anniversary/0, urgent_deadline/0, new_restaurant_to_try/0, vacation_planned/0.\nrule(r1, do_laundry, []) :- dusk.\nrule(r2, cycle_to_work, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- dusk, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- dusk, wedding_anniversary, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(cycle_to_work, do_laundry).\ncomplement(do_laundry, cycle_to_work).\ncomplement(dusk, wedding_anniversary).\ncomplement(wedding_anniversary, dusk).",
        "NL Translation": "\"If it is dusk, I do laundry. If it is our wedding anniversary, I cycle to work. I prefer to do laundry over cycling to work if it is dusk and our wedding anniversary. However, if there is a good investment opportunity, I prefer to cycle to work. If there is an urgent deadline, I prefer doing laundry over cycling to work. If there is a new restaurant to try, I prefer cycling to work over doing laundry. If there is a vacation planned, I prefer doing laundry over cycling to work.\""
    },
    {
        "Example Number": 986,
        "Gorgias Code": ":- dynamic relationship_break/0, expensive_event/0, night_time/0, vacation_planned/0, boss_in_office/0.\nrule(r1, reply_emails, []) :- relationship_break.\nrule(r2, join_fitness_class, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- relationship_break, expensive_event.\nrule(p2, prefer(r2, r1), []) :- relationship_break, expensive_event, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- boss_in_office.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, reply_emails).\ncomplement(reply_emails, join_fitness_class).\ncomplement(relationship_break, expensive_event).\ncomplement(expensive_event, relationship_break).",
        "NL Translation": "If there is a relationship break, I reply to emails. If there is an expensive event, I join a fitness class. I prefer to reply to emails over joining a fitness class if there is a relationship break and an expensive event. However, if there is a party invitation, I prefer to join a fitness class over replying to emails. If it is night time, I prefer to join a fitness class over replying to emails. If there is a vacation planned, I prefer to reply to emails over joining a fitness class. If the boss is in the office, I prefer to reply to emails over joining a fitness class."
    },
    {
        "Example Number": 263,
        "Gorgias Code": ":- dynamic team_project_due/0, concert_nearby/0, early_morning/0.\nrule(r1, dispose_trash, []) :- team_project_due.\nrule(r2, pay_bills, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- team_project_due, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- team_project_due, concert_nearby, cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, dispose_trash).\ncomplement(dispose_trash, pay_bills).\ncomplement(team_project_due, concert_nearby).\ncomplement(concert_nearby, team_project_due).",
        "NL Translation": "\"If I have a team project due, I dispose the trash. If there is a concert nearby, I pay the bills. But if I have both a team project due and a concert nearby, I prefer to dispose the trash; however, if it's also a cloudy day, I prefer to pay the bills. If it is early morning, I prefer to dispose the trash over paying the bills.\""
    }
]