[
    {
        "Example Number": 280,
        "Gorgias Code": ":- dynamic family_emergency/0.\nrule(r1, go_to(cinema), []) :- family_emergency.\nrule(r2, book_flight, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_flight, go_to(cinema)).\ncomplement(go_to(cinema), book_flight).",
        "NL Translation": "If there is a family emergency, I can either go to the cinema or book a flight. Generally, I prefer to go to the cinema. I can't at the same time go to the cinema and book a flight."
    },
    {
        "Example Number": 138,
        "Gorgias Code": ":- dynamic rainy_day/0, family_emergency/0\nrule(r1, organize_workspace, []) :- rainy_day.\nrule(r2, drive_car, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, organize_workspace).\ncomplement(organize_workspace, drive_car).",
        "NL Translation": "If it is a rainy day, I can either organize my workspace or drive my car. Generally, I prefer to organize my workspace, but if there is a family emergency, I prefer to drive my car. I can't at the same time organize my workspace and drive my car."
    },
    {
        "Example Number": 96,
        "Gorgias Code": ":- dynamic concert_nearby/0, windy_day/0\nrule(r1, pay_bills, []) :- concert_nearby.\nrule(r2, cook_dinner, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(cook_dinner, pay_bills).\ncomplement(pay_bills, cook_dinner).",
        "NL Translation": "If there is a concert nearby, I can either pay bills or cook dinner. Generally, I prefer to pay bills, but if it is a windy day, I prefer to cook dinner. I can't at the same time pay bills and cook dinner."
    },
    {
        "Example Number": 130,
        "Gorgias Code": ":- dynamic client_feedback/0, cloudy_day/0, night_time/0.\nrule(r1, visit_family, []) :- client_feedback.\nrule(r2, take_picnic, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- client_feedback, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- client_feedback, cloudy_day, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, visit_family).\ncomplement(visit_family, take_picnic).\ncomplement(client_feedback, cloudy_day).\ncomplement(cloudy_day, client_feedback).",
        "NL Translation": "If I have client feedback, I visit family. If it's a cloudy day, I take a picnic. But if I have client feedback and it's a cloudy day, I prefer to visit family. However, if I have client feedback, it's a cloudy day, and I'm on a low budget, I prefer to take a picnic. I can't at the same time visit family and take a picnic. Client feedback and cloudy day aren't compatible. If it's night time, I prefer to visit family over taking a picnic."
    },
    {
        "Example Number": 253,
        "Gorgias Code": ":- dynamic low_budget/0, school_reunion/0.\nrule(r1, order_taxi, []) :- low_budget.\nrule(r2, go_shopping, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- low_budget, school_reunion.\nrule(p2, prefer(r2, r1), []) :- low_budget, school_reunion, networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, order_taxi).\ncomplement(order_taxi, go_shopping).\ncomplement(low_budget, school_reunion).\ncomplement(school_reunion, low_budget).",
        "NL Translation": "If I have a low budget, I order a taxi. If there is a school reunion, I go shopping. But if I have a low budget and there is a school reunion, I prefer to order a taxi. However, if there is also a networking event, I prefer to go shopping. I can't at the same time order a taxi and go shopping. Low budget and school reunion aren't compatible."
    },
    {
        "Example Number": 74,
        "Gorgias Code": ":- dynamic tax_refund/0, team_project_due/0, cloudy_day/0.\nrule(r1, visit_doctor, []) :- tax_refund.\nrule(r2, ride_bike, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- tax_refund, team_project_due.\nrule(p2, prefer(r2, r1), []) :- tax_refund, team_project_due, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(ride_bike, visit_doctor).\ncomplement(visit_doctor, ride_bike).\ncomplement(tax_refund, team_project_due).\ncomplement(team_project_due, tax_refund).",
        "NL Translation": "If I have a tax refund, I visit the doctor. If I have a team project due, I ride my bike. But if I have a tax refund and a team project due, I prefer to visit the doctor. However, if I also have a party invitation, I prefer to ride my bike. I can't at the same time visit the doctor and ride my bike. Tax refund and team project due aren't compatible. If it's a cloudy day, I prefer to visit the doctor over riding my bike."
    },
    {
        "Example Number": 59,
        "Gorgias Code": ":- dynamic deadline_missed/0, medical_appointment/0\nrule(r1, book_flight, []) :- deadline_missed.\nrule(r2, visit_family, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, book_flight).\ncomplement(book_flight, visit_family).",
        "NL Translation": "If I have missed a deadline, I can either book a flight or visit family. I generally prefer to book a flight. However, if I have a medical appointment, I prefer to visit family. I can't at the same time book a flight and visit family."
    },
    {
        "Example Number": 227,
        "Gorgias Code": ":- dynamic afternoon/0, client_feedback/0, good_investment/0, windy_day/0, snowstorm/0.\nrule(r1, book_flight, []) :- afternoon.\nrule(r2, reply_emails, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- afternoon, client_feedback.\nrule(p2, prefer(r2, r1), []) :- afternoon, client_feedback, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- snowstorm.\nrule(c5, prefer(c4, c3), []).\ncomplement(reply_emails, book_flight).\ncomplement(book_flight, reply_emails).\ncomplement(afternoon, client_feedback).\ncomplement(client_feedback, afternoon).",
        "NL Translation": "In the afternoon, I can either book a flight or reply to emails. If I have client feedback, I can also reply to emails. Generally, if it is afternoon and I have client feedback, I prefer to book a flight. However, if it is also dusk, I prefer to reply to emails. I can't at the same time book a flight and reply to emails. The afternoon and client feedback aren't compatible. If there is a good investment, I prefer to book a flight over replying to emails. If it is a windy day, I prefer to reply to emails over booking a flight. If there is a snowstorm, I prefer to reply to emails over the previous preferences. If there is a snowstorm, I prefer the last preference over the previous one."
    },
    {
        "Example Number": 64,
        "Gorgias Code": ":- dynamic hot_day/0, relationship_break/0, networking_event/0.\nrule(r1, go_gym, []) :- hot_day.\nrule(r2, call_client, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- hot_day, relationship_break.\nrule(p2, prefer(r2, r1), []) :- hot_day, relationship_break, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, go_gym).\ncomplement(go_gym, call_client).\ncomplement(hot_day, relationship_break).\ncomplement(relationship_break, hot_day).",
        "NL Translation": "On a hot day, I can either go to the gym or call a client. If I have a hot day and a relationship break, I prefer to go to the gym. However, if it is also my wedding anniversary, I prefer to call the client. If there is a networking event, I prefer to go to the gym. I can't at the same time go to the gym and call the client. A hot day and a relationship break aren't compatible."
    },
    {
        "Example Number": 22,
        "Gorgias Code": ":- dynamic lunch_time/0, team_project_due/0, holiday_season/0\nrule(r1, go_to(theater), []) :- lunch_time.\nrule(r2, swim_session, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, go_to(theater)).\ncomplement(go_to(theater), swim_session).",
        "NL Translation": "If it is lunch time, I can either go to the theater or have a swim session. Generally, I prefer to go to the theater, but if there is a team project due, I prefer to have a swim session. However, if it is the holiday season, I prefer to go to the theater. I can't at the same time go to the theater and have a swim session."
    },
    {
        "Example Number": 170,
        "Gorgias Code": ":- dynamic family_emergency/0, project_extension/0, afternoon/0\nrule(r1, cycle_to_work, []) :- family_emergency.\nrule(r2, order_taxi, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, cycle_to_work).\ncomplement(cycle_to_work, order_taxi).",
        "NL Translation": "If there is a family emergency, I can either cycle to work or order a taxi. Generally, I prefer to cycle to work but if there is a project extension, I prefer to order a taxi. I can't at the same time cycle to work and order a taxi. If it is the afternoon, I prefer to cycle to work over ordering a taxi."
    },
    {
        "Example Number": 77,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, team_project_due/0, humid_day/0\nrule(r1, read_book, []) :- wedding_anniversary.\nrule(r2, morning_run, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, read_book).\ncomplement(read_book, morning_run).",
        "NL Translation": "If it is my wedding anniversary, I can either read a book or go for a morning run. Generally, I prefer to read a book. However, if there is a team project due, I prefer to go for a morning run. If it is a humid day, I prefer to read a book. I can't at the same time read a book and go for a morning run."
    },
    {
        "Example Number": 252,
        "Gorgias Code": ":- dynamic low_budget/0, feeling_sick/0, school_reunion/0, hot_day/0, afternoon/0.\nrule(r1, use_subway, []) :- low_budget.\nrule(r2, water_plants, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- low_budget, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- low_budget, feeling_sick, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- afternoon.\nrule(c5, prefer(c4, c3), []).\ncomplement(water_plants, use_subway).\ncomplement(use_subway, water_plants).\ncomplement(low_budget, feeling_sick).\ncomplement(feeling_sick, low_budget).",
        "NL Translation": "I have a low budget and I can either use the subway or water the plants. If I have a low budget and I feel sick, I generally prefer to use the subway, but if the weather is good, I prefer to water the plants. I can't at the same time use the subway and water the plants. Low budget and feeling sick are not compatible. If there is a school reunion, I prefer to use the subway over watering the plants. On a hot day, I prefer to use the subway over watering the plants. In the afternoon, I prefer to use the subway over watering the plants. I can't at the same time use the subway and water the plants."
    },
    {
        "Example Number": 155,
        "Gorgias Code": ":- dynamic snowstorm/0, financial_aid/0.\nrule(r1, plan_meals, []) :- snowstorm.\nrule(r2, reply_emails, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- snowstorm, financial_aid.\nrule(p2, prefer(r2, r1), []) :- snowstorm, financial_aid, client_feedback.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, plan_meals).\ncomplement(plan_meals, reply_emails).\ncomplement(snowstorm, financial_aid).\ncomplement(financial_aid, snowstorm).",
        "NL Translation": "If there is a snowstorm, I plan meals. If I have financial aid, I reply to emails. But if there is a snowstorm and I have financial aid, I prefer to plan meals. However, if there is also client feedback, I prefer to reply to emails. I can't at the same time plan meals and reply to emails. Snowstorm and financial aid aren't compatible."
    },
    {
        "Example Number": 142,
        "Gorgias Code": ":- dynamic feeling_sick/0, unexpected_guest/0\nrule(r1, morning_run, []) :- feeling_sick.\nrule(r2, join_fitness_class, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, morning_run).\ncomplement(morning_run, join_fitness_class).",
        "NL Translation": "I can either go for a morning run or join a fitness class. Generally, I prefer to go for a morning run. However, if there is an unexpected guest, I prefer to join the fitness class. I can't at the same time go for a morning run and join a fitness class."
    },
    {
        "Example Number": 148,
        "Gorgias Code": ":- dynamic urgent_deadline/0, family_emergency/0, moving_house/0\nrule(r1, go_to(restaurant), []) :- urgent_deadline.\nrule(r2, explore_city, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, go_to(restaurant)).\ncomplement(go_to(restaurant), explore_city).",
        "NL Translation": "If I have an urgent deadline, I can either go to the restaurant or explore the city. Generally, I prefer to go to the restaurant. However, if there is a family emergency, I prefer to explore the city. If I am moving house, I prefer to go to the restaurant. I can't at the same time go to the restaurant and explore the city."
    },
    {
        "Example Number": 43,
        "Gorgias Code": ":- dynamic hot_day/0, unexpected_guest/0.\nrule(r1, reply_emails, []) :- hot_day.\nrule(r2, yoga_session, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- hot_day, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- hot_day, unexpected_guest, vacation_planned.\nrule(c1, prefer(p2, p1), []).\ncomplement(yoga_session, reply_emails).\ncomplement(reply_emails, yoga_session).\ncomplement(hot_day, unexpected_guest).\ncomplement(unexpected_guest, hot_day).",
        "NL Translation": "On a hot day, I reply to emails. If there is an unexpected guest, I have a yoga session. If it is a hot day and there is an unexpected guest, I prefer to reply to emails. However, if I also have a vacation planned, I prefer to have a yoga session. I can't at the same time reply to emails and have a yoga session. Hot day and unexpected guest are not compatible."
    },
    {
        "Example Number": 124,
        "Gorgias Code": ":- dynamic subscription_due/0, unexpected_guest/0, client_feedback/0.\nrule(r1, meditate, []) :- subscription_due.\nrule(r2, join_fitness_class, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- subscription_due, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- subscription_due, unexpected_guest, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, meditate).\ncomplement(meditate, join_fitness_class).\ncomplement(subscription_due, unexpected_guest).\ncomplement(unexpected_guest, subscription_due).",
        "NL Translation": "If my subscription is due, I meditate. If I have an unexpected guest, I join a fitness class. But if my subscription is due and I have an unexpected guest, I prefer to meditate. However, if I also missed a deadline, I prefer to join the fitness class. I can't at the same time meditate and join a fitness class. My subscription being due and having an unexpected guest aren't compatible. If I receive client feedback, I prefer to meditate over joining the fitness class."
    },
    {
        "Example Number": 109,
        "Gorgias Code": ":- dynamic windy_day/0, wedding_anniversary/0, dusk/0\nrule(r1, yoga_session, []) :- windy_day.\nrule(r2, buy_groceries, []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, yoga_session).\ncomplement(yoga_session, buy_groceries).",
        "NL Translation": "If it is a windy day, I can either have a yoga session or buy groceries. Generally, I prefer to have a yoga session but if it is my wedding anniversary, I prefer to buy groceries. I can't at the same time have a yoga session and buy groceries. If it is dusk, I prefer to buy groceries over having a yoga session."
    },
    {
        "Example Number": 192,
        "Gorgias Code": ":- dynamic new_neighbor/0, discount_on_flight/0, family_gathering/0.\nrule(r1, swim_session, []) :- new_neighbor.\nrule(r2, book_ride_share, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, discount_on_flight, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, swim_session).\ncomplement(swim_session, book_ride_share).\ncomplement(new_neighbor, discount_on_flight).\ncomplement(discount_on_flight, new_neighbor).",
        "NL Translation": "If I have a new neighbor, I have a swim session. If there is a discount on a flight, I book a ride share. But if I have a new neighbor and a discount on a flight, I prefer to have a swim session. However, if it is also the holiday season, I prefer to book a ride share. I can't at the same time have a swim session and book a ride share. New neighbor and discount on flight aren't compatible. If there is a family gathering, I prefer to have a swim session over booking a ride share."
    },
    {
        "Example Number": 17,
        "Gorgias Code": ":- dynamic financial_aid/0, important_meeting/0, extended_work_hours/0, discount_on_flight/0, dusk/0.\nrule(r1, attend_workshop, []) :- financial_aid.\nrule(r2, drive_car, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- financial_aid, important_meeting.\nrule(p2, prefer(r2, r1), []) :- financial_aid, important_meeting, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- extended_work_hours.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- dusk.\nrule(c5, prefer(c4, c3), []).\ncomplement(drive_car, attend_workshop).\ncomplement(attend_workshop, drive_car).\ncomplement(financial_aid, important_meeting).\ncomplement(important_meeting, financial_aid).",
        "NL Translation": "I can either attend the workshop or drive the car. If I have financial aid, I can attend the workshop. If there is an important meeting, I can drive the car. However, if I have financial aid and there is an important meeting, I prefer to attend the workshop. If there is also a family emergency, I prefer to drive the car. I can't at the same time attend the workshop and drive the car. If I have extended work hours, I prefer to attend the workshop. If there is a discount on the flight, I also prefer to attend the workshop. If it is dusk, I prefer to attend the workshop over driving the car. I can't at the same time have financial aid and have an important meeting."
    },
    {
        "Example Number": 241,
        "Gorgias Code": ":- dynamic birthday_today/0, windy_day/0, lunch_time/0\nrule(r1, plan_meals, []) :- birthday_today.\nrule(r2, clean_house, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(clean_house, plan_meals).\ncomplement(plan_meals, clean_house).",
        "NL Translation": "If it is my birthday today, I can either plan meals or clean the house. Generally, I prefer to plan meals but if it is a windy day, I prefer to clean the house. If it is lunch time, I prefer to plan meals. I can't at the same time plan meals and clean the house."
    },
    {
        "Example Number": 171,
        "Gorgias Code": ":- dynamic windy_day/0.\nrule(r1, do_laundry, []) :- windy_day.\nrule(r2, prepare_report, []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(prepare_report, do_laundry).\ncomplement(do_laundry, prepare_report).",
        "NL Translation": "If it is a windy day, I can either do laundry or prepare a report. Generally, I have no preference between doing laundry and preparing a report. I can't at the same time do laundry and prepare a report."
    },
    {
        "Example Number": 196,
        "Gorgias Code": ":- dynamic project_extension/0, team_project_due/0, windy_day/0\nrule(r1, submit_timesheet, []) :- project_extension.\nrule(r2, take_train, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_train, submit_timesheet).\ncomplement(submit_timesheet, take_train).",
        "NL Translation": "If I have a project extension, I can either submit a timesheet or take a train. Generally, I prefer to submit a timesheet, but if I have a team project due, I prefer to take the train. I can't at the same time submit a timesheet and take a train. If it's a windy day, I prefer to take the timesheet over the train."
    },
    {
        "Example Number": 151,
        "Gorgias Code": ":- dynamic humid_day/0, new_neighbor/0, night_time/0, birthday_today/0, medical_appointment/0.\nrule(r1, go_to(theater), []) :- humid_day.\nrule(r2, do_laundry, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- humid_day, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- humid_day, new_neighbor, rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- medical_appointment.\nrule(c5, prefer(c4, c3), []).\ncomplement(do_laundry, go_to(theater)).\ncomplement(go_to(theater), do_laundry).\ncomplement(humid_day, new_neighbor).\ncomplement(new_neighbor, humid_day).",
        "NL Translation": "If it is a humid day, I go to the theater. If I have a new neighbor, I do laundry. But if it is a humid day and I have a new neighbor, I prefer to go to the theater. However, if it is also a rainy day, I prefer to do laundry. I can't at the same time go to the theater and do laundry. Humid day and new neighbor aren't compatible. If it is night time, I prefer to do laundry over going to the theater. If today is my birthday, I prefer to do laundry over going to the theater. If I have a medical appointment, I prefer to do laundry over going to the theater. I prefer the option involving my medical appointment over the one involving night time."
    },
    {
        "Example Number": 146,
        "Gorgias Code": ":- dynamic project_extension/0, medical_appointment/0\nrule(r1, take_train, []) :- project_extension.\nrule(r2, go_shopping, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_shopping, take_train).\ncomplement(take_train, go_shopping).",
        "NL Translation": "If I have a project extension, I can either take the train or go shopping. Generally, I prefer to take the train but if I have a medical appointment, I prefer to go shopping. I can't at the same time take the train and go shopping."
    },
    {
        "Example Number": 52,
        "Gorgias Code": ":- dynamic extended_work_hours/0, dusk/0, moving_house/0\nrule(r1, give_presentation, []) :- extended_work_hours.\nrule(r2, water_plants, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, give_presentation).\ncomplement(give_presentation, water_plants).",
        "NL Translation": "If I have extended work hours, I can either give a presentation or water the plants. Generally, I prefer to give a presentation. However, if it is dusk, I prefer to water the plants. If I am moving house, I prefer to give a presentation. I can't at the same time give a presentation and water the plants."
    },
    {
        "Example Number": 270,
        "Gorgias Code": ":- dynamic community_event/0, team_project_due/0, tax_refund/0\nrule(r1, go_to(restaurant), []) :- community_event.\nrule(r2, explore_city, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, go_to(restaurant)).\ncomplement(go_to(restaurant), explore_city).",
        "NL Translation": "If there is a community event, I can either go to the restaurant or explore the city. Generally, I prefer to go to the restaurant, but if I have a team project due, I prefer to explore the city. If there is a tax refund, I prefer to go to the restaurant over exploring the city. I can't at the same time go to the restaurant and explore the city."
    },
    {
        "Example Number": 73,
        "Gorgias Code": ":- dynamic feeling_sick/0, humid_day/0.\nrule(r1, cycling_session, []) :- feeling_sick.\nrule(r2, schedule_meeting, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, humid_day.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, humid_day, relationship_break.\nrule(c1, prefer(p2, p1), []).\ncomplement(schedule_meeting, cycling_session).\ncomplement(cycling_session, schedule_meeting).\ncomplement(feeling_sick, humid_day).\ncomplement(humid_day, feeling_sick).",
        "NL Translation": "If I am feeling sick, I have a cycling session. If it is a humid day, I schedule a meeting. But if I am feeling sick and it is a humid day, I prefer to have a cycling session. However, if I am also experiencing a relationship break, I prefer to schedule a meeting. I can't at the same time have a cycling session and schedule a meeting. Feeling sick and humid day aren't compatible."
    },
    {
        "Example Number": 156,
        "Gorgias Code": ":- dynamic team_project_due/0, new_neighbor/0, afternoon/0, cloudy_day/0, urgent_deadline/0.\nrule(r1, go_to(theater), []) :- team_project_due.\nrule(r2, join_fitness_class, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- team_project_due, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- team_project_due, new_neighbor, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- urgent_deadline.\nrule(c5, prefer(c4, c3), []).\ncomplement(join_fitness_class, go_to(theater)).\ncomplement(go_to(theater), join_fitness_class).\ncomplement(team_project_due, new_neighbor).\ncomplement(new_neighbor, team_project_due).",
        "NL Translation": "If I have a team project due, I go to the theater. If I have a new neighbor, I join a fitness class. However, if I have a team project due and a new neighbor, I prefer to go to the theater. But if I also have a party invitation, I prefer to join the fitness class. I can't at the same time go to the theater and join the fitness class. Team project due and new neighbor aren't compatible. If it is afternoon, I prefer to go to the theater over joining a fitness class. If it is a cloudy day, I prefer to go to the theater over joining a fitness class. If there is an urgent deadline, I prefer to follow the preference of going to the theater over the preference of joining a fitness class. I can't at the same time go to the theater and join the fitness class."
    },
    {
        "Example Number": 110,
        "Gorgias Code": ":- dynamic night_time/0, community_event/0.\nrule(r1, schedule_meeting, []) :- night_time.\nrule(r2, rent_car, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- night_time, community_event.\nrule(p2, prefer(r2, r1), []) :- night_time, community_event, new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, schedule_meeting).\ncomplement(schedule_meeting, rent_car).\ncomplement(night_time, community_event).\ncomplement(community_event, night_time).",
        "NL Translation": "If it's night time, I schedule a meeting. If there is a community event, I rent a car. But if it is night time and there is a community event, I prefer to schedule a meeting. However, if there is also a new neighbor, I prefer to rent a car. I can't at the same time schedule a meeting and rent a car. Night time and community event aren't compatible."
    },
    {
        "Example Number": 191,
        "Gorgias Code": ":- dynamic networking_event/0.\nrule(r1, schedule_meeting, []) :- networking_event.\nrule(r2, go_to(cinema), []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(cinema), schedule_meeting).\ncomplement(schedule_meeting, go_to(cinema)).",
        "NL Translation": "If there is a networking event, I can either schedule a meeting or go to the cinema. I generally prefer to schedule a meeting. I can't at the same time schedule a meeting and go to the cinema."
    },
    {
        "Example Number": 33,
        "Gorgias Code": ":- dynamic morning_rush/0, concert_nearby/0, relationship_break/0, hail_storm/0, invitation_from_friend/0.\nrule(r1, clean_house, []) :- morning_rush.\nrule(r2, swim_session, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- morning_rush, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- morning_rush, concert_nearby, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(swim_session, clean_house).\ncomplement(clean_house, swim_session).\ncomplement(morning_rush, concert_nearby).\ncomplement(concert_nearby, morning_rush).",
        "NL Translation": "If there is a morning rush, I clean the house. If there is a concert nearby, I have a swim session. However, if there is a morning rush and a concert nearby, I prefer to clean the house. If it is also the holiday season, I prefer to have a swim session. I can't at the same time clean the house and have a swim session. If there is a relationship break, I prefer to clean the house over having a swim session. If there is a hail storm, I also prefer to clean the house over having a swim session. If I receive an invitation from a friend, I prefer cleaning the house over the previous preference. I can't at the same time have a swim session and clean the house. Morning rush and concert nearby aren't compatible."
    },
    {
        "Example Number": 272,
        "Gorgias Code": ":- dynamic urgent_deadline/0, new_restaurant_to_try/0, hot_day/0, wedding_anniversary/0, discount_on_flight/0.\nrule(r1, ride_bike, []) :- urgent_deadline.\nrule(r2, call_client, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, new_restaurant_to_try, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- discount_on_flight.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, ride_bike).\ncomplement(ride_bike, call_client).\ncomplement(urgent_deadline, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, urgent_deadline).",
        "NL Translation": "If there is an urgent deadline, I ride my bike. If there is a new restaurant to try, I call the client. If there is an urgent deadline and a new restaurant to try, I prefer to ride my bike. However, if there is also an expensive event, I prefer to call the client. I can't at the same time ride my bike and call the client. If it is a hot day, I prefer to ride my bike. If it is a wedding anniversary, I prefer to ride my bike. If there is a discount on a flight, I prefer to call the client. I prefer to call the client if there is a discount on a flight and it is a hot day."
    },
    {
        "Example Number": 133,
        "Gorgias Code": ":- dynamic birthday_today/0, early_morning/0, new_neighbor/0, urgent_deadline/0, wedding_anniversary/0.\nrule(r1, attend_meeting, []) :- birthday_today.\nrule(r2, order_taxi, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- birthday_today, early_morning.\nrule(p2, prefer(r2, r1), []) :- birthday_today, early_morning, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(order_taxi, attend_meeting).\ncomplement(attend_meeting, order_taxi).\ncomplement(birthday_today, early_morning).\ncomplement(early_morning, birthday_today).",
        "NL Translation": "If it is my birthday today, I attend a meeting. If it is early morning, I order a taxi. If it is my birthday today and it is early morning, I prefer to attend the meeting. However, if it is also moving house, I prefer to order a taxi. I can't at the same time attend a meeting and order a taxi. If I have a new neighbor, I prefer to attend the meeting. If I have an urgent deadline, I prefer to attend the meeting. If it is my wedding anniversary, I prefer to attend the meeting over ordering a taxi. If it is my wedding anniversary, I prefer to attend the meeting over the preference of having a new neighbor. Birthday today and early morning are not compatible."
    },
    {
        "Example Number": 173,
        "Gorgias Code": ":- dynamic project_extension/0, team_project_due/0.\nrule(r1, book_flight, []) :- project_extension.\nrule(r2, go_to(park), []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- project_extension, team_project_due.\nrule(p2, prefer(r2, r1), []) :- project_extension, team_project_due, weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(park), book_flight).\ncomplement(book_flight, go_to(park)).\ncomplement(project_extension, team_project_due).\ncomplement(team_project_due, project_extension).",
        "NL Translation": "If I have a project extension, I book a flight. If I have a team project due, I go to the park. But if I have a project extension and a team project due, I prefer to book a flight. However, if it is also a weekend, I prefer to go to the park. I can't at the same time book a flight and go to the park. Project extension and team project due aren't compatible."
    },
    {
        "Example Number": 5,
        "Gorgias Code": ":- dynamic night_time/0, team_project_due/0, dusk/0.\nrule(r1, morning_run, []) :- night_time.\nrule(r2, organize_workspace, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- night_time, team_project_due.\nrule(p2, prefer(r2, r1), []) :- night_time, team_project_due, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, morning_run).\ncomplement(morning_run, organize_workspace).\ncomplement(night_time, team_project_due).\ncomplement(team_project_due, night_time).",
        "NL Translation": "I can either go for a morning run or organize my workspace. If it is night time, I can go for a morning run. If there is a team project due, I can organize my workspace. If it is night time and there is a team project due, I prefer to go for a morning run. However, if there is also a job interview, I prefer to organize my workspace. I can't at the same time go for a morning run and organize my workspace. Night time and team project due aren't compatible. If it is dusk, I prefer to go for a morning run over organizing my workspace."
    },
    {
        "Example Number": 21,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, birthday_today/0.\nrule(r1, go_to(cinema), []) :- invitation_from_friend.\nrule(r2, drive_car, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, birthday_today.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, birthday_today, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, go_to(cinema)).\ncomplement(go_to(cinema), drive_car).\ncomplement(invitation_from_friend, birthday_today).\ncomplement(birthday_today, invitation_from_friend).",
        "NL Translation": "If I have an invitation from a friend, I go to the cinema. If it is my birthday today, I drive the car. But if I have an invitation from a friend and it is my birthday today, I prefer to go to the cinema. However, if it is also a rainy day, I prefer to drive the car. I can't at the same time go to the cinema and drive the car. An invitation from a friend and my birthday today aren't compatible."
    },
    {
        "Example Number": 104,
        "Gorgias Code": ":- dynamic unexpected_guest/0, hail_storm/0\nrule(r1, attend_concert, []) :- unexpected_guest.\nrule(r2, rent_car, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, attend_concert).\ncomplement(attend_concert, rent_car).",
        "NL Translation": "If there is an unexpected guest, I can either attend the concert or rent a car. Generally, I prefer to attend the concert, but if there is a hail storm, I prefer to rent a car. I can't at the same time attend the concert and rent a car."
    },
    {
        "Example Number": 242,
        "Gorgias Code": ":- dynamic low_budget/0, client_feedback/0, early_morning/0\nrule(r1, finish_report, []) :- low_budget.\nrule(r2, update_project_plan, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, finish_report).\ncomplement(finish_report, update_project_plan).",
        "NL Translation": "If I have a low budget, I can either finish the report or update the project plan. Generally, I prefer to finish the report but if I have client feedback, I prefer to update the project plan. However, if it is early morning, I prefer to finish the report. I can't at the same time finish the report and update the project plan."
    },
    {
        "Example Number": 211,
        "Gorgias Code": ":- dynamic family_emergency/0, invitation_from_friend/0, school_reunion/0.\nrule(r1, schedule_meeting, []) :- family_emergency.\nrule(r2, call_client, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- family_emergency, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- family_emergency, invitation_from_friend, new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, schedule_meeting).\ncomplement(schedule_meeting, call_client).\ncomplement(family_emergency, invitation_from_friend).\ncomplement(invitation_from_friend, family_emergency).",
        "NL Translation": "If there is a family emergency, I schedule a meeting. If I have an invitation from a friend, I call the client. However, if there is a family emergency and I have an invitation from a friend, I prefer to schedule a meeting. If there is a family emergency, an invitation from a friend, and a new neighbor, I prefer to call the client. I can't at the same time schedule a meeting and call the client. Family emergency and invitation from a friend aren't compatible. If there is a school reunion, I prefer to schedule a meeting over calling the client."
    },
    {
        "Example Number": 10,
        "Gorgias Code": ":- dynamic hot_day/0, new_neighbor/0, school_reunion/0.\nrule(r1, cycle_to_work, []) :- hot_day.\nrule(r2, go_to_bar, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- hot_day, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- hot_day, new_neighbor, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to_bar, cycle_to_work).\ncomplement(cycle_to_work, go_to_bar).\ncomplement(hot_day, new_neighbor).\ncomplement(new_neighbor, hot_day).",
        "NL Translation": "On a hot day, I can either cycle to work or go to the bar. If I have a hot day and a new neighbor, I prefer to cycle to work. However, if I have a hot day, a new neighbor, and a relationship break, I prefer to go to the bar. I can't at the same time go to the bar and cycle to work. A hot day and a new neighbor are not compatible. If there is a school reunion, I prefer to cycle to work over going to the bar."
    },
    {
        "Example Number": 57,
        "Gorgias Code": ":- dynamic hot_day/0, hail_storm/0, moving_house/0, school_reunion/0, birthday_today/0.\nrule(r1, morning_run, []) :- hot_day.\nrule(r2, read_book, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- hot_day, hail_storm.\nrule(p2, prefer(r2, r1), []) :- hot_day, hail_storm, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(read_book, morning_run).\ncomplement(morning_run, read_book).\ncomplement(hot_day, hail_storm).\ncomplement(hail_storm, hot_day).",
        "NL Translation": "If it is a hot day, I go for a morning run. If there is a hail storm, I read a book. But if it is both a hot day and a hail storm, I prefer to go for a morning run. However, if there is also an unexpected guest, I prefer to read a book. I can't at the same time go for a morning run and read a book. A hot day and a hail storm aren't compatible. If I am moving house, I prefer to read a book. If there is a school reunion, I prefer to go for a morning run. If it is my birthday today, I prefer to read a book. If it is my birthday today and I am moving house, I prefer to read a book."
    },
    {
        "Example Number": 243,
        "Gorgias Code": ":- dynamic moving_house/0, lunch_time/0, subscription_due/0.\nrule(r1, water_plants, []) :- moving_house.\nrule(r2, cook_dinner, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- moving_house, lunch_time.\nrule(p2, prefer(r2, r1), []) :- moving_house, lunch_time, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, water_plants).\ncomplement(water_plants, cook_dinner).\ncomplement(moving_house, lunch_time).\ncomplement(lunch_time, moving_house).",
        "NL Translation": "If I am moving house, I water the plants. If it is lunch time, I cook dinner. But if I am moving house and it is lunch time, I prefer to water the plants. However, if I am moving house, it is lunch time, and I have extended work hours, I prefer to cook dinner. I can't at the same time water the plants and cook dinner. Moving house and lunch time aren't compatible. If my subscription is due, I prefer to water the plants over cooking dinner."
    },
    {
        "Example Number": 180,
        "Gorgias Code": ":- dynamic good_weather/0, important_meeting/0\nrule(r1, buy_groceries, []) :- good_weather.\nrule(r2, order_taxi, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, buy_groceries).\ncomplement(buy_groceries, order_taxi).",
        "NL Translation": "If the weather is good, I can either buy groceries or order a taxi. Generally, I prefer to buy groceries, but if there is an important meeting, I prefer to order a taxi. I can't at the same time buy groceries and order a taxi."
    },
    {
        "Example Number": 144,
        "Gorgias Code": ":- dynamic community_event/0, unexpected_guest/0, afternoon/0, concert_nearby/0, moving_house/0.\nrule(r1, prepare_report, []) :- community_event.\nrule(r2, organize_workspace, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- community_event, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- community_event, unexpected_guest, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(organize_workspace, prepare_report).\ncomplement(prepare_report, organize_workspace).\ncomplement(community_event, unexpected_guest).\ncomplement(unexpected_guest, community_event).",
        "NL Translation": "If there is a community event, I prepare a report. If there is an unexpected guest, I organize my workspace. However, if there is both a community event and an unexpected guest, I prefer to prepare the report. If there is a community event, an unexpected guest, and a new restaurant to try, I prefer to organize my workspace. I can't at the same time prepare a report and organize my workspace. Community events and unexpected guests aren't compatible. If it is afternoon, I prefer to prepare the report over organizing my workspace. If there is a concert nearby, I prefer to prepare the report over organizing my workspace. If I prefer to organize my workspace over preparing a report, then I prefer the first option over the second. If I am moving house, I prefer the first option over the second. If I prefer the first option over the second, then I prefer the fourth option over the third."
    },
    {
        "Example Number": 169,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, go_shopping, []) :- good_investment.\nrule(r2, clean_house, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(clean_house, go_shopping).\ncomplement(go_shopping, clean_house).",
        "NL Translation": "If I have a good investment, I can either go shopping or clean the house. Generally, I prefer to go shopping. I can't at the same time go shopping and clean the house."
    },
    {
        "Example Number": 56,
        "Gorgias Code": ":- dynamic medical_appointment/0, family_emergency/0, job_interview/0, boss_in_office/0, humid_day/0.\nrule(r1, travel_abroad, []) :- medical_appointment.\nrule(r2, book_ride_share, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, family_emergency.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, family_emergency, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- humid_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_ride_share, travel_abroad).\ncomplement(travel_abroad, book_ride_share).\ncomplement(medical_appointment, family_emergency).\ncomplement(family_emergency, medical_appointment).",
        "NL Translation": "If I have a medical appointment, I travel abroad. If there is a family emergency, I book a ride share. But if I have a medical appointment and a family emergency, I prefer to travel abroad. However, if there is also a snowstorm, I prefer to book a ride share. I can't at the same time travel abroad and book a ride share. Medical appointment and family emergency aren't compatible. If I have a job interview, I prefer to travel abroad over booking a ride share. If my boss is in the office, I prefer to travel abroad over booking a ride share. If it is a humid day, I prefer to book a ride share over traveling abroad."
    },
    {
        "Example Number": 45,
        "Gorgias Code": ":- dynamic party_invitation/0, school_reunion/0\nrule(r1, cycling_session, []) :- party_invitation.\nrule(r2, visit_museum, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, cycling_session).\ncomplement(cycling_session, visit_museum).",
        "NL Translation": "I can either go cycling or visit the museum if I have a party invitation. Generally, I prefer to go cycling. However, if there is a school reunion, I prefer to visit the museum. I can't at the same time go cycling and visit the museum."
    },
    {
        "Example Number": 41,
        "Gorgias Code": ":- dynamic moving_house/0, windy_day/0.\nrule(r1, use_subway, []) :- moving_house.\nrule(r2, take_bus, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- moving_house, windy_day.\nrule(p2, prefer(r2, r1), []) :- moving_house, windy_day, low_budget.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_bus, use_subway).\ncomplement(use_subway, take_bus).\ncomplement(moving_house, windy_day).\ncomplement(windy_day, moving_house).",
        "NL Translation": "If I am moving house, I use the subway. If it is a windy day, I take the bus. But if I am moving house and it is a windy day, I prefer to use the subway. However, if I am also on a low budget, I prefer to take the bus. I can't at the same time take the bus and use the subway. Moving house and windy day aren't compatible."
    },
    {
        "Example Number": 60,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, ride_bike, []) :- job_interview.\nrule(r2, go_to(restaurant), []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(restaurant), ride_bike).\ncomplement(ride_bike, go_to(restaurant)).",
        "NL Translation": "If I have a job interview, I can either ride a bike or go to the restaurant. Generally, I prefer to ride a bike. I can't at the same time ride a bike and go to the restaurant."
    },
    {
        "Example Number": 167,
        "Gorgias Code": ":- dynamic rainy_day/0, project_extension/0.\nrule(r1, update_project_plan, []) :- rainy_day.\nrule(r2, attend_workshop, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- rainy_day, project_extension.\nrule(p2, prefer(r2, r1), []) :- rainy_day, project_extension, moving_house.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, update_project_plan).\ncomplement(update_project_plan, attend_workshop).\ncomplement(rainy_day, project_extension).\ncomplement(project_extension, rainy_day).",
        "NL Translation": "If it is a rainy day, I update the project plan. If there is a project extension, I attend the workshop. However, if it is a rainy day and there is a project extension, I prefer to update the project plan. But if I am also moving house, I prefer to attend the workshop. I can't at the same time update the project plan and attend the workshop. Rainy day and project extension aren't compatible."
    },
    {
        "Example Number": 224,
        "Gorgias Code": ":- dynamic tax_refund/0, invitation_from_friend/0, community_event/0, family_gathering/0, dusk/0.\nrule(r1, attend_workshop, []) :- tax_refund.\nrule(r2, go_gym, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- tax_refund, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- tax_refund, invitation_from_friend, windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- dusk.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_gym, attend_workshop).\ncomplement(attend_workshop, go_gym).\ncomplement(tax_refund, invitation_from_friend).\ncomplement(invitation_from_friend, tax_refund).",
        "NL Translation": "I can either attend a workshop or go to the gym. If I have a tax refund, I can attend the workshop. If I have an invitation from a friend, I can go to the gym. If I have a tax refund and an invitation from a friend, I prefer to attend the workshop. However, if I also have a windy day, I prefer to go to the gym. I can't at the same time attend a workshop and go to the gym. If there is a community event, I prefer to attend the workshop over going to the gym. If there is a family gathering, I prefer to attend the workshop over going to the gym. If it is dusk, I prefer to attend the workshop over the community event. I can't at the same time attend a workshop and have a community event. Tax refund and invitation from a friend aren't compatible."
    },
    {
        "Example Number": 226,
        "Gorgias Code": ":- dynamic extended_work_hours/0, dusk/0.\nrule(r1, explore_city, []) :- extended_work_hours.\nrule(r2, join_fitness_class, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, dusk.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, dusk, good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, explore_city).\ncomplement(explore_city, join_fitness_class).\ncomplement(extended_work_hours, dusk).\ncomplement(dusk, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I explore the city. If it's dusk, I join a fitness class. But if I have extended work hours and it's dusk, I prefer to explore the city. However, if it's also good weather, I prefer to join the fitness class. I can't at the same time explore the city and join a fitness class. Extended work hours and dusk aren't compatible."
    },
    {
        "Example Number": 141,
        "Gorgias Code": ":- dynamic deadline_missed/0, cloudy_day/0, medical_appointment/0.\nrule(r1, drive_car, []) :- deadline_missed.\nrule(r2, take_bus, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, cloudy_day, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, drive_car).\ncomplement(drive_car, take_bus).\ncomplement(deadline_missed, cloudy_day).\ncomplement(cloudy_day, deadline_missed).",
        "NL Translation": "I have either missed a deadline or it's a cloudy day. If I have missed a deadline, I can either drive my car or take the bus. If it's a cloudy day, I can take the bus or drive my car. However, if I have missed a deadline and it's a cloudy day, I prefer to drive my car. If there is an urgent deadline, I prefer to take the bus instead. If I have a medical appointment, I prefer to drive my car rather than take the bus. I can't at the same time drive my car and take the bus. Missing a deadline and a cloudy day are not compatible."
    },
    {
        "Example Number": 139,
        "Gorgias Code": ":- dynamic deadline_missed/0, networking_event/0, night_time/0\nrule(r1, schedule_meeting, []) :- deadline_missed.\nrule(r2, go_to(cinema), []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(cinema), schedule_meeting).\ncomplement(schedule_meeting, go_to(cinema)).",
        "NL Translation": "I can either schedule a meeting or go to the cinema if a deadline has been missed. Generally, I prefer to schedule a meeting. However, if there is a networking event, I prefer to go to the cinema. Additionally, I prefer to schedule a meeting if it is night time. I can't at the same time schedule a meeting and go to the cinema."
    },
    {
        "Example Number": 134,
        "Gorgias Code": ":- dynamic expensive_event/0, unexpected_guest/0\nrule(r1, finish_report, []) :- expensive_event.\nrule(r2, morning_run, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\ncomplement(morning_run, finish_report).\ncomplement(finish_report, morning_run).",
        "NL Translation": "If there is an expensive event, I can either finish the report or go for a morning run. Generally, I prefer to finish the report, but if there is an unexpected guest, I prefer to go for a morning run. I can't at the same time finish the report and go for a morning run."
    },
    {
        "Example Number": 189,
        "Gorgias Code": ":- dynamic good_weather/0, night_time/0, subscription_due/0\nrule(r1, read_book, []) :- good_weather.\nrule(r2, make_coffee, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, read_book).\ncomplement(read_book, make_coffee).",
        "NL Translation": "If the weather is good, I can either read a book or make coffee. Generally, I prefer to read a book but if it is night time, I prefer to make coffee. However, if my subscription is due, I prefer to read a book. I can't at the same time read a book and make coffee."
    },
    {
        "Example Number": 183,
        "Gorgias Code": ":- dynamic early_morning/0, invitation_from_friend/0, tax_refund/0, feeling_sick/0, discount_on_flight/0.\nrule(r1, visit_family, []) :- early_morning.\nrule(r2, take_bus, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- early_morning, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- early_morning, invitation_from_friend, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- discount_on_flight.\nrule(c5, prefer(c4, c3), []).\ncomplement(take_bus, visit_family).\ncomplement(visit_family, take_bus).\ncomplement(early_morning, invitation_from_friend).\ncomplement(invitation_from_friend, early_morning).",
        "NL Translation": "If it is early morning, I visit family. If I have an invitation from a friend, I take the bus. However, if it is early morning and I have an invitation from a friend, I prefer to visit family. If it is early morning, I have an invitation from a friend, and there is a snowstorm, I prefer to take the bus. If I have a tax refund, I prefer to visit family over taking the bus. If I feel sick, I prefer to visit family over taking the bus. If I have a discount on a flight, I prefer to take the bus over visiting family. I can't at the same time visit family and take the bus. Early morning and an invitation from a friend aren't compatible."
    },
    {
        "Example Number": 172,
        "Gorgias Code": ":- dynamic good_investment/0, early_morning/0.\nrule(r1, ride_bike, []) :- good_investment.\nrule(r2, take_picnic, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- good_investment, early_morning.\nrule(p2, prefer(r2, r1), []) :- good_investment, early_morning, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, ride_bike).\ncomplement(ride_bike, take_picnic).\ncomplement(good_investment, early_morning).\ncomplement(early_morning, good_investment).",
        "NL Translation": "If I have a good investment, I ride my bike. If it's early morning, I take a picnic. But if I have a good investment and it's early morning, I prefer to ride my bike. However, if it's also lunchtime, I prefer to take a picnic. I can't at the same time ride my bike and take a picnic. Good investment and early morning aren't compatible."
    },
    {
        "Example Number": 223,
        "Gorgias Code": ":- dynamic deadline_missed/0, feeling_sick/0\nrule(r1, make_coffee, []) :- deadline_missed.\nrule(r2, call_client, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(call_client, make_coffee).\ncomplement(make_coffee, call_client).",
        "NL Translation": "If I have missed a deadline, I can either make coffee or call the client. Generally, I prefer to make coffee. However, if I am feeling sick, I prefer to call the client. I can't at the same time make coffee and call the client."
    },
    {
        "Example Number": 113,
        "Gorgias Code": ":- dynamic feeling_sick/0, expensive_event/0.\nrule(r1, prepare_report, []) :- feeling_sick.\nrule(r2, give_presentation, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, expensive_event.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, expensive_event, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(give_presentation, prepare_report).\ncomplement(prepare_report, give_presentation).\ncomplement(feeling_sick, expensive_event).\ncomplement(expensive_event, feeling_sick).",
        "NL Translation": "If I am feeling sick, I prepare a report. If there is an expensive event, I give a presentation. But if I am feeling sick and there is an expensive event, I prefer to prepare the report. However, if I am feeling sick and there is an expensive event with a discount on the flight, I prefer to give the presentation. I can't at the same time prepare a report and give a presentation. Feeling sick and an expensive event aren't compatible."
    },
    {
        "Example Number": 206,
        "Gorgias Code": ":- dynamic family_emergency/0, concert_nearby/0.\nrule(r1, attend_meeting, []) :- family_emergency.\nrule(r2, use_subway, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- family_emergency, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- family_emergency, concert_nearby, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, attend_meeting).\ncomplement(attend_meeting, use_subway).\ncomplement(family_emergency, concert_nearby).\ncomplement(concert_nearby, family_emergency).",
        "NL Translation": "If there is a family emergency, I attend the meeting. If there is a concert nearby, I use the subway. But if there is a family emergency and a concert nearby, I prefer to attend the meeting. However, if it is also lunch time, I prefer to use the subway. I can't at the same time attend the meeting and use the subway. Family emergency and concert nearby aren't compatible."
    },
    {
        "Example Number": 295,
        "Gorgias Code": ":- dynamic deadline_missed/0, new_restaurant_to_try/0.\nrule(r1, drive_car, []) :- deadline_missed.\nrule(r2, visit_family, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, new_restaurant_to_try, dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, drive_car).\ncomplement(drive_car, visit_family).\ncomplement(deadline_missed, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, deadline_missed).",
        "NL Translation": "If I have missed a deadline, I drive the car. If there is a new restaurant to try, I visit family. But if I have missed a deadline and there is a new restaurant to try, I prefer to drive the car. However, if it is also dusk, I prefer to visit family. I can't at the same time drive the car and visit family. Missing a deadline and trying a new restaurant aren't compatible."
    },
    {
        "Example Number": 48,
        "Gorgias Code": ":- dynamic boss_in_office/0, hail_storm/0.\nrule(r1, organize_workspace, []) :- boss_in_office.\nrule(r2, go_to(restaurant), []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, hail_storm.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, hail_storm, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(restaurant), organize_workspace).\ncomplement(organize_workspace, go_to(restaurant)).\ncomplement(boss_in_office, hail_storm).\ncomplement(hail_storm, boss_in_office).",
        "NL Translation": "If my boss is in the office, I organize my workspace. If there is a hail storm, I go to the restaurant. However, if my boss is in the office and there is a hail storm, I prefer to organize my workspace. But if it is also a rainy day, I prefer to go to the restaurant. I can't at the same time go to the restaurant and organize my workspace. My boss being in the office and a hail storm aren't compatible."
    },
    {
        "Example Number": 136,
        "Gorgias Code": ":- dynamic client_feedback/0, afternoon/0, networking_event/0\nrule(r1, read_book, []) :- client_feedback.\nrule(r2, ride_bike, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(ride_bike, read_book).\ncomplement(read_book, ride_bike).",
        "NL Translation": "I can either read a book or ride a bike if I have client feedback. Generally, I prefer to read a book but if it is the afternoon, I prefer to ride a bike. I can't at the same time read a book and ride a bike. If there is a networking event, I prefer to read a book over riding a bike."
    },
    {
        "Example Number": 66,
        "Gorgias Code": ":- dynamic holiday_season/0, networking_event/0.\nrule(r1, plan_meals, []) :- holiday_season.\nrule(r2, review_documents, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- holiday_season, networking_event.\nrule(p2, prefer(r2, r1), []) :- holiday_season, networking_event, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(review_documents, plan_meals).\ncomplement(plan_meals, review_documents).\ncomplement(holiday_season, networking_event).\ncomplement(networking_event, holiday_season).",
        "NL Translation": "If it is holiday season, I plan meals. If there is a networking event, I review documents. But if it is holiday season and there is a networking event, I prefer to plan meals. However, if there is also a medical appointment, I prefer to review documents. I can't at the same time plan meals and review documents. Holiday season and networking event aren't compatible."
    },
    {
        "Example Number": 159,
        "Gorgias Code": ":- dynamic extended_work_hours/0, urgent_deadline/0\nrule(r1, give_presentation, []) :- extended_work_hours.\nrule(r2, organize_workspace, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, give_presentation).\ncomplement(give_presentation, organize_workspace).",
        "NL Translation": "If I have extended work hours, I can either give a presentation or organize my workspace. Generally, I prefer to give a presentation, but if there is an urgent deadline, I prefer to organize my workspace. I can't at the same time give a presentation and organize my workspace."
    },
    {
        "Example Number": 234,
        "Gorgias Code": ":- dynamic deadline_missed/0, vacation_planned/0, early_morning/0, unexpected_guest/0, job_interview/0.\nrule(r1, cycling_session, []) :- deadline_missed.\nrule(r2, call_client, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, vacation_planned, snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- job_interview.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, cycling_session).\ncomplement(cycling_session, call_client).\ncomplement(deadline_missed, vacation_planned).\ncomplement(vacation_planned, deadline_missed).",
        "NL Translation": "I can either have a cycling session or call a client. If I have missed a deadline, I can have a cycling session. If I have a vacation planned, I can call a client. If I have missed a deadline and have a vacation planned, I prefer to have a cycling session. However, if there is also a snowstorm, I prefer to call the client. Generally, I prefer to call the client but if it is early morning, I prefer to have a cycling session. If there is an unexpected guest, I prefer to have a cycling session but generally prefer to call the client. If I have a job interview, I prefer to have a cycling session over calling the client. I can't at the same time have a cycling session and call a client. Missing a deadline and having a vacation planned are not compatible."
    },
    {
        "Example Number": 200,
        "Gorgias Code": ":- dynamic financial_aid/0, friend_in_town/0, night_time/0\nrule(r1, buy_groceries, []) :- financial_aid.\nrule(r2, swim_session, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, buy_groceries).\ncomplement(buy_groceries, swim_session).",
        "NL Translation": "I can either buy groceries or have a swim session if I have financial aid. Generally, I prefer to buy groceries. However, if a friend is in town, I prefer to have a swim session. If it's night time, I prefer to buy groceries. I can't at the same time buy groceries and have a swim session."
    },
    {
        "Example Number": 277,
        "Gorgias Code": ":- dynamic unexpected_expense/0, feeling_sick/0, friend_in_town/0, urgent_deadline/0, party_invitation/0.\nrule(r1, schedule_meeting, []) :- unexpected_expense.\nrule(r2, go_to(cinema), []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, feeling_sick.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, feeling_sick, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- party_invitation.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(cinema), schedule_meeting).\ncomplement(schedule_meeting, go_to(cinema)).\ncomplement(unexpected_expense, feeling_sick).\ncomplement(feeling_sick, unexpected_expense).",
        "NL Translation": "I can either schedule a meeting or go to the cinema. If there is an unexpected expense, I can schedule a meeting. If I am feeling sick, I can go to the cinema. Generally, if there is an unexpected expense and I am feeling sick, I prefer to schedule a meeting. However, if it is good weather, I prefer to go to the cinema instead. If I have a friend in town, I prefer to schedule a meeting over going to the cinema. If I have an urgent deadline, I also prefer to schedule a meeting over going to the cinema. If I have a party invitation, I prefer to schedule a meeting over going to the cinema. I can't at the same time schedule a meeting and go to the cinema. Unexpected expense and feeling sick aren't compatible."
    },
    {
        "Example Number": 188,
        "Gorgias Code": ":- dynamic job_interview/0, party_invitation/0, hail_storm/0\nrule(r1, make_coffee, []) :- job_interview.\nrule(r2, buy_groceries, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, make_coffee).\ncomplement(make_coffee, buy_groceries).",
        "NL Translation": "I can either make coffee or buy groceries if I have a job interview. Generally, I prefer to make coffee but if I have a party invitation, I prefer to buy groceries. However, if there is a hail storm, I prefer to make coffee. I can't at the same time make coffee and buy groceries."
    },
    {
        "Example Number": 49,
        "Gorgias Code": ":- dynamic weekend/0, subscription_due/0, family_emergency/0.\nrule(r1, visit_doctor, []) :- weekend.\nrule(r2, attend_concert, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- weekend, subscription_due.\nrule(p2, prefer(r2, r1), []) :- weekend, subscription_due, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, visit_doctor).\ncomplement(visit_doctor, attend_concert).\ncomplement(weekend, subscription_due).\ncomplement(subscription_due, weekend).",
        "NL Translation": "If it is the weekend, I visit the doctor. If the subscription is due, I attend the concert. However, if it is the weekend and the subscription is due, I prefer to visit the doctor. If it is also the weekend, the subscription is due, and it is the morning rush, I prefer to attend the concert. I can't at the same time attend the concert and visit the doctor. The weekend and subscription due are incompatible. If there is a family emergency, I prefer to visit the doctor over attending the concert. I can't at the same time prefer visiting the doctor and attending the concert."
    },
    {
        "Example Number": 177,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, school_reunion/0, financial_aid/0.\nrule(r1, visit_doctor, []) :- new_restaurant_to_try.\nrule(r2, give_presentation, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, school_reunion.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, school_reunion, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(give_presentation, visit_doctor).\ncomplement(visit_doctor, give_presentation).\ncomplement(new_restaurant_to_try, school_reunion).\ncomplement(school_reunion, new_restaurant_to_try).",
        "NL Translation": "I have a new restaurant to try and a school reunion. If I have a new restaurant to try, I visit the doctor. If there is a school reunion, I give a presentation. If I have a new restaurant to try and a school reunion, I prefer to visit the doctor. However, if I also have a morning rush, I prefer to give the presentation. I can't at the same time give a presentation and visit the doctor. The new restaurant to try and the school reunion aren't compatible. If I have financial aid, I prefer to visit the doctor over giving the presentation."
    },
    {
        "Example Number": 267,
        "Gorgias Code": ":- dynamic friend_in_town/0, client_feedback/0.\nrule(r1, update_project_plan, []) :- friend_in_town.\nrule(r2, visit_doctor, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, client_feedback.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, client_feedback, feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, update_project_plan).\ncomplement(update_project_plan, visit_doctor).\ncomplement(friend_in_town, client_feedback).\ncomplement(client_feedback, friend_in_town).",
        "NL Translation": "If my friend is in town, I update the project plan. If I have client feedback, I visit the doctor. But if my friend is in town and I have client feedback, I prefer to update the project plan. However, if my friend is in town and I have client feedback and I am feeling sick, I prefer to visit the doctor. I can't at the same time update the project plan and visit the doctor. Friend in town and client feedback aren't compatible."
    },
    {
        "Example Number": 264,
        "Gorgias Code": ":- dynamic vacation_planned/0, client_feedback/0.\nrule(r1, yoga_session, []) :- vacation_planned.\nrule(r2, cycling_session, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, client_feedback.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, client_feedback, job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycling_session, yoga_session).\ncomplement(yoga_session, cycling_session).\ncomplement(vacation_planned, client_feedback).\ncomplement(client_feedback, vacation_planned).",
        "NL Translation": "If I have a vacation planned, I have a yoga session. If I have client feedback, I have a cycling session. But if I have a vacation planned and client feedback, I prefer to have a yoga session. However, if I also have a job interview, I prefer to have a cycling session. I can't at the same time have a yoga session and a cycling session. Vacation planned and client feedback aren't compatible."
    },
    {
        "Example Number": 158,
        "Gorgias Code": ":- dynamic project_extension/0, cloudy_day/0.\nrule(r1, evening_walk, []) :- project_extension.\nrule(r2, book_ride_share, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []) :- project_extension, cloudy_day.\nrule(p2, prefer(r2, r1), []) :- project_extension, cloudy_day, family_emergency.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, evening_walk).\ncomplement(evening_walk, book_ride_share).\ncomplement(project_extension, cloudy_day).\ncomplement(cloudy_day, project_extension).",
        "NL Translation": "If I have a project extension, I go for an evening walk. If it's a cloudy day, I book a ride share. But if I have a project extension and it's a cloudy day, I prefer to go for an evening walk. However, if it's also a family emergency, I prefer to book a ride share. I can't at the same time go for an evening walk and book a ride share. Project extension and cloudy day aren't compatible."
    },
    {
        "Example Number": 201,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, good_weather/0.\nrule(r1, use_subway, []) :- new_restaurant_to_try.\nrule(r2, book_ride_share, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, good_weather.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, good_weather, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, use_subway).\ncomplement(use_subway, book_ride_share).\ncomplement(new_restaurant_to_try, good_weather).\ncomplement(good_weather, new_restaurant_to_try).",
        "NL Translation": "If I have a new restaurant to try, I use the subway. If the weather is good, I book a ride share. But if I have a new restaurant to try and the weather is good, I prefer to use the subway. However, if there is also a hail storm, I prefer to book a ride share. I can't at the same time use the subway and book a ride share. New restaurant to try and good weather aren't compatible."
    },
    {
        "Example Number": 46,
        "Gorgias Code": ":- dynamic birthday_today/0, windy_day/0, invitation_from_friend/0.\nrule(r1, rent_car, []) :- birthday_today.\nrule(r2, plan_meals, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- birthday_today, windy_day.\nrule(p2, prefer(r2, r1), []) :- birthday_today, windy_day, rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, rent_car).\ncomplement(rent_car, plan_meals).\ncomplement(birthday_today, windy_day).\ncomplement(windy_day, birthday_today).",
        "NL Translation": "If it is my birthday today, I can rent a car. If it is a windy day, I can plan meals. If it is both my birthday today and a windy day, I prefer to rent a car. However, if it is also a rainy day, I prefer to plan meals. I can't at the same time rent a car and plan meals. My birthday today and a windy day aren't compatible. If I have an invitation from a friend, I prefer to rent a car over planning meals. If I prefer to plan meals over renting a car, I prefer the latter."
    },
    {
        "Example Number": 249,
        "Gorgias Code": ":- dynamic early_morning/0, got_bonus/0, family_gathering/0, unexpected_guest/0, good_weather/0.\nrule(r1, go_gym, []) :- early_morning.\nrule(r2, prepare_report, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- early_morning, got_bonus.\nrule(p2, prefer(r2, r1), []) :- early_morning, got_bonus, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- good_weather.\nrule(c5, prefer(c4, c3), []).\ncomplement(prepare_report, go_gym).\ncomplement(go_gym, prepare_report).\ncomplement(early_morning, got_bonus).\ncomplement(got_bonus, early_morning).",
        "NL Translation": "I can either go to the gym or prepare a report. If it is early morning, I can go to the gym. If I got a bonus, I can prepare a report. If it is early morning and I got a bonus, I prefer to go to the gym. However, if it is early morning, I got a bonus, and I have a vacation planned, I prefer to prepare the report. I can't at the same time go to the gym and prepare the report. If there is a family gathering, I prefer to prepare the report over going to the gym. If there is an unexpected guest, I prefer to prepare the report over going to the gym. If the weather is good, I prefer to prepare the report over the previous preference."
    },
    {
        "Example Number": 106,
        "Gorgias Code": ":- dynamic hot_day/0, afternoon/0, morning_rush/0, holiday_season/0, expensive_event/0.\nrule(r1, take_picnic, []) :- hot_day.\nrule(r2, book_flight, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- hot_day, afternoon.\nrule(p2, prefer(r2, r1), []) :- hot_day, afternoon, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- expensive_event.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, take_picnic).\ncomplement(take_picnic, book_flight).\ncomplement(hot_day, afternoon).\ncomplement(afternoon, hot_day).",
        "NL Translation": "If it is a hot day, I can take a picnic. If it is afternoon, I can book a flight. If it is a hot day and afternoon, I prefer to take a picnic. However, if it is a hot day, afternoon, and today is my birthday, I prefer to book a flight. If it is morning rush, I prefer to book a flight over taking a picnic. If it is holiday season, I prefer to book a flight over taking a picnic. If there is an expensive event, I prefer taking a picnic over booking a flight. I can't at the same time take a picnic and book a flight. Hot day and afternoon aren't compatible."
    },
    {
        "Example Number": 225,
        "Gorgias Code": ":- dynamic family_emergency/0, networking_event/0, got_bonus/0\nrule(r1, schedule_meeting, []) :- family_emergency.\nrule(r2, explore_city, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, schedule_meeting).\ncomplement(schedule_meeting, explore_city).",
        "NL Translation": "If there is a family emergency, I can either schedule a meeting or explore the city. Generally, I prefer to schedule a meeting. However, if there is a networking event, I prefer to explore the city. If I got a bonus, I prefer to schedule a meeting. I can't at the same time schedule a meeting and explore the city."
    },
    {
        "Example Number": 78,
        "Gorgias Code": ":- dynamic cloudy_day/0, team_project_due/0.\nrule(r1, reply_emails, []) :- cloudy_day.\nrule(r2, attend_workshop, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, team_project_due.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, team_project_due, deadline_missed.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, reply_emails).\ncomplement(reply_emails, attend_workshop).\ncomplement(cloudy_day, team_project_due).\ncomplement(team_project_due, cloudy_day).",
        "NL Translation": "If it is a cloudy day, I reply to emails. If there is a team project due, I attend a workshop. However, if it is both a cloudy day and there is a team project due, I prefer to reply to emails. If I have missed a deadline, I prefer to attend the workshop. I can't at the same time reply to emails and attend a workshop. Cloudy day and team project due aren't compatible."
    },
    {
        "Example Number": 197,
        "Gorgias Code": ":- dynamic feeling_sick/0, job_interview/0, windy_day/0.\nrule(r1, take_picnic, []) :- feeling_sick.\nrule(r2, pay_bills, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, job_interview.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, job_interview, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, take_picnic).\ncomplement(take_picnic, pay_bills).\ncomplement(feeling_sick, job_interview).\ncomplement(job_interview, feeling_sick).",
        "NL Translation": "If I feel sick, I take a picnic. If I have a job interview, I pay bills. But if I feel sick and have a job interview, I prefer to take a picnic. However, if it is also good weather, I prefer to pay bills. I can't at the same time take a picnic and pay bills. Feeling sick and having a job interview aren't compatible. If it is a windy day, I prefer to take a picnic over paying bills."
    },
    {
        "Example Number": 50,
        "Gorgias Code": ":- dynamic unexpected_expense/0, birthday_today/0, dusk/0.\nrule(r1, do_laundry, []) :- unexpected_expense.\nrule(r2, pay_bills, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, birthday_today.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, birthday_today, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- dusk.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, do_laundry).\ncomplement(do_laundry, pay_bills).\ncomplement(unexpected_expense, birthday_today).\ncomplement(birthday_today, unexpected_expense).",
        "NL Translation": "If there is an unexpected expense, I do laundry. If today is my birthday, I pay bills. But if there is an unexpected expense and today is my birthday, I prefer to do laundry. However, if it is also the holiday season, I prefer to pay bills. I can't at the same time do laundry and pay bills. Unexpected expense and birthday today aren't compatible. If it is dusk, I prefer to do laundry over paying bills."
    },
    {
        "Example Number": 181,
        "Gorgias Code": ":- dynamic early_morning/0.\nrule(r1, take_train, []) :- early_morning.\nrule(r2, cycle_to_work, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycle_to_work, take_train).\ncomplement(take_train, cycle_to_work).",
        "NL Translation": "If it is early morning, I can either take the train or cycle to work. Generally, I prefer to take the train. I can't at the same time take the train and cycle to work."
    },
    {
        "Example Number": 271,
        "Gorgias Code": ":- dynamic snowstorm/0, low_budget/0\nrule(r1, book_flight, []) :- snowstorm.\nrule(r2, clean_house, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\ncomplement(clean_house, book_flight).\ncomplement(book_flight, clean_house).",
        "NL Translation": "If there is a snowstorm, I can either book a flight or clean the house. Generally, I prefer to book a flight but if I have a low budget, I prefer to clean the house. I can't at the same time book a flight and clean the house."
    },
    {
        "Example Number": 108,
        "Gorgias Code": ":- dynamic lunch_time/0, wedding_anniversary/0\nrule(r1, pay_bills, []) :- lunch_time.\nrule(r2, prepare_report, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, pay_bills).\ncomplement(pay_bills, prepare_report).",
        "NL Translation": "It is lunch time, and I can either pay bills or prepare a report. Generally, I prefer to pay bills, but if it is my wedding anniversary, I prefer to prepare a report. I can't at the same time pay bills and prepare a report."
    },
    {
        "Example Number": 79,
        "Gorgias Code": ":- dynamic moving_house/0, humid_day/0\nrule(r1, take_picnic, []) :- moving_house.\nrule(r2, go_gym, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, take_picnic).\ncomplement(take_picnic, go_gym).",
        "NL Translation": "I can either take a picnic or go to the gym. Generally, I prefer to take a picnic. However, if it is a humid day, I prefer to go to the gym. I can't at the same time take a picnic and go to the gym."
    },
    {
        "Example Number": 229,
        "Gorgias Code": ":- dynamic birthday_today/0, humid_day/0.\nrule(r1, water_plants, []) :- birthday_today.\nrule(r2, attend_workshop, []) :- humid_day.\nrule(p1, prefer(r1, r2), []) :- birthday_today, humid_day.\nrule(p2, prefer(r2, r1), []) :- birthday_today, humid_day, afternoon.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, water_plants).\ncomplement(water_plants, attend_workshop).\ncomplement(birthday_today, humid_day).\ncomplement(humid_day, birthday_today).",
        "NL Translation": "If it is my birthday today, I water the plants. If it is a humid day, I attend the workshop. But if it is my birthday today and it is a humid day, I prefer to water the plants. However, if it is also the afternoon, I prefer to attend the workshop. I can't at the same time water the plants and attend the workshop. My birthday today and a humid day aren't compatible."
    },
    {
        "Example Number": 168,
        "Gorgias Code": ":- dynamic moving_house/0.\nrule(r1, join_fitness_class, []) :- moving_house.\nrule(r2, meditate, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\ncomplement(meditate, join_fitness_class).\ncomplement(join_fitness_class, meditate).",
        "NL Translation": "If I am moving house, I can either join a fitness class or meditate. Generally, I prefer to join a fitness class. I can't at the same time join a fitness class and meditate."
    },
    {
        "Example Number": 71,
        "Gorgias Code": ":- dynamic afternoon/0.\nrule(r1, plan_meals, []) :- afternoon.\nrule(r2, visit_family, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_family, plan_meals).\ncomplement(plan_meals, visit_family).",
        "NL Translation": "In the afternoon, I can either plan meals or visit family. Generally, I prefer to plan meals. I can't at the same time plan meals and visit family."
    },
    {
        "Example Number": 233,
        "Gorgias Code": ":- dynamic feeling_sick/0, afternoon/0, cloudy_day/0\nrule(r1, yoga_session, []) :- feeling_sick.\nrule(r2, join_fitness_class, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, yoga_session).\ncomplement(yoga_session, join_fitness_class).",
        "NL Translation": "I can either attend a yoga session or join a fitness class if I am feeling sick. Generally, I prefer to attend a yoga session. However, in the afternoon, I prefer to join a fitness class. If it is a cloudy day, I prefer to attend a yoga session. I can't at the same time attend a yoga session and join a fitness class."
    },
    {
        "Example Number": 262,
        "Gorgias Code": ":- dynamic weekend/0, good_weather/0, moving_house/0\nrule(r1, host_dinner_party, []) :- weekend.\nrule(r2, pay_bills, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(pay_bills, host_dinner_party).\ncomplement(host_dinner_party, pay_bills).",
        "NL Translation": "I can either host a dinner party or pay bills on the weekend. Generally, I prefer to host a dinner party, but if the weather is good, I prefer to pay bills. However, if I am moving house, I prefer to host a dinner party. I can't at the same time host a dinner party and pay bills."
    },
    {
        "Example Number": 288,
        "Gorgias Code": ":- dynamic client_feedback/0, school_reunion/0, party_invitation/0.\nrule(r1, book_ride_share, []) :- client_feedback.\nrule(r2, cycling_session, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- client_feedback, school_reunion.\nrule(p2, prefer(r2, r1), []) :- client_feedback, school_reunion, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, book_ride_share).\ncomplement(book_ride_share, cycling_session).\ncomplement(client_feedback, school_reunion).\ncomplement(school_reunion, client_feedback).",
        "NL Translation": "If there is client feedback, I book a ride share. If there is a school reunion, I have a cycling session. But if there is client feedback and a school reunion, I prefer to book a ride share. However, if there is also an unexpected guest, I prefer to have a cycling session. I can't at the same time book a ride share and have a cycling session. Client feedback and school reunion aren't compatible. If there is a party invitation, I prefer to book a ride share over having a cycling session."
    },
    {
        "Example Number": 112,
        "Gorgias Code": ":- dynamic project_extension/0, concert_nearby/0\nrule(r1, morning_run, []) :- project_extension.\nrule(r2, join_fitness_class, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, morning_run).\ncomplement(morning_run, join_fitness_class).",
        "NL Translation": "If I have a project extension, I can either go for a morning run or join a fitness class. Generally, I prefer to go for a morning run, but if there is a concert nearby, I prefer to join the fitness class. I can't at the same time go for a morning run and join a fitness class."
    },
    {
        "Example Number": 84,
        "Gorgias Code": ":- dynamic subscription_due/0.\nrule(r1, go_to(restaurant), []) :- subscription_due.\nrule(r2, organize_workspace, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(organize_workspace, go_to(restaurant)).\ncomplement(go_to(restaurant), organize_workspace).",
        "NL Translation": "If my subscription is due, I can either go to the restaurant or organize my workspace. Generally, I prefer to go to the restaurant. I can't at the same time go to the restaurant and organize my workspace."
    },
    {
        "Example Number": 44,
        "Gorgias Code": ":- dynamic weekend/0, project_extension/0, important_meeting/0\nrule(r1, attend_workshop, []) :- weekend.\nrule(r2, go_gym, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, attend_workshop).\ncomplement(attend_workshop, go_gym).",
        "NL Translation": "If it is the weekend, I can either attend a workshop or go to the gym. Generally, I prefer to attend the workshop. However, if there is a project extension, I prefer to go to the gym. I can't at the same time go to the gym and attend a workshop. If there is an important meeting, I prefer to attend the workshop over going to the gym."
    },
    {
        "Example Number": 207,
        "Gorgias Code": ":- dynamic urgent_deadline/0.\nrule(r1, make_coffee, []) :- urgent_deadline.\nrule(r2, review_documents, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []).\ncomplement(review_documents, make_coffee).\ncomplement(make_coffee, review_documents).",
        "NL Translation": "If there is an urgent deadline, I can either make coffee or review documents. Generally, I prefer to make coffee. I can't at the same time make coffee and review documents."
    },
    {
        "Example Number": 95,
        "Gorgias Code": ":- dynamic subscription_due/0, discount_on_flight/0\nrule(r1, read_book, []) :- subscription_due.\nrule(r2, attend_workshop, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, read_book).\ncomplement(read_book, attend_workshop).",
        "NL Translation": "If my subscription is due, I can either read a book or attend a workshop. Generally, I prefer to read a book, but if there is a discount on a flight, I prefer to attend the workshop. I can't at the same time read a book and attend a workshop."
    },
    {
        "Example Number": 3,
        "Gorgias Code": ":- dynamic urgent_deadline/0, morning_rush/0.\nrule(r1, take_picnic, []) :- urgent_deadline.\nrule(r2, visit_family, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, morning_rush.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, morning_rush, subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_family, take_picnic).\ncomplement(take_picnic, visit_family).\ncomplement(urgent_deadline, morning_rush).\ncomplement(morning_rush, urgent_deadline).",
        "NL Translation": "If I have an urgent deadline, I take a picnic. If it's morning rush, I visit family. But if I have an urgent deadline and it's morning rush, I prefer to take a picnic. However, if it's also a subscription due, I prefer to visit family. I can't at the same time take a picnic and visit family. Urgent deadline and morning rush aren't compatible."
    },
    {
        "Example Number": 256,
        "Gorgias Code": ":- dynamic expensive_event/0, wedding_anniversary/0, family_emergency/0\nrule(r1, read_book, []) :- expensive_event.\nrule(r2, book_ride_share, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, read_book).\ncomplement(read_book, book_ride_share).",
        "NL Translation": "If there is an expensive event, I can either read a book or book a ride share. Generally, I prefer to read a book but if it is my wedding anniversary, I prefer to book a ride share. However, if there is a family emergency, I prefer to read a book. I can't at the same time read a book and book a ride share."
    },
    {
        "Example Number": 121,
        "Gorgias Code": ":- dynamic good_investment/0, unexpected_guest/0, cloudy_day/0.\nrule(r1, join_fitness_class, []) :- good_investment.\nrule(r2, go_shopping, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- good_investment, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- good_investment, unexpected_guest, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, join_fitness_class).\ncomplement(join_fitness_class, go_shopping).\ncomplement(good_investment, unexpected_guest).\ncomplement(unexpected_guest, good_investment).",
        "NL Translation": "If I have a good investment, I join a fitness class. If there is an unexpected guest, I go shopping. But if I have a good investment and there is an unexpected guest, I prefer to join the fitness class. However, if it is also the holiday season, I prefer to go shopping. I can't at the same time go shopping and join a fitness class. Good investment and unexpected guest aren't compatible. If it is a cloudy day, I prefer to go shopping over joining a fitness class."
    },
    {
        "Example Number": 7,
        "Gorgias Code": ":- dynamic got_bonus/0, deadline_missed/0, feeling_sick/0\nrule(r1, take_bus, []) :- got_bonus.\nrule(r2, take_picnic, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, take_bus).\ncomplement(take_bus, take_picnic).",
        "NL Translation": "If I got a bonus, I can either take the bus or take a picnic. Generally, I prefer to take the bus but if I missed a deadline, I prefer to take a picnic. However, if I feel sick, I prefer to take the bus. I can't at the same time take the bus and take a picnic."
    },
    {
        "Example Number": 300,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, family_emergency/0, invitation_from_friend/0.\nrule(r1, finish_report, []) :- wedding_anniversary.\nrule(r2, visit_doctor, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- wedding_anniversary, family_emergency.\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary, family_emergency, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- invitation_from_friend.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, finish_report).\ncomplement(finish_report, visit_doctor).\ncomplement(wedding_anniversary, family_emergency).\ncomplement(family_emergency, wedding_anniversary).",
        "NL Translation": "If it is my wedding anniversary, I finish the report. If there is a family emergency, I visit the doctor. However, if it is my wedding anniversary and there is a family emergency, I prefer to finish the report. But if it is also a team project due, I prefer to visit the doctor. I can't at the same time finish the report and visit the doctor. My wedding anniversary and family emergency aren't compatible. If I receive an invitation from a friend, I prefer to finish the report over visiting the doctor."
    },
    {
        "Example Number": 203,
        "Gorgias Code": ":- dynamic financial_aid/0, unexpected_expense/0, hail_storm/0, team_project_due/0, birthday_today/0.\nrule(r1, cycle_to_work, []) :- financial_aid.\nrule(r2, travel_abroad, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- financial_aid, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- financial_aid, unexpected_expense, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(travel_abroad, cycle_to_work).\ncomplement(cycle_to_work, travel_abroad).\ncomplement(financial_aid, unexpected_expense).\ncomplement(unexpected_expense, financial_aid).",
        "NL Translation": "If I have financial aid, I cycle to work. If there is an unexpected expense, I travel abroad. However, if I have both financial aid and an unexpected expense, I prefer to cycle to work. But if I also have a new restaurant to try, I prefer to travel abroad. I can't at the same time cycle to work and travel abroad. If there is a hail storm, I prefer to cycle to work over traveling abroad. If I have a team project due, I prefer to cycle to work over traveling abroad. If today is my birthday, I prefer the situation where I have a new restaurant to try over the one where there is a hail storm. I can't at the same time have financial aid and an unexpected expense."
    },
    {
        "Example Number": 254,
        "Gorgias Code": ":- dynamic vacation_planned/0.\nrule(r1, go_to_bar, []) :- vacation_planned.\nrule(r2, meditate, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\ncomplement(meditate, go_to_bar).\ncomplement(go_to_bar, meditate).",
        "NL Translation": "If I have a vacation planned, I can either go to the bar or meditate. Generally, I prefer to go to the bar. I can't at the same time go to the bar and meditate."
    },
    {
        "Example Number": 266,
        "Gorgias Code": ":- dynamic expensive_event/0, boss_in_office/0, subscription_due/0.\nrule(r1, take_bus, []) :- expensive_event.\nrule(r2, morning_run, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- expensive_event, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- expensive_event, boss_in_office, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, take_bus).\ncomplement(take_bus, morning_run).\ncomplement(expensive_event, boss_in_office).\ncomplement(boss_in_office, expensive_event).",
        "NL Translation": "If there is an expensive event, I take the bus. If my boss is in the office, I go for a morning run. However, if there is an expensive event and my boss is in the office, I prefer to take the bus. If there is an expensive event, my boss is in the office, and I got a bonus, I prefer to go for a morning run. I can't at the same time take the bus and go for a morning run. The expensive event and the boss being in the office are not compatible. If there is a subscription due, I prefer to take the bus over going for a morning run."
    },
    {
        "Example Number": 208,
        "Gorgias Code": ":- dynamic hail_storm/0, extended_work_hours/0, discount_on_flight/0\nrule(r1, read_book, []) :- hail_storm.\nrule(r2, clean_house, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(clean_house, read_book).\ncomplement(read_book, clean_house).",
        "NL Translation": "If there is a hail storm, I can either read a book or clean the house. Generally, I prefer to read a book but if I have extended work hours, I prefer to clean the house. I can't at the same time read a book and clean the house. If there is a discount on a flight, I prefer to read a book."
    },
    {
        "Example Number": 222,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, make_coffee, []) :- good_investment.\nrule(r2, drive_car, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(drive_car, make_coffee).\ncomplement(make_coffee, drive_car).",
        "NL Translation": "I can either make coffee or drive the car. If it is a good investment, I can do either. Generally, I prefer to make coffee. I can't at the same time make coffee and drive the car."
    },
    {
        "Example Number": 246,
        "Gorgias Code": ":- dynamic concert_nearby/0, afternoon/0.\nrule(r1, give_presentation, []) :- concert_nearby.\nrule(r2, drive_car, []) :- afternoon.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, afternoon.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, afternoon, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, give_presentation).\ncomplement(give_presentation, drive_car).\ncomplement(concert_nearby, afternoon).\ncomplement(afternoon, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I give a presentation. If it is afternoon, I drive the car. But if there is a concert nearby and it is afternoon, I prefer to give a presentation. However, if it is also lunch time, I prefer to drive the car. I can't at the same time give a presentation and drive the car. Concert nearby and afternoon aren't compatible."
    },
    {
        "Example Number": 178,
        "Gorgias Code": ":- dynamic cloudy_day/0, rainy_day/0, good_weather/0, medical_appointment/0, windy_day/0.\nrule(r1, buy_groceries, []) :- cloudy_day.\nrule(r2, clean_house, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, rainy_day.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, rainy_day, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(clean_house, buy_groceries).\ncomplement(buy_groceries, clean_house).\ncomplement(cloudy_day, rainy_day).\ncomplement(rainy_day, cloudy_day).",
        "NL Translation": "If it is a cloudy day, I buy groceries. If it is a rainy day, I clean the house. However, if it is both a cloudy day and a rainy day, I prefer to buy groceries. If it is also a rainy day and I have financial aid, I prefer to clean the house. I can't at the same time buy groceries and clean the house. A cloudy day and a rainy day aren't compatible. If the weather is good, I prefer to buy groceries over cleaning the house. If I have a medical appointment, I prefer to clean the house over buying groceries. If it is a windy day, I prefer to clean the house over the previous preference."
    },
    {
        "Example Number": 16,
        "Gorgias Code": ":- dynamic low_budget/0.\nrule(r1, swim_session, []) :- low_budget.\nrule(r2, order_taxi, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\ncomplement(order_taxi, swim_session).\ncomplement(swim_session, order_taxi).",
        "NL Translation": "If I have a low budget, I can either have a swim session or order a taxi. Generally, I prefer to have a swim session. I can't at the same time have a swim session and order a taxi."
    },
    {
        "Example Number": 284,
        "Gorgias Code": ":- dynamic afternoon/0, unexpected_expense/0, client_feedback/0.\nrule(r1, read_book, []) :- afternoon.\nrule(r2, morning_run, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- afternoon, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- afternoon, unexpected_expense, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, read_book).\ncomplement(read_book, morning_run).\ncomplement(afternoon, unexpected_expense).\ncomplement(unexpected_expense, afternoon).",
        "NL Translation": "In the afternoon, I can either read a book or go for a morning run if there is an unexpected expense. If it is the afternoon and there is an unexpected expense, I prefer to read a book. However, if it is also a morning rush, I prefer to go for a morning run. I can't at the same time read a book and go for a morning run. The afternoon and unexpected expense aren't compatible. If I receive client feedback, I prefer to read a book over going for a morning run."
    },
    {
        "Example Number": 145,
        "Gorgias Code": ":- dynamic unexpected_guest/0, weekend/0\nrule(r1, book_ride_share, []) :- unexpected_guest.\nrule(r2, yoga_session, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\ncomplement(yoga_session, book_ride_share).\ncomplement(book_ride_share, yoga_session).",
        "NL Translation": "If there is an unexpected guest, I can either book a ride share or attend a yoga session. Generally, I prefer to book a ride share but if it is the weekend, I prefer to attend the yoga session. I can't at the same time book a ride share and attend a yoga session."
    },
    {
        "Example Number": 14,
        "Gorgias Code": ":- dynamic relationship_break/0, weekend/0, holiday_season/0.\nrule(r1, order_taxi, []) :- relationship_break.\nrule(r2, read_book, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- relationship_break, weekend.\nrule(p2, prefer(r2, r1), []) :- relationship_break, weekend, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\ncomplement(read_book, order_taxi).\ncomplement(order_taxi, read_book).\ncomplement(relationship_break, weekend).\ncomplement(weekend, relationship_break).",
        "NL Translation": "If there is a relationship break, I order a taxi. If it is the weekend, I read a book. However, if there is a relationship break and it is the weekend, I prefer to order a taxi. But if a friend is in town, I prefer to read a book. I can't at the same time order a taxi and read a book. Relationship break and weekend aren't compatible. If it is the holiday season, I prefer to order a taxi over reading a book. I can't at the same time prefer reading a book over ordering a taxi."
    },
    {
        "Example Number": 2,
        "Gorgias Code": ":- dynamic networking_event/0, important_meeting/0, afternoon/0.\nrule(r1, travel_abroad, []) :- networking_event.\nrule(r2, finish_report, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- networking_event, important_meeting.\nrule(p2, prefer(r2, r1), []) :- networking_event, important_meeting, job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, travel_abroad).\ncomplement(travel_abroad, finish_report).\ncomplement(networking_event, important_meeting).\ncomplement(important_meeting, networking_event).",
        "NL Translation": "If there is a networking event, I travel abroad. If there is an important meeting, I finish the report. If there is a networking event and an important meeting, I prefer to travel abroad. However, if there is also a job interview, I prefer to finish the report. I can't at the same time travel abroad and finish the report. Networking event and important meeting aren't compatible. If it is afternoon, I prefer to finish the report over traveling abroad."
    },
    {
        "Example Number": 26,
        "Gorgias Code": ":- dynamic client_feedback/0.\nrule(r1, schedule_meeting, []) :- client_feedback.\nrule(r2, plan_meals, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\ncomplement(plan_meals, schedule_meeting).\ncomplement(schedule_meeting, plan_meals).",
        "NL Translation": "If I have client feedback, I can either schedule a meeting or plan meals. Generally, I prefer to schedule a meeting. I can't at the same time schedule a meeting and plan meals."
    },
    {
        "Example Number": 122,
        "Gorgias Code": ":- dynamic hail_storm/0.\nrule(r1, visit_family, []) :- hail_storm.\nrule(r2, rent_car, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\ncomplement(rent_car, visit_family).\ncomplement(visit_family, rent_car).",
        "NL Translation": "If there is a hail storm, I can either visit family or rent a car. I generally prefer to visit family. I can't at the same time visit family and rent a car."
    },
    {
        "Example Number": 101,
        "Gorgias Code": ":- dynamic hot_day/0, new_neighbor/0\nrule(r1, prepare_report, []) :- hot_day.\nrule(r2, pay_bills, []) :- hot_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, prepare_report).\ncomplement(prepare_report, pay_bills).",
        "NL Translation": "If it is a hot day, I can either prepare a report or pay bills. Generally, I prefer to prepare the report, but if there is a new neighbor, I prefer to pay the bills. I can't at the same time prepare the report and pay the bills."
    },
    {
        "Example Number": 199,
        "Gorgias Code": ":- dynamic windy_day/0, discount_on_flight/0\nrule(r1, yoga_session, []) :- windy_day.\nrule(r2, clean_house, []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(clean_house, yoga_session).\ncomplement(yoga_session, clean_house).",
        "NL Translation": "If it is a windy day, I can either have a yoga session or clean the house. Generally, I prefer to have a yoga session, but if there is a discount on a flight, I prefer to clean the house. I can't at the same time have a yoga session and clean the house."
    },
    {
        "Example Number": 107,
        "Gorgias Code": ":- dynamic relationship_break/0, humid_day/0, new_neighbor/0\nrule(r1, go_to(theater), []) :- relationship_break.\nrule(r2, plan_meals, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, go_to(theater)).\ncomplement(go_to(theater), plan_meals).",
        "NL Translation": "If there is a relationship break, I can either go to the theater or plan meals. Generally, I prefer to go to the theater but if it is a humid day I prefer to plan meals. However, if there is a new neighbor I prefer to go to the theater. I can't at the same time go to the theater and plan meals."
    },
    {
        "Example Number": 126,
        "Gorgias Code": ":- dynamic humid_day/0, weekend/0, important_meeting/0.\nrule(r1, attend_workshop, []) :- humid_day.\nrule(r2, cook_dinner, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- humid_day, weekend.\nrule(p2, prefer(r2, r1), []) :- humid_day, weekend, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, attend_workshop).\ncomplement(attend_workshop, cook_dinner).\ncomplement(humid_day, weekend).\ncomplement(weekend, humid_day).",
        "NL Translation": "If it is a humid day, I attend the workshop. If it is the weekend, I cook dinner. But if it is both a humid day and the weekend, I prefer to attend the workshop. However, if it is also the holiday season, I prefer to cook dinner. I can't at the same time attend the workshop and cook dinner. Humid day and weekend aren't compatible. If there is an important meeting, I prefer to attend the workshop over cooking dinner."
    },
    {
        "Example Number": 215,
        "Gorgias Code": ":- dynamic night_time/0.\nrule(r1, cook_dinner, []) :- night_time.\nrule(r2, clean_house, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(clean_house, cook_dinner).\ncomplement(cook_dinner, clean_house).",
        "NL Translation": "If it's night time, I can either cook dinner or clean the house. Generally, I prefer to cook dinner. I can't at the same time cook dinner and clean the house."
    },
    {
        "Example Number": 296,
        "Gorgias Code": ":- dynamic unexpected_expense/0, unexpected_guest/0, hot_day/0\nrule(r1, reply_emails, []) :- unexpected_expense.\nrule(r2, plan_meals, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, reply_emails).\ncomplement(reply_emails, plan_meals).",
        "NL Translation": "If I have an unexpected expense, I can either reply to emails or plan meals. Generally, I prefer to reply to emails but if there is an unexpected guest, I prefer to plan meals. If it is a hot day, I prefer to reply to emails. I can't at the same time reply to emails and plan meals."
    },
    {
        "Example Number": 157,
        "Gorgias Code": ":- dynamic weekend/0, low_budget/0\nrule(r1, go_gym, []) :- weekend.\nrule(r2, meditate, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, go_gym).\ncomplement(go_gym, meditate).",
        "NL Translation": "If it is the weekend, I can either go to the gym or meditate. Generally, I prefer to go to the gym but if I have a low budget, I prefer to meditate. I can't at the same time go to the gym and meditate."
    },
    {
        "Example Number": 198,
        "Gorgias Code": ":- dynamic morning_rush/0, low_budget/0.\nrule(r1, join_fitness_class, []) :- morning_rush.\nrule(r2, book_ride_share, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- morning_rush, low_budget.\nrule(p2, prefer(r2, r1), []) :- morning_rush, low_budget, good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, join_fitness_class).\ncomplement(join_fitness_class, book_ride_share).\ncomplement(morning_rush, low_budget).\ncomplement(low_budget, morning_rush).",
        "NL Translation": "If it is morning rush, I can join a fitness class. If I have a low budget, I can book a ride share. However, if it is morning rush and I have a low budget, I prefer to join the fitness class. But if it is also good weather, I prefer to book a ride share. I can't at the same time join a fitness class and book a ride share. Morning rush and low budget aren't compatible."
    },
    {
        "Example Number": 162,
        "Gorgias Code": ":- dynamic party_invitation/0, snowstorm/0.\nrule(r1, clean_house, []) :- party_invitation.\nrule(r2, cycle_to_work, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- party_invitation, snowstorm.\nrule(p2, prefer(r2, r1), []) :- party_invitation, snowstorm, community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, clean_house).\ncomplement(clean_house, cycle_to_work).\ncomplement(party_invitation, snowstorm).\ncomplement(snowstorm, party_invitation).",
        "NL Translation": "If I have a party invitation, I clean the house. If there is a snowstorm, I cycle to work. But if I have a party invitation and there is a snowstorm, I prefer to clean the house. However, if there is also a community event, I prefer to cycle to work. I can't at the same time clean the house and cycle to work. Party invitation and snowstorm aren't compatible."
    },
    {
        "Example Number": 31,
        "Gorgias Code": ":- dynamic snowstorm/0, financial_aid/0, low_budget/0\nrule(r1, go_to(cinema), []) :- snowstorm.\nrule(r2, order_taxi, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, go_to(cinema)).\ncomplement(go_to(cinema), order_taxi).",
        "NL Translation": "If there is a snowstorm, I can either go to the cinema or order a taxi. Generally, I prefer to go to the cinema, but if I have financial aid, I prefer to order a taxi. However, if I have a low budget, I prefer to go to the cinema. I can't at the same time go to the cinema and order a taxi."
    },
    {
        "Example Number": 30,
        "Gorgias Code": ":- dynamic project_extension/0, relationship_break/0\nrule(r1, update_project_plan, []) :- project_extension.\nrule(r2, call_client, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\ncomplement(call_client, update_project_plan).\ncomplement(update_project_plan, call_client).",
        "NL Translation": "If I have a project extension, I can either update the project plan or call the client. Generally, I prefer to update the project plan, but if there is a relationship break, I prefer to call the client. I can't at the same time update the project plan and call the client."
    },
    {
        "Example Number": 184,
        "Gorgias Code": ":- dynamic boss_in_office/0, unexpected_expense/0, expensive_event/0.\nrule(r1, attend_concert, []) :- boss_in_office.\nrule(r2, finish_report, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, unexpected_expense, subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(finish_report, attend_concert).\ncomplement(attend_concert, finish_report).\ncomplement(boss_in_office, unexpected_expense).\ncomplement(unexpected_expense, boss_in_office).",
        "NL Translation": "I can either attend the concert or finish the report. If my boss is in the office, I can attend the concert. If there is an unexpected expense, I can finish the report. If my boss is in the office and there is an unexpected expense, I prefer to attend the concert. However, if there is also a subscription due, I prefer to finish the report. I can't at the same time attend the concert and finish the report. My boss being in the office and an unexpected expense aren't compatible. If there is an expensive event, I prefer to finish the report over attending the concert. If I prefer to finish the report over attending the concert, I prefer the first preference over the second."
    },
    {
        "Example Number": 19,
        "Gorgias Code": ":- dynamic concert_nearby/0, good_weather/0\nrule(r1, cycle_to_work, []) :- concert_nearby.\nrule(r2, visit_doctor, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, cycle_to_work).\ncomplement(cycle_to_work, visit_doctor).",
        "NL Translation": "If there is a concert nearby, I can either cycle to work or visit the doctor. Generally, I prefer to cycle to work, but if the weather is good, I prefer to visit the doctor. I can't at the same time cycle to work and visit the doctor."
    },
    {
        "Example Number": 231,
        "Gorgias Code": ":- dynamic early_morning/0, relationship_break/0\nrule(r1, visit_family, []) :- early_morning.\nrule(r2, order_taxi, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, visit_family).\ncomplement(visit_family, order_taxi).",
        "NL Translation": "If it is early morning, I can either visit family or order a taxi. Generally, I prefer to visit family, but if there is a relationship break, I prefer to order a taxi. I can't at the same time visit family and order a taxi."
    },
    {
        "Example Number": 15,
        "Gorgias Code": ":- dynamic team_project_due/0, new_restaurant_to_try/0\nrule(r1, cook_dinner, []) :- team_project_due.\nrule(r2, reply_emails, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, cook_dinner).\ncomplement(cook_dinner, reply_emails).",
        "NL Translation": "If I have a team project due, I can either cook dinner or reply to emails. Generally, I prefer to cook dinner, but if there is a new restaurant to try, I prefer to reply to emails. I can't at the same time cook dinner and reply to emails."
    },
    {
        "Example Number": 273,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, travel_abroad, []) :- job_interview.\nrule(r2, water_plants, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(water_plants, travel_abroad).\ncomplement(travel_abroad, water_plants).",
        "NL Translation": "If I have a job interview, I can either travel abroad or water the plants. Generally, I prefer to travel abroad. I can't at the same time travel abroad and water the plants."
    },
    {
        "Example Number": 35,
        "Gorgias Code": ":- dynamic urgent_deadline/0, community_event/0.\nrule(r1, go_to(cinema), []) :- urgent_deadline.\nrule(r2, cycle_to_work, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, community_event.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, community_event, afternoon.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, go_to(cinema)).\ncomplement(go_to(cinema), cycle_to_work).\ncomplement(urgent_deadline, community_event).\ncomplement(community_event, urgent_deadline).",
        "NL Translation": "If I have an urgent deadline, I go to the cinema. If there is a community event, I cycle to work. But if I have an urgent deadline and there is a community event, I prefer to go to the cinema. However, if it is also the afternoon, I prefer to cycle to work. I can't at the same time go to the cinema and cycle to work. Urgent deadline and community event aren't compatible."
    },
    {
        "Example Number": 298,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, family_emergency/0.\nrule(r1, visit_family, []) :- invitation_from_friend.\nrule(r2, water_plants, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, family_emergency.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, family_emergency, medical_appointment.\nrule(c1, prefer(p2, p1), []).\ncomplement(water_plants, visit_family).\ncomplement(visit_family, water_plants).\ncomplement(invitation_from_friend, family_emergency).\ncomplement(family_emergency, invitation_from_friend).",
        "NL Translation": "If I have an invitation from a friend, I visit family. If there is a family emergency, I water the plants. But if I have an invitation from a friend and a family emergency, I prefer to visit family. However, if I also have a medical appointment, I prefer to water the plants. I can't at the same time visit family and water the plants. Invitation from a friend and family emergency aren't compatible."
    },
    {
        "Example Number": 228,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, unexpected_expense/0, feeling_sick/0, lunch_time/0, wedding_anniversary/0.\nrule(r1, go_to(cinema), []) :- invitation_from_friend.\nrule(r2, finish_report, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, unexpected_expense, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, go_to(cinema)).\ncomplement(go_to(cinema), finish_report).\ncomplement(invitation_from_friend, unexpected_expense).\ncomplement(unexpected_expense, invitation_from_friend).",
        "NL Translation": "I can either go to the cinema or finish the report. If I have an invitation from a friend, I prefer to go to the cinema. If I have an unexpected expense, I finish the report. However, if I have both an invitation from a friend and an unexpected expense, I prefer to go to the cinema. If it's also a humid day, I prefer to finish the report. If I feel sick, I prefer to finish the report over going to the cinema. During lunch time, I prefer to finish the report over going to the cinema. If it's my wedding anniversary, I prefer to go to the cinema over finishing the report. I can't at the same time go to the cinema and finish the report. An invitation from a friend and an unexpected expense aren't compatible."
    },
    {
        "Example Number": 132,
        "Gorgias Code": ":- dynamic tax_refund/0, expensive_event/0, urgent_deadline/0, project_extension/0, important_meeting/0.\nrule(r1, take_train, []) :- tax_refund.\nrule(r2, finish_report, []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- tax_refund, expensive_event.\nrule(p2, prefer(r2, r1), []) :- tax_refund, expensive_event, night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- important_meeting.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, take_train).\ncomplement(take_train, finish_report).\ncomplement(tax_refund, expensive_event).\ncomplement(expensive_event, tax_refund).",
        "NL Translation": "I can either take the train or finish the report. If I have a tax refund, I can take the train. If there is an expensive event, I can finish the report. If I have a tax refund and there is an expensive event, I prefer to take the train. However, if I have a tax refund, an expensive event, and it is night time, I prefer to finish the report. If there is an urgent deadline, I prefer to finish the report over taking the train. If there is a project extension, I prefer to finish the report over taking the train. If there is an important meeting, I prefer to take the train over finishing the report. I can't at the same time take the train and finish the report. Tax refund and expensive event aren't compatible."
    },
    {
        "Example Number": 118,
        "Gorgias Code": ":- dynamic lunch_time/0.\nrule(r1, swim_session, []) :- lunch_time.\nrule(r2, rent_car, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(rent_car, swim_session).\ncomplement(swim_session, rent_car).",
        "NL Translation": "If it is lunch time, I can either have a swim session or rent a car. Generally, I prefer to have a swim session. I can't at the same time have a swim session and rent a car."
    },
    {
        "Example Number": 205,
        "Gorgias Code": ":- dynamic feeling_sick/0, early_morning/0.\nrule(r1, swim_session, []) :- feeling_sick.\nrule(r2, take_picnic, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, early_morning.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, early_morning, subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, swim_session).\ncomplement(swim_session, take_picnic).\ncomplement(feeling_sick, early_morning).\ncomplement(early_morning, feeling_sick).",
        "NL Translation": "If I am feeling sick, I have a swim session. If it is early morning, I take a picnic. But if I am feeling sick and it is early morning, I prefer to have a swim session. However, if my subscription is also due, I prefer to take a picnic. I can't at the same time have a swim session and take a picnic. Feeling sick and early morning aren't compatible."
    },
    {
        "Example Number": 102,
        "Gorgias Code": ":- dynamic night_time/0, new_neighbor/0, important_meeting/0\nrule(r1, review_documents, []) :- night_time.\nrule(r2, visit_doctor, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_doctor, review_documents).\ncomplement(review_documents, visit_doctor).",
        "NL Translation": "If it is night time, I can either review documents or visit the doctor. Generally, I prefer to review documents but if there is a new neighbor, I prefer to visit the doctor. If there is an important meeting, I prefer to review documents. I can't at the same time review documents and visit the doctor."
    },
    {
        "Example Number": 24,
        "Gorgias Code": ":- dynamic humid_day/0, windy_day/0, community_event/0.\nrule(r1, meditate, []) :- humid_day.\nrule(r2, dispose_trash, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- humid_day, windy_day.\nrule(p2, prefer(r2, r1), []) :- humid_day, windy_day, team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(dispose_trash, meditate).\ncomplement(meditate, dispose_trash).\ncomplement(humid_day, windy_day).\ncomplement(windy_day, humid_day).",
        "NL Translation": "If it is a humid day, I meditate. If it is a windy day, I dispose of the trash. If it is both a humid day and a windy day, I prefer to meditate. However, if I have a team project due on a humid and windy day, I prefer to dispose of the trash. I can't at the same time meditate and dispose of the trash. Humid day and windy day aren't compatible. If there is a community event, I prefer to meditate over disposing of the trash. I prefer disposing of the trash over meditating if there is no community event."
    },
    {
        "Example Number": 209,
        "Gorgias Code": ":- dynamic unexpected_guest/0, family_emergency/0.\nrule(r1, take_bus, []) :- unexpected_guest.\nrule(r2, pay_bills, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, family_emergency.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, family_emergency, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, take_bus).\ncomplement(take_bus, pay_bills).\ncomplement(unexpected_guest, family_emergency).\ncomplement(family_emergency, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I take the bus. If there is a family emergency, I pay bills. But if there is both an unexpected guest and a family emergency, I prefer to take the bus. However, if it is also lunch time, I prefer to pay bills. I can't at the same time take the bus and pay bills. Unexpected guest and family emergency aren't compatible."
    },
    {
        "Example Number": 299,
        "Gorgias Code": ":- dynamic discount_on_flight/0, low_budget/0, family_gathering/0\nrule(r1, water_plants, []) :- discount_on_flight.\nrule(r2, attend_workshop, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_gathering.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, water_plants).\ncomplement(water_plants, attend_workshop).",
        "NL Translation": "If there is a discount on flights, I can either water the plants or attend a workshop. Generally, I prefer to water the plants but if I have a low budget, I prefer to attend the workshop. However, if there is a family gathering, I prefer to water the plants. I can't at the same time water the plants and attend the workshop."
    },
    {
        "Example Number": 235,
        "Gorgias Code": ":- dynamic family_gathering/0, got_bonus/0, low_budget/0\nrule(r1, explore_city, []) :- family_gathering.\nrule(r2, go_to(park), []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(park), explore_city).\ncomplement(explore_city, go_to(park)).",
        "NL Translation": "I can either explore the city or go to the park if there is a family gathering. Generally, I prefer to explore the city. However, if I got a bonus, I prefer to go to the park. If I have a low budget, I prefer to explore the city. I can't at the same time explore the city and go to the park."
    },
    {
        "Example Number": 165,
        "Gorgias Code": ":- dynamic good_weather/0, networking_event/0\nrule(r1, go_gym, []) :- good_weather.\nrule(r2, prepare_report, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, go_gym).\ncomplement(go_gym, prepare_report).",
        "NL Translation": "If the weather is good, I can either go to the gym or prepare a report. Generally, I prefer to go to the gym, but if there is a networking event, I prefer to prepare the report. I can't at the same time go to the gym and prepare a report."
    },
    {
        "Example Number": 283,
        "Gorgias Code": ":- dynamic team_project_due/0, boss_in_office/0, night_time/0.\nrule(r1, explore_city, []) :- team_project_due.\nrule(r2, use_subway, []) :- boss_in_office.\nrule(p1, prefer(r1, r2), []) :- team_project_due, boss_in_office.\nrule(p2, prefer(r2, r1), []) :- team_project_due, boss_in_office, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, explore_city).\ncomplement(explore_city, use_subway).\ncomplement(team_project_due, boss_in_office).\ncomplement(boss_in_office, team_project_due).",
        "NL Translation": "If I have a team project due, I explore the city. If my boss is in the office, I use the subway. But if I have a team project due and my boss is in the office, I prefer to explore the city. However, if it's also a good investment, I prefer to use the subway. I can't at the same time explore the city and use the subway. Team project due and boss in office aren't compatible. If it's night time, I prefer to explore the city over using the subway."
    },
    {
        "Example Number": 90,
        "Gorgias Code": ":- dynamic good_investment/0, morning_rush/0\nrule(r1, reply_emails, []) :- good_investment.\nrule(r2, explore_city, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(explore_city, reply_emails).\ncomplement(reply_emails, explore_city).",
        "NL Translation": "I can either reply to emails or explore the city. Generally, I prefer to reply to emails. However, if it is during the morning rush, I prefer to explore the city. I can't at the same time reply to emails and explore the city."
    },
    {
        "Example Number": 187,
        "Gorgias Code": ":- dynamic got_bonus/0, early_morning/0.\nrule(r1, rent_car, []) :- got_bonus.\nrule(r2, attend_workshop, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- got_bonus, early_morning.\nrule(p2, prefer(r2, r1), []) :- got_bonus, early_morning, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, rent_car).\ncomplement(rent_car, attend_workshop).\ncomplement(got_bonus, early_morning).\ncomplement(early_morning, got_bonus).",
        "NL Translation": "If I got a bonus, I rent a car. If it is early morning, I attend a workshop. But if I got a bonus and it is early morning, I prefer to rent a car. However, if it is also a rainy day, I prefer to attend the workshop. I can't at the same time rent a car and attend a workshop. Got bonus and early morning aren't compatible."
    },
    {
        "Example Number": 238,
        "Gorgias Code": ":- dynamic community_event/0, night_time/0\nrule(r1, cook_dinner, []) :- community_event.\nrule(r2, dispose_trash, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, cook_dinner).\ncomplement(cook_dinner, dispose_trash).",
        "NL Translation": "I can either cook dinner or dispose of the trash when there is a community event. Generally, I prefer to cook dinner but if it is night time, I prefer to dispose of the trash. I can't at the same time cook dinner and dispose of the trash."
    },
    {
        "Example Number": 12,
        "Gorgias Code": ":- dynamic weekend/0, new_neighbor/0, important_meeting/0\nrule(r1, morning_run, []) :- weekend.\nrule(r2, attend_concert, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_neighbor.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, morning_run).\ncomplement(morning_run, attend_concert).",
        "NL Translation": "If it is the weekend, I can either go for a morning run or attend a concert. Generally, I prefer to go for a morning run but if I have a new neighbor, I prefer to attend the concert. If I have an important meeting, I prefer to go for a morning run. I can't at the same time go for a morning run and attend a concert."
    },
    {
        "Example Number": 212,
        "Gorgias Code": ":- dynamic party_invitation/0, subscription_due/0.\nrule(r1, take_train, []) :- party_invitation.\nrule(r2, attend_meeting, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- party_invitation, subscription_due.\nrule(p2, prefer(r2, r1), []) :- party_invitation, subscription_due, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, take_train).\ncomplement(take_train, attend_meeting).\ncomplement(party_invitation, subscription_due).\ncomplement(subscription_due, party_invitation).",
        "NL Translation": "If I have a party invitation, I take the train. If my subscription is due, I attend the meeting. But if I have both a party invitation and a subscription due, I prefer to take the train. However, if it's also early morning, I prefer to attend the meeting. I can't at the same time take the train and attend the meeting. Party invitation and subscription due aren't compatible."
    },
    {
        "Example Number": 28,
        "Gorgias Code": ":- dynamic holiday_season/0, good_investment/0.\nrule(r1, join_fitness_class, []) :- holiday_season.\nrule(r2, organize_workspace, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- holiday_season, good_investment.\nrule(p2, prefer(r2, r1), []) :- holiday_season, good_investment, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, join_fitness_class).\ncomplement(join_fitness_class, organize_workspace).\ncomplement(holiday_season, good_investment).\ncomplement(good_investment, holiday_season).",
        "NL Translation": "If it is the holiday season, I join a fitness class. If it is a good investment, I organize my workspace. However, if it is both the holiday season and a good investment, I prefer to join the fitness class. But if I also receive a tax refund, I prefer to organize my workspace. I can't at the same time join a fitness class and organize my workspace. The holiday season and good investment aren't compatible."
    },
    {
        "Example Number": 236,
        "Gorgias Code": ":- dynamic holiday_season/0, good_investment/0.\nrule(r1, drive_car, []) :- holiday_season.\nrule(r2, cycling_session, []) :- good_investment.\nrule(p1, prefer(r1, r2), []) :- holiday_season, good_investment.\nrule(p2, prefer(r2, r1), []) :- holiday_season, good_investment, client_feedback.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycling_session, drive_car).\ncomplement(drive_car, cycling_session).\ncomplement(holiday_season, good_investment).\ncomplement(good_investment, holiday_season).",
        "NL Translation": "If it is the holiday season, I drive a car. If it is a good investment, I have a cycling session. However, if it is the holiday season and a good investment, I prefer to drive a car. But if there is client feedback, I prefer to have a cycling session. I can't at the same time have a cycling session and drive a car. The holiday season and good investment aren't compatible."
    },
    {
        "Example Number": 62,
        "Gorgias Code": ":- dynamic new_neighbor/0.\nrule(r1, take_picnic, []) :- new_neighbor.\nrule(r2, finish_report, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, take_picnic).\ncomplement(take_picnic, finish_report).",
        "NL Translation": "If I have a new neighbor, I can either take a picnic or finish a report. I prefer to take a picnic. I can't at the same time take a picnic and finish a report."
    },
    {
        "Example Number": 18,
        "Gorgias Code": ":- dynamic new_neighbor/0, rainy_day/0, project_extension/0.\nrule(r1, pay_bills, []) :- new_neighbor.\nrule(r2, prepare_report, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, rainy_day.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, rainy_day, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- project_extension.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, pay_bills).\ncomplement(pay_bills, prepare_report).\ncomplement(new_neighbor, rainy_day).\ncomplement(rainy_day, new_neighbor).",
        "NL Translation": "If I have a new neighbor, I pay bills. If it's a rainy day, I prepare a report. But if I have a new neighbor and it's a rainy day, I prefer to pay bills. However, if it's also morning rush, I prefer to prepare the report. I can't at the same time pay bills and prepare a report. New neighbor and rainy day aren't compatible. If I have a project extension, I prefer to pay bills over preparing a report."
    },
    {
        "Example Number": 294,
        "Gorgias Code": ":- dynamic family_emergency/0, unexpected_guest/0, windy_day/0\nrule(r1, go_to_bar, []) :- family_emergency.\nrule(r2, visit_family, []) :- family_emergency.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_guest.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_family, go_to_bar).\ncomplement(go_to_bar, visit_family).",
        "NL Translation": "If there is a family emergency, I can either go to the bar or visit family. Generally, I prefer to go to the bar, but if there is an unexpected guest, I prefer to visit family. However, if it is a windy day, I prefer to go to the bar. I can't at the same time go to the bar and visit family."
    },
    {
        "Example Number": 152,
        "Gorgias Code": ":- dynamic hail_storm/0, low_budget/0.\nrule(r1, go_to(theater), []) :- hail_storm.\nrule(r2, take_picnic, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- hail_storm, low_budget.\nrule(p2, prefer(r2, r1), []) :- hail_storm, low_budget, unexpected_guest.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_picnic, go_to(theater)).\ncomplement(go_to(theater), take_picnic).\ncomplement(hail_storm, low_budget).\ncomplement(low_budget, hail_storm).",
        "NL Translation": "If there is a hail storm, I go to the theater. If I have a low budget, I take a picnic. However, if there is a hail storm and I have a low budget, I prefer to go to the theater. But if there is also an unexpected guest, I prefer to take a picnic. I can't at the same time go to the theater and take a picnic. Hail storm and low budget aren't compatible."
    },
    {
        "Example Number": 125,
        "Gorgias Code": ":- dynamic community_event/0, moving_house/0\nrule(r1, review_documents, []) :- community_event.\nrule(r2, take_train, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- moving_house.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, review_documents).\ncomplement(review_documents, take_train).",
        "NL Translation": "If there is a community event, I can either review documents or take the train. Generally, I prefer to review documents, but if I am moving house, I prefer to take the train. I can't at the same time review documents and take the train."
    },
    {
        "Example Number": 53,
        "Gorgias Code": ":- dynamic wedding_anniversary/0.\nrule(r1, book_ride_share, []) :- wedding_anniversary.\nrule(r2, cook_dinner, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\ncomplement(cook_dinner, book_ride_share).\ncomplement(book_ride_share, cook_dinner).",
        "NL Translation": "If it is my wedding anniversary, I can either book a ride share or cook dinner. I prefer to book a ride share. I can't at the same time cook dinner and book a ride share."
    },
    {
        "Example Number": 278,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, prepare_report, []) :- team_project_due.\nrule(r2, organize_workspace, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(organize_workspace, prepare_report).\ncomplement(prepare_report, organize_workspace).",
        "NL Translation": "If I have a team project due, I can either prepare a report or organize my workspace. Generally, I prefer to prepare the report. I can't at the same time prepare a report and organize my workspace."
    },
    {
        "Example Number": 175,
        "Gorgias Code": ":- dynamic unexpected_guest/0, early_morning/0\nrule(r1, explore_city, []) :- unexpected_guest.\nrule(r2, go_gym, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, explore_city).\ncomplement(explore_city, go_gym).",
        "NL Translation": "I can either explore the city or go to the gym. Generally, I prefer to explore the city, but if it is early morning, I prefer to go to the gym. I can't at the same time explore the city and go to the gym."
    },
    {
        "Example Number": 11,
        "Gorgias Code": ":- dynamic got_bonus/0.\nrule(r1, water_plants, []) :- got_bonus.\nrule(r2, book_flight, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_flight, water_plants).\ncomplement(water_plants, book_flight).",
        "NL Translation": "If I got a bonus, I can either water the plants or book a flight. Generally, I prefer to water the plants. I can't at the same time water the plants and book a flight."
    },
    {
        "Example Number": 245,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, night_time/0\nrule(r1, explore_city, []) :- new_restaurant_to_try.\nrule(r2, join_fitness_class, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, explore_city).\ncomplement(explore_city, join_fitness_class).",
        "NL Translation": "If I have a new restaurant to try, I can either explore the city or join a fitness class. Generally, I prefer to explore the city, but if it's night time, I prefer to join the fitness class. I can't at the same time explore the city and join a fitness class."
    },
    {
        "Example Number": 85,
        "Gorgias Code": ":- dynamic networking_event/0, lunch_time/0\nrule(r1, prepare_report, []) :- networking_event.\nrule(r2, visit_doctor, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_doctor, prepare_report).\ncomplement(prepare_report, visit_doctor).",
        "NL Translation": "If there is a networking event, I can either prepare a report or visit the doctor. Generally, I prefer to prepare a report, but if it is lunch time, I prefer to visit the doctor. I can't at the same time prepare a report and visit the doctor."
    },
    {
        "Example Number": 185,
        "Gorgias Code": ":- dynamic feeling_sick/0, community_event/0, financial_aid/0\nrule(r1, reply_emails, []) :- feeling_sick.\nrule(r2, review_documents, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(review_documents, reply_emails).\ncomplement(reply_emails, review_documents).",
        "NL Translation": "If I am feeling sick, I can either reply to emails or review documents. Generally, I prefer to reply to emails. However, if there is a community event, I prefer to review documents. If I have financial aid, I prefer to reply to emails. I can't at the same time reply to emails and review documents."
    },
    {
        "Example Number": 164,
        "Gorgias Code": ":- dynamic medical_appointment/0, early_morning/0, morning_rush/0, party_invitation/0, concert_nearby/0.\nrule(r1, call_client, []) :- medical_appointment.\nrule(r2, book_flight, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, early_morning.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, early_morning, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- morning_rush.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- concert_nearby.\nrule(c5, prefer(c4, c3), []).\ncomplement(book_flight, call_client).\ncomplement(call_client, book_flight).\ncomplement(medical_appointment, early_morning).\ncomplement(early_morning, medical_appointment).",
        "NL Translation": "If I have a medical appointment, I call the client. If it is early morning, I book a flight. But if I have a medical appointment and it is early morning, I prefer to call the client. However, if it is also my wedding anniversary, I prefer to book a flight. I can't at the same time call the client and book a flight. If there is a morning rush, I prefer to call the client over booking a flight. If I have a party invitation, I also prefer to call the client over booking a flight. If there is a concert nearby, I prefer to call the client over the other options. I can't at the same time have a medical appointment and be in early morning."
    },
    {
        "Example Number": 293,
        "Gorgias Code": ":- dynamic windy_day/0, party_invitation/0, urgent_deadline/0\nrule(r1, yoga_session, []) :- windy_day.\nrule(r2, cycle_to_work, []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycle_to_work, yoga_session).\ncomplement(yoga_session, cycle_to_work).",
        "NL Translation": "If it is a windy day, I can either have a yoga session or cycle to work. Generally, I prefer to have a yoga session but if I have a party invitation, I prefer to cycle to work. However, if I have an urgent deadline, I prefer to have a yoga session. I can't at the same time have a yoga session and cycle to work."
    },
    {
        "Example Number": 61,
        "Gorgias Code": ":- dynamic vacation_planned/0, got_bonus/0.\nrule(r1, attend_meeting, []) :- vacation_planned.\nrule(r2, buy_groceries, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, got_bonus.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, got_bonus, dusk.\nrule(c1, prefer(p2, p1), []).\ncomplement(buy_groceries, attend_meeting).\ncomplement(attend_meeting, buy_groceries).\ncomplement(vacation_planned, got_bonus).\ncomplement(got_bonus, vacation_planned).",
        "NL Translation": "If I have a vacation planned, I attend the meeting. If I got a bonus, I buy groceries. But if I have a vacation planned and I got a bonus, I prefer to attend the meeting. However, if it is also dusk, I prefer to buy groceries. I can't at the same time buy groceries and attend the meeting. Vacation planned and got bonus aren't compatible."
    },
    {
        "Example Number": 116,
        "Gorgias Code": ":- dynamic subscription_due/0, holiday_season/0, urgent_deadline/0, hail_storm/0, medical_appointment/0.\nrule(r1, join_fitness_class, []) :- subscription_due.\nrule(r2, go_to_bar, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- subscription_due, holiday_season.\nrule(p2, prefer(r2, r1), []) :- subscription_due, holiday_season, project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- medical_appointment.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to_bar, join_fitness_class).\ncomplement(join_fitness_class, go_to_bar).\ncomplement(subscription_due, holiday_season).\ncomplement(holiday_season, subscription_due).",
        "NL Translation": "If I have a subscription due, I can join a fitness class. If it is holiday season, I can go to the bar. If I have a subscription due and it is holiday season, I prefer to join the fitness class. However, if I have a subscription due, it is holiday season, and I have a project extension, I prefer to go to the bar. If I have an urgent deadline, I prefer to go to the bar over joining the fitness class. If there is a hail storm, I prefer to go to the bar over joining the fitness class. If I have a medical appointment, I prefer to join the fitness class over going to the bar. I can't at the same time go to the bar and join a fitness class. Subscription due and holiday season aren't compatible."
    },
    {
        "Example Number": 91,
        "Gorgias Code": ":- dynamic community_event/0, vacation_planned/0, urgent_deadline/0, subscription_due/0, deadline_missed/0.\nrule(r1, do_laundry, []) :- community_event.\nrule(r2, host_dinner_party, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- community_event, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- community_event, vacation_planned, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- deadline_missed.\nrule(c5, prefer(c4, c3), []).\ncomplement(host_dinner_party, do_laundry).\ncomplement(do_laundry, host_dinner_party).\ncomplement(community_event, vacation_planned).\ncomplement(vacation_planned, community_event).",
        "NL Translation": "I can either do laundry or host a dinner party. If there is a community event, I can do laundry. If I have a vacation planned, I can host a dinner party. However, if there is a community event and a vacation planned, I prefer to do laundry. If there is a family emergency, I prefer to host a dinner party. Generally, I prefer to host a dinner party if there is an urgent deadline. If there is a subscription due, I also prefer to host a dinner party. If I have missed a deadline, I prefer to do laundry. I can't at the same time do laundry and host a dinner party. Community event and vacation planned aren't compatible."
    },
    {
        "Example Number": 279,
        "Gorgias Code": ":- dynamic afternoon/0, snowstorm/0, rainy_day/0\nrule(r1, go_shopping, []) :- afternoon.\nrule(r2, do_laundry, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, go_shopping).\ncomplement(go_shopping, do_laundry).",
        "NL Translation": "In the afternoon, I can either go shopping or do laundry. Generally, I prefer to go shopping, but if there is a snowstorm, I prefer to do laundry. I can't at the same time go shopping and do laundry. Additionally, if it is a rainy day, I prefer to do laundry over going shopping."
    },
    {
        "Example Number": 218,
        "Gorgias Code": ":- dynamic project_extension/0, weekend/0.\nrule(r1, update_project_plan, []) :- project_extension.\nrule(r2, organize_workspace, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- project_extension, weekend.\nrule(p2, prefer(r2, r1), []) :- project_extension, weekend, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, update_project_plan).\ncomplement(update_project_plan, organize_workspace).\ncomplement(project_extension, weekend).\ncomplement(weekend, project_extension).",
        "NL Translation": "If I have a project extension, I update the project plan. If it's the weekend, I organize my workspace. But if I have a project extension and it's the weekend, I prefer to update the project plan. However, if there's also a new restaurant to try, I prefer to organize my workspace. I can't at the same time update the project plan and organize my workspace. Project extension and weekend aren't compatible."
    },
    {
        "Example Number": 81,
        "Gorgias Code": ":- dynamic networking_event/0, holiday_season/0, good_investment/0.\nrule(r1, read_book, []) :- networking_event.\nrule(r2, swim_session, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []) :- networking_event, holiday_season.\nrule(p2, prefer(r2, r1), []) :- networking_event, holiday_season, unexpected_expense.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\ncomplement(swim_session, read_book).\ncomplement(read_book, swim_session).\ncomplement(networking_event, holiday_season).\ncomplement(holiday_season, networking_event).",
        "NL Translation": "If there is a networking event, I read a book. If it is the holiday season, I have a swim session. But if there is a networking event and it is the holiday season, I prefer to read a book. However, if there is also an unexpected expense, I prefer to have a swim session. I can't at the same time read a book and have a swim session. Networking event and holiday season aren't compatible. If there is a good investment, I prefer to read a book over having a swim session. I prefer to have a swim session over reading a book."
    },
    {
        "Example Number": 186,
        "Gorgias Code": ":- dynamic boss_in_office/0, lunch_time/0.\nrule(r1, read_book, []) :- boss_in_office.\nrule(r2, dispose_trash, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- boss_in_office, lunch_time.\nrule(p2, prefer(r2, r1), []) :- boss_in_office, lunch_time, afternoon.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, read_book).\ncomplement(read_book, dispose_trash).\ncomplement(boss_in_office, lunch_time).\ncomplement(lunch_time, boss_in_office).",
        "NL Translation": "If my boss is in the office, I read a book. If it is lunch time, I dispose of the trash. However, if my boss is in the office and it is lunch time, I prefer to read a book. But if it is also the afternoon, I prefer to dispose of the trash. I can't at the same time read a book and dispose of the trash. The boss being in the office and lunch time are not compatible."
    },
    {
        "Example Number": 244,
        "Gorgias Code": ":- dynamic important_meeting/0, weekend/0, job_interview/0.\nrule(r1, schedule_meeting, []) :- important_meeting.\nrule(r2, attend_concert, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- important_meeting, weekend.\nrule(p2, prefer(r2, r1), []) :- important_meeting, weekend, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, schedule_meeting).\ncomplement(schedule_meeting, attend_concert).\ncomplement(important_meeting, weekend).\ncomplement(weekend, important_meeting).",
        "NL Translation": "If there is an important meeting, I schedule a meeting. If it is the weekend, I attend a concert. However, if there is an important meeting and it is the weekend, I prefer to schedule the meeting. But if it is also a hot day, I prefer to attend the concert. I can't at the same time schedule a meeting and attend a concert. An important meeting and the weekend aren't compatible. If I have a job interview, I prefer to schedule the meeting over attending the concert."
    },
    {
        "Example Number": 86,
        "Gorgias Code": ":- dynamic school_reunion/0.\nrule(r1, evening_walk, []) :- school_reunion.\nrule(r2, submit_timesheet, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []).\ncomplement(submit_timesheet, evening_walk).\ncomplement(evening_walk, submit_timesheet).",
        "NL Translation": "If there is a school reunion, I can either take an evening walk or submit my timesheet. Generally, I prefer to take an evening walk. I can't at the same time submit my timesheet and take an evening walk."
    },
    {
        "Example Number": 76,
        "Gorgias Code": ":- dynamic concert_nearby/0, weekend/0, job_interview/0, friend_in_town/0, snowstorm/0.\nrule(r1, do_laundry, []) :- concert_nearby.\nrule(r2, travel_abroad, []) :- weekend.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, weekend.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, weekend, community_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- snowstorm.\nrule(c5, prefer(c4, c3), []).\ncomplement(travel_abroad, do_laundry).\ncomplement(do_laundry, travel_abroad).\ncomplement(concert_nearby, weekend).\ncomplement(weekend, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I do laundry. If it is the weekend, I travel abroad. However, if there is a concert nearby and it is the weekend, I prefer to do laundry. But if there is also a community event, I prefer to travel abroad. I can't at the same time do laundry and travel abroad. If I have a job interview, I prefer to travel abroad over doing laundry. If a friend is in town, I prefer to do laundry over traveling abroad. If there is a snowstorm, I prefer to do laundry over traveling abroad. I can't at the same time have a concert nearby and be on the weekend."
    },
    {
        "Example Number": 265,
        "Gorgias Code": ":- dynamic extended_work_hours/0, friend_in_town/0.\nrule(r1, cycling_session, []) :- extended_work_hours.\nrule(r2, swim_session, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, friend_in_town, important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(swim_session, cycling_session).\ncomplement(cycling_session, swim_session).\ncomplement(extended_work_hours, friend_in_town).\ncomplement(friend_in_town, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I go for a cycling session. If a friend is in town, I go for a swim session. But if I have extended work hours and a friend is in town, I prefer to go for a cycling session. However, if I also have an important meeting, I prefer to go for a swim session. I can't at the same time go for a cycling session and a swim session. Extended work hours and a friend in town aren't compatible."
    },
    {
        "Example Number": 20,
        "Gorgias Code": ":- dynamic party_invitation/0, boss_in_office/0\nrule(r1, travel_abroad, []) :- party_invitation.\nrule(r2, update_project_plan, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\ncomplement(update_project_plan, travel_abroad).\ncomplement(travel_abroad, update_project_plan).",
        "NL Translation": "I can either travel abroad or update the project plan if I have a party invitation. Generally, I prefer to travel abroad. However, if my boss is in the office, I prefer to update the project plan. I can't at the same time travel abroad and update the project plan."
    },
    {
        "Example Number": 137,
        "Gorgias Code": ":- dynamic community_event/0.\nrule(r1, visit_museum, []) :- community_event.\nrule(r2, attend_meeting, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_meeting, visit_museum).\ncomplement(visit_museum, attend_meeting).",
        "NL Translation": "If there is a community event, I can either visit the museum or attend the meeting. Generally, I prefer to visit the museum. I can't at the same time visit the museum and attend the meeting."
    },
    {
        "Example Number": 216,
        "Gorgias Code": ":- dynamic dusk/0, moving_house/0, discount_on_flight/0.\nrule(r1, swim_session, []) :- dusk.\nrule(r2, call_client, []) :- moving_house.\nrule(p1, prefer(r1, r2), []) :- dusk, moving_house.\nrule(p2, prefer(r2, r1), []) :- dusk, moving_house, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, swim_session).\ncomplement(swim_session, call_client).\ncomplement(dusk, moving_house).\ncomplement(moving_house, dusk).",
        "NL Translation": "If it is dusk, I have a swim session. If I am moving house, I call the client. But if it is dusk and I am moving house, I prefer to have a swim session. However, if it is also early morning, I prefer to call the client. I can't at the same time have a swim session and call the client. Dusk and moving house aren't compatible. If there is a discount on a flight, I prefer to have a swim session over calling the client."
    },
    {
        "Example Number": 70,
        "Gorgias Code": ":- dynamic tax_refund/0, got_bonus/0\nrule(r1, cycling_session, []) :- tax_refund.\nrule(r2, travel_abroad, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- got_bonus.\nrule(c1, prefer(p2, p1), []).\ncomplement(travel_abroad, cycling_session).\ncomplement(cycling_session, travel_abroad).",
        "NL Translation": "If I have a tax refund, I can either have a cycling session or travel abroad. Generally, I prefer to have a cycling session, but if I got a bonus, I prefer to travel abroad. I can't at the same time have a cycling session and travel abroad."
    },
    {
        "Example Number": 111,
        "Gorgias Code": ":- dynamic relationship_break/0.\nrule(r1, clean_house, []) :- relationship_break.\nrule(r2, go_to(park), []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_to(park), clean_house).\ncomplement(clean_house, go_to(park)).",
        "NL Translation": "If there is a relationship break, I can either clean the house or go to the park. Generally, I prefer to clean the house. I can't at the same time clean the house and go to the park."
    },
    {
        "Example Number": 290,
        "Gorgias Code": ":- dynamic early_morning/0, new_restaurant_to_try/0.\nrule(r1, do_laundry, []) :- early_morning.\nrule(r2, cook_dinner, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- early_morning, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- early_morning, new_restaurant_to_try, night_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(cook_dinner, do_laundry).\ncomplement(do_laundry, cook_dinner).\ncomplement(early_morning, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, early_morning).",
        "NL Translation": "I can either do laundry or cook dinner. If it is early morning, I can do laundry. If there is a new restaurant to try, I can cook dinner. If it is early morning and there is a new restaurant to try, I prefer to do laundry. However, if it is also night time, I prefer to cook dinner. I can't at the same time do laundry and cook dinner. Early morning and new restaurant to try aren't compatible."
    },
    {
        "Example Number": 36,
        "Gorgias Code": ":- dynamic community_event/0, school_reunion/0, hail_storm/0\nrule(r1, buy_groceries, []) :- community_event.\nrule(r2, drive_car, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, buy_groceries).\ncomplement(buy_groceries, drive_car).",
        "NL Translation": "If there is a community event, I can either buy groceries or drive a car. Generally, I prefer to buy groceries, but if there is a school reunion, I prefer to drive a car. However, if there is a hail storm, I prefer to buy groceries. I can't at the same time buy groceries and drive a car."
    },
    {
        "Example Number": 119,
        "Gorgias Code": ":- dynamic subscription_due/0, team_project_due/0, networking_event/0\nrule(r1, go_to(theater), []) :- subscription_due.\nrule(r2, attend_concert, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, go_to(theater)).\ncomplement(go_to(theater), attend_concert).",
        "NL Translation": "If my subscription is due, I can either go to the theater or attend a concert. Generally, I prefer to go to the theater, but if I have a team project due, I prefer to attend the concert. I can't at the same time go to the theater and attend a concert. If there is a networking event, I prefer to attend the concert over going to the theater."
    },
    {
        "Example Number": 291,
        "Gorgias Code": ":- dynamic dusk/0, early_morning/0\nrule(r1, clean_house, []) :- dusk.\nrule(r2, buy_groceries, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(buy_groceries, clean_house).\ncomplement(clean_house, buy_groceries).",
        "NL Translation": "At dusk, I can either clean the house or buy groceries. Generally, I prefer to clean the house, but if it's early morning, I prefer to buy groceries. I can't at the same time clean the house and buy groceries."
    },
    {
        "Example Number": 204,
        "Gorgias Code": ":- dynamic friend_in_town/0, party_invitation/0, snowstorm/0.\nrule(r1, take_train, []) :- friend_in_town.\nrule(r2, order_taxi, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- friend_in_town, party_invitation.\nrule(p2, prefer(r2, r1), []) :- friend_in_town, party_invitation, financial_aid.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, take_train).\ncomplement(take_train, order_taxi).\ncomplement(friend_in_town, party_invitation).\ncomplement(party_invitation, friend_in_town).",
        "NL Translation": "If my friend is in town, I take the train. If I have a party invitation, I order a taxi. But if my friend is in town and I have a party invitation, I prefer to take the train. However, if I also have financial aid, I prefer to order a taxi. I can't at the same time order a taxi and take the train. My friend being in town and having a party invitation aren't compatible. If there is a snowstorm, I prefer to take the train over ordering a taxi."
    },
    {
        "Example Number": 100,
        "Gorgias Code": ":- dynamic tax_refund/0, client_feedback/0, friend_in_town/0.\nrule(r1, attend_meeting, []) :- tax_refund.\nrule(r2, read_book, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- tax_refund, client_feedback.\nrule(p2, prefer(r2, r1), []) :- tax_refund, client_feedback, cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(read_book, attend_meeting).\ncomplement(attend_meeting, read_book).\ncomplement(tax_refund, client_feedback).\ncomplement(client_feedback, tax_refund).",
        "NL Translation": "I can either attend the meeting or read a book. If I have a tax refund, I can attend the meeting. If I have client feedback, I can read a book. If I have both a tax refund and client feedback, I generally prefer to attend the meeting. However, if it is also a cloudy day, I prefer to read a book. If I have a friend in town, I prefer to attend the meeting. I can't at the same time attend the meeting and read a book. Tax refund and client feedback aren't compatible."
    },
    {
        "Example Number": 220,
        "Gorgias Code": ":- dynamic birthday_today/0, snowstorm/0, got_bonus/0.\nrule(r1, make_coffee, []) :- birthday_today.\nrule(r2, buy_groceries, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- birthday_today, snowstorm.\nrule(p2, prefer(r2, r1), []) :- birthday_today, snowstorm, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, make_coffee).\ncomplement(make_coffee, buy_groceries).\ncomplement(birthday_today, snowstorm).\ncomplement(snowstorm, birthday_today).",
        "NL Translation": "If it is my birthday today, I make coffee. If there is a snowstorm, I buy groceries. However, if it is my birthday today and there is a snowstorm, I prefer to make coffee. If it is my birthday today and there is a snowstorm and there is a school reunion, I prefer to buy groceries. I can't at the same time make coffee and buy groceries. My birthday today and a snowstorm aren't compatible. If I got a bonus, I prefer to make coffee over buying groceries."
    },
    {
        "Example Number": 8,
        "Gorgias Code": ":- dynamic family_emergency/0, invitation_from_friend/0, expensive_event/0.\nrule(r1, travel_abroad, []) :- family_emergency.\nrule(r2, reply_emails, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- family_emergency, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- family_emergency, invitation_from_friend, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, travel_abroad).\ncomplement(travel_abroad, reply_emails).\ncomplement(family_emergency, invitation_from_friend).\ncomplement(invitation_from_friend, family_emergency).",
        "NL Translation": "I can either travel abroad or reply to emails. If there is a family emergency, I prefer to travel abroad. If I have an invitation from a friend, I prefer to reply to emails. However, if there is a family emergency and I have an invitation from a friend, I generally prefer to travel abroad. If there is also an urgent deadline, I prefer to reply to emails. I can't at the same time travel abroad and reply to emails. Family emergency and invitation from friend aren't compatible. If there is an expensive event, I prefer to travel abroad over replying to emails."
    },
    {
        "Example Number": 67,
        "Gorgias Code": ":- dynamic snowstorm/0.\nrule(r1, visit_museum, []) :- snowstorm.\nrule(r2, yoga_session, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\ncomplement(yoga_session, visit_museum).\ncomplement(visit_museum, yoga_session).",
        "NL Translation": "If there is a snowstorm, I can either visit the museum or attend a yoga session. I generally prefer to visit the museum. I can't at the same time visit the museum and attend a yoga session."
    },
    {
        "Example Number": 214,
        "Gorgias Code": ":- dynamic low_budget/0, night_time/0, networking_event/0\nrule(r1, water_plants, []) :- low_budget.\nrule(r2, explore_city, []) :- low_budget.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, water_plants).\ncomplement(water_plants, explore_city).",
        "NL Translation": "If I have a low budget, I can either water the plants or explore the city. Generally, I prefer to water the plants. However, if it is night time, I prefer to explore the city. I can't at the same time water the plants and explore the city. If there is a networking event, I prefer to water the plants over exploring the city."
    },
    {
        "Example Number": 219,
        "Gorgias Code": ":- dynamic community_event/0.\nrule(r1, cycle_to_work, []) :- community_event.\nrule(r2, meditate, []) :- community_event.\nrule(p1, prefer(r1, r2), []).\ncomplement(meditate, cycle_to_work).\ncomplement(cycle_to_work, meditate).",
        "NL Translation": "If there is a community event, I can either cycle to work or meditate. Generally, I prefer to cycle to work. I can't at the same time cycle to work and meditate."
    },
    {
        "Example Number": 54,
        "Gorgias Code": ":- dynamic hot_day/0, early_morning/0\nrule(r1, clean_house, []) :- hot_day.\nrule(r2, join_fitness_class, []) :- hot_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, clean_house).\ncomplement(clean_house, join_fitness_class).",
        "NL Translation": "On a hot day, I can either clean the house or join a fitness class. Generally, I prefer to clean the house, but if it is early morning, I prefer to join the fitness class. I can't at the same time clean the house and join a fitness class."
    },
    {
        "Example Number": 89,
        "Gorgias Code": ":- dynamic important_meeting/0.\nrule(r1, attend_workshop, []) :- important_meeting.\nrule(r2, cycling_session, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycling_session, attend_workshop).\ncomplement(attend_workshop, cycling_session).",
        "NL Translation": "If there is an important meeting, I can either attend a workshop or have a cycling session. Generally, I prefer to attend the workshop. I can't at the same time attend a workshop and have a cycling session."
    },
    {
        "Example Number": 176,
        "Gorgias Code": ":- dynamic unexpected_guest/0, relationship_break/0, tax_refund/0\nrule(r1, swim_session, []) :- unexpected_guest.\nrule(r2, order_taxi, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, swim_session).\ncomplement(swim_session, order_taxi).",
        "NL Translation": "If there is an unexpected guest, I can either have a swim session or order a taxi. I generally prefer to have a swim session, but if there is a relationship break, I prefer to order a taxi. I can't at the same time have a swim session and order a taxi. If I receive a tax refund, I prefer to have a swim session over ordering a taxi."
    },
    {
        "Example Number": 237,
        "Gorgias Code": ":- dynamic team_project_due/0, extended_work_hours/0\nrule(r1, go_to(park), []) :- team_project_due.\nrule(r2, do_laundry, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- extended_work_hours.\nrule(c1, prefer(p2, p1), []).\ncomplement(do_laundry, go_to(park)).\ncomplement(go_to(park), do_laundry).",
        "NL Translation": "If I have a team project due, I can either go to the park or do laundry. Generally, I prefer to go to the park. However, if I have extended work hours, I prefer to do laundry. I can't at the same time go to the park and do laundry."
    },
    {
        "Example Number": 105,
        "Gorgias Code": ":- dynamic vacation_planned/0, weekend/0, good_weather/0\nrule(r1, visit_doctor, []) :- vacation_planned.\nrule(r2, go_to(restaurant), []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), visit_doctor).\ncomplement(visit_doctor, go_to(restaurant)).",
        "NL Translation": "If I have a vacation planned, I visit the doctor. If I have a vacation planned, I go to the restaurant. I prefer to visit the doctor over going to the restaurant. However, if it is the weekend, I prefer to go to the restaurant over visiting the doctor. I can also prefer visiting the doctor over going to the restaurant. If the weather is good, I prefer to go to the restaurant over visiting the doctor. I can't at the same time go to the restaurant and visit the doctor."
    },
    {
        "Example Number": 263,
        "Gorgias Code": ":- dynamic concert_nearby/0.\nrule(r1, reply_emails, []) :- concert_nearby.\nrule(r2, finish_report, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, reply_emails).\ncomplement(reply_emails, finish_report).",
        "NL Translation": "If there is a concert nearby, I can either reply to emails or finish the report. I generally prefer to reply to emails. I can't at the same time finish the report and reply to emails."
    },
    {
        "Example Number": 154,
        "Gorgias Code": ":- dynamic deadline_missed/0, feeling_sick/0\nrule(r1, join_fitness_class, []) :- deadline_missed.\nrule(r2, attend_workshop, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, join_fitness_class).\ncomplement(join_fitness_class, attend_workshop).",
        "NL Translation": "If I have missed a deadline, I can either join a fitness class or attend a workshop. Generally, I prefer to join a fitness class but if I am feeling sick, I prefer to attend the workshop. I can't at the same time join a fitness class and attend a workshop."
    },
    {
        "Example Number": 163,
        "Gorgias Code": ":- dynamic got_bonus/0.\nrule(r1, host_dinner_party, []) :- got_bonus.\nrule(r2, attend_workshop, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_workshop, host_dinner_party).\ncomplement(host_dinner_party, attend_workshop).",
        "NL Translation": "I can either host a dinner party or attend a workshop. If I got a bonus, I can do either. I can't at the same time host a dinner party and attend a workshop."
    },
    {
        "Example Number": 150,
        "Gorgias Code": ":- dynamic got_bonus/0, party_invitation/0, friend_in_town/0.\nrule(r1, evening_walk, []) :- got_bonus.\nrule(r2, schedule_meeting, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []) :- got_bonus, party_invitation.\nrule(p2, prefer(r2, r1), []) :- got_bonus, party_invitation, vacation_planned.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, evening_walk).\ncomplement(evening_walk, schedule_meeting).\ncomplement(got_bonus, party_invitation).\ncomplement(party_invitation, got_bonus).",
        "NL Translation": "I have either an evening walk or a scheduled meeting. If I got a bonus, I can take an evening walk. If I have a party invitation, I can schedule a meeting. If I got a bonus and have a party invitation, I prefer to take an evening walk. However, if I also have a vacation planned, I prefer to schedule a meeting. I can't at the same time take an evening walk and schedule a meeting. Got bonus and party invitation aren't compatible. If a friend is in town, I prefer to take an evening walk over scheduling a meeting."
    },
    {
        "Example Number": 63,
        "Gorgias Code": ":- dynamic tax_refund/0, dusk/0, subscription_due/0.\nrule(r1, visit_family, []) :- tax_refund.\nrule(r2, attend_concert, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- tax_refund, dusk.\nrule(p2, prefer(r2, r1), []) :- tax_refund, dusk, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_concert, visit_family).\ncomplement(visit_family, attend_concert).\ncomplement(tax_refund, dusk).\ncomplement(dusk, tax_refund).",
        "NL Translation": "If I have a tax refund, I visit family. If it's dusk, I attend a concert. But if I have a tax refund and it's dusk, I prefer to visit family. However, if there is also an important meeting, I prefer to attend the concert. I can't at the same time visit family and attend a concert. Tax refund and dusk aren't compatible. If there is a subscription due, I prefer to visit family over attending the concert."
    },
    {
        "Example Number": 47,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, job_interview/0, friend_in_town/0\nrule(r1, organize_workspace, []) :- wedding_anniversary.\nrule(r2, go_to(theater), []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- job_interview.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), organize_workspace).\ncomplement(organize_workspace, go_to(theater)).",
        "NL Translation": "I can either organize my workspace or go to the theater. Generally, I prefer to organize my workspace. However, if I have a job interview, I prefer to go to the theater. If I have a friend in town, I prefer to organize my workspace. I can't at the same time organize my workspace and go to the theater."
    },
    {
        "Example Number": 4,
        "Gorgias Code": ":- dynamic good_weather/0, rainy_day/0, early_morning/0, unexpected_guest/0, moving_house/0.\nrule(r1, make_coffee, []) :- good_weather.\nrule(r2, cook_dinner, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- good_weather, rainy_day.\nrule(p2, prefer(r2, r1), []) :- good_weather, rainy_day, afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- moving_house.\nrule(c5, prefer(c4, c3), []).\ncomplement(cook_dinner, make_coffee).\ncomplement(make_coffee, cook_dinner).\ncomplement(good_weather, rainy_day).\ncomplement(rainy_day, good_weather).",
        "NL Translation": "If the weather is good, I make coffee. If it is a rainy day, I cook dinner. However, if it is both good weather and a rainy day, I prefer to make coffee. If it is also the afternoon, I prefer to cook dinner. I can't at the same time cook dinner and make coffee. If it is early morning, I prefer to make coffee. If there is an unexpected guest, I prefer to cook dinner. If I am moving house, I prefer to cook dinner over making coffee. Good weather and rainy day are not compatible."
    },
    {
        "Example Number": 143,
        "Gorgias Code": ":- dynamic tax_refund/0, discount_on_flight/0, expensive_event/0\nrule(r1, submit_timesheet, []) :- tax_refund.\nrule(r2, cycling_session, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, submit_timesheet).\ncomplement(submit_timesheet, cycling_session).",
        "NL Translation": "I can either submit my timesheet or go for a cycling session if I have a tax refund. Generally, I prefer to submit my timesheet but if there is a discount on a flight I prefer to go for a cycling session. However, if there is an expensive event I prefer to submit my timesheet. I can't at the same time submit my timesheet and go for a cycling session."
    },
    {
        "Example Number": 221,
        "Gorgias Code": ":- dynamic medical_appointment/0.\nrule(r1, attend_workshop, []) :- medical_appointment.\nrule(r2, swim_session, []) :- medical_appointment.\nrule(p1, prefer(r1, r2), []).\ncomplement(swim_session, attend_workshop).\ncomplement(attend_workshop, swim_session).",
        "NL Translation": "If I have a medical appointment, I can either attend a workshop or have a swim session. I generally prefer to attend the workshop. I can't at the same time attend a workshop and have a swim session."
    },
    {
        "Example Number": 83,
        "Gorgias Code": ":- dynamic moving_house/0, invitation_from_friend/0, friend_in_town/0, medical_appointment/0, important_meeting/0.\nrule(r1, water_plants, []) :- moving_house.\nrule(r2, call_client, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- moving_house, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- moving_house, invitation_from_friend, hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- important_meeting.\nrule(c5, prefer(c4, c3), []).\ncomplement(call_client, water_plants).\ncomplement(water_plants, call_client).\ncomplement(moving_house, invitation_from_friend).\ncomplement(invitation_from_friend, moving_house).",
        "NL Translation": "If I am moving house, I water the plants. If I have an invitation from a friend, I call the client. But if I am moving house and have an invitation from a friend, I prefer to water the plants. However, if it is also a hot day, I prefer to call the client. I can't at the same time water the plants and call the client. Moving house and an invitation from a friend aren't compatible. If I have a friend in town, I prefer to water the plants over calling the client. If I have a medical appointment, I prefer to water the plants over calling the client. If I have an important meeting, I prefer to call the client over watering the plants."
    },
    {
        "Example Number": 6,
        "Gorgias Code": ":- dynamic humid_day/0, new_restaurant_to_try/0, financial_aid/0\nrule(r1, submit_timesheet, []) :- humid_day.\nrule(r2, morning_run, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(morning_run, submit_timesheet).\ncomplement(submit_timesheet, morning_run).",
        "NL Translation": "If it is a humid day, I can either submit my timesheet or go for a morning run. Generally, I prefer to submit my timesheet, but if there is a new restaurant to try, I prefer to go for a morning run. However, if I have financial aid, I prefer to submit my timesheet. I can't at the same time submit my timesheet and go for a morning run."
    },
    {
        "Example Number": 282,
        "Gorgias Code": ":- dynamic moving_house/0, project_extension/0, medical_appointment/0\nrule(r1, go_to(restaurant), []) :- moving_house.\nrule(r2, explore_city, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- medical_appointment.\nrule(c3, prefer(c2, c1), []).\ncomplement(explore_city, go_to(restaurant)).\ncomplement(go_to(restaurant), explore_city).",
        "NL Translation": "If I am moving house, I can either go to the restaurant or explore the city. Generally, I prefer to go to the restaurant, but if I have a project extension, I prefer to explore the city. I can't at the same time go to the restaurant and explore the city. If I have a medical appointment, I prefer to explore the city over going to the restaurant."
    },
    {
        "Example Number": 103,
        "Gorgias Code": ":- dynamic good_weather/0, extended_work_hours/0, financial_aid/0\nrule(r1, pay_bills, []) :- good_weather.\nrule(r2, prepare_report, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(prepare_report, pay_bills).\ncomplement(pay_bills, prepare_report).",
        "NL Translation": "When there is good weather, I can either pay bills or prepare a report. Generally, I prefer to pay bills. However, if I have extended work hours, I prefer to prepare a report. If I have financial aid, I prefer to pay bills. I can't at the same time pay bills and prepare a report."
    },
    {
        "Example Number": 260,
        "Gorgias Code": ":- dynamic good_investment/0, got_bonus/0, financial_aid/0, party_invitation/0, snowstorm/0.\nrule(r1, prepare_report, []) :- good_investment.\nrule(r2, go_to(restaurant), []) :- got_bonus.\nrule(p1, prefer(r1, r2), []) :- good_investment, got_bonus.\nrule(p2, prefer(r2, r1), []) :- good_investment, got_bonus, family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- snowstorm.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(restaurant), prepare_report).\ncomplement(prepare_report, go_to(restaurant)).\ncomplement(good_investment, got_bonus).\ncomplement(got_bonus, good_investment).",
        "NL Translation": "I can either prepare a report or go to the restaurant. If I have a good investment, I can prepare a report. If I got a bonus, I can go to the restaurant. Generally, I prefer to prepare the report if I have a good investment and got a bonus. However, if there is a family gathering, I prefer to go to the restaurant instead. I can't at the same time prepare a report and go to the restaurant. Additionally, if I receive financial aid, I prefer to prepare the report over going to the restaurant. If I have a party invitation, I also prefer to prepare the report over going to the restaurant. In the case of a snowstorm, I prefer to prepare the report over any other option. I can't at the same time have a good investment and have received a bonus."
    },
    {
        "Example Number": 255,
        "Gorgias Code": ":- dynamic concert_nearby/0, party_invitation/0\nrule(r1, explore_city, []) :- concert_nearby.\nrule(r2, prepare_report, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\ncomplement(prepare_report, explore_city).\ncomplement(explore_city, prepare_report).",
        "NL Translation": "If there is a concert nearby, I can either explore the city or prepare a report. Generally, I prefer to explore the city but if I have a party invitation, I prefer to prepare the report. I can't at the same time explore the city and prepare the report."
    },
    {
        "Example Number": 147,
        "Gorgias Code": ":- dynamic job_interview/0, weekend/0, financial_aid/0\nrule(r1, go_to_bar, []) :- job_interview.\nrule(r2, reply_emails, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(reply_emails, go_to_bar).\ncomplement(go_to_bar, reply_emails).",
        "NL Translation": "I can either go to the bar or reply to emails. Generally, I prefer to go to the bar. However, if it is the weekend, I prefer to reply to emails. If I have financial aid, I prefer to go to the bar. I can't at the same time go to the bar and reply to emails."
    },
    {
        "Example Number": 123,
        "Gorgias Code": ":- dynamic discount_on_flight/0, lunch_time/0, windy_day/0, snowstorm/0, invitation_from_friend/0.\nrule(r1, order_taxi, []) :- discount_on_flight.\nrule(r2, give_presentation, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, lunch_time.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, lunch_time, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(give_presentation, order_taxi).\ncomplement(order_taxi, give_presentation).\ncomplement(discount_on_flight, lunch_time).\ncomplement(lunch_time, discount_on_flight).",
        "NL Translation": "I can either order a taxi or give a presentation. If there is a discount on the flight, I prefer to order a taxi. If it is lunch time, I prefer to give a presentation. If there is a discount on the flight and it is lunch time, I prefer to order a taxi. However, if it is also my birthday today, I prefer to give a presentation. I can't at the same time order a taxi and give a presentation. If it is a windy day, I prefer to give a presentation over ordering a taxi. If there is a snowstorm, I prefer to give a presentation over ordering a taxi. If I have an invitation from a friend, I prefer to order a taxi over giving a presentation. If I prefer to order a taxi over giving a presentation and I have an invitation from a friend, I prefer to order a taxi over the previous preferences. The discount on the flight and lunch time aren't compatible."
    },
    {
        "Example Number": 131,
        "Gorgias Code": ":- dynamic relationship_break/0, lunch_time/0, good_weather/0.\nrule(r1, prepare_report, []) :- relationship_break.\nrule(r2, cycle_to_work, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- relationship_break, lunch_time.\nrule(p2, prefer(r2, r1), []) :- relationship_break, lunch_time, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycle_to_work, prepare_report).\ncomplement(prepare_report, cycle_to_work).\ncomplement(relationship_break, lunch_time).\ncomplement(lunch_time, relationship_break).",
        "NL Translation": "If I have a relationship break, I prepare a report. If it is lunch time, I cycle to work. But if I have a relationship break and it is lunch time, I prefer to prepare the report. However, if it is also a good investment, I prefer to cycle to work. I can't at the same time prepare a report and cycle to work. Relationship break and lunch time aren't compatible. If the weather is good, I prefer to prepare the report over cycling to work."
    },
    {
        "Example Number": 268,
        "Gorgias Code": ":- dynamic good_investment/0, morning_rush/0, hot_day/0\nrule(r1, take_picnic, []) :- good_investment.\nrule(r2, travel_abroad, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(travel_abroad, take_picnic).\ncomplement(take_picnic, travel_abroad).",
        "NL Translation": "If I have a good investment, I can either take a picnic or travel abroad. Generally, I prefer to take a picnic but if there is a morning rush I prefer to travel abroad. However, if it is a hot day I prefer to take a picnic. I can't at the same time take a picnic and travel abroad."
    },
    {
        "Example Number": 32,
        "Gorgias Code": ":- dynamic deadline_missed/0.\nrule(r1, make_coffee, []) :- deadline_missed.\nrule(r2, finish_report, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\ncomplement(finish_report, make_coffee).\ncomplement(make_coffee, finish_report).",
        "NL Translation": "If the deadline is missed, I can either make coffee or finish the report. Generally, I prefer to make coffee. I can't at the same time make coffee and finish the report."
    },
    {
        "Example Number": 42,
        "Gorgias Code": ":- dynamic feeling_sick/0, snowstorm/0\nrule(r1, call_client, []) :- feeling_sick.\nrule(r2, pay_bills, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(pay_bills, call_client).\ncomplement(call_client, pay_bills).",
        "NL Translation": "I can either call the client or pay the bills. Generally, I prefer to call the client but if there is a snowstorm I prefer to pay the bills. I can't at the same time call the client and pay the bills."
    },
    {
        "Example Number": 179,
        "Gorgias Code": ":- dynamic feeling_sick/0, unexpected_expense/0, boss_in_office/0, tax_refund/0, friend_in_town/0.\nrule(r1, pay_bills, []) :- feeling_sick.\nrule(r2, update_project_plan, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, unexpected_expense, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- tax_refund.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- friend_in_town.\nrule(c5, prefer(c4, c3), []).\ncomplement(update_project_plan, pay_bills).\ncomplement(pay_bills, update_project_plan).\ncomplement(feeling_sick, unexpected_expense).\ncomplement(unexpected_expense, feeling_sick).",
        "NL Translation": "I can either pay bills or update the project plan. If I feel sick, I may pay bills. If there is an unexpected expense, I may update the project plan. If I feel sick and there is an unexpected expense, I prefer to pay bills. However, if there is also a relationship break, I prefer to update the project plan. I can't at the same time pay bills and update the project plan. If my boss is in the office, I prefer to update the project plan over paying bills. If I receive a tax refund, I also prefer to update the project plan over paying bills. If I have a friend in town, I prefer to pay bills over updating the project plan. If I have a friend in town, I prefer to pay bills over updating the project plan. Feeling sick and unexpected expense are not compatible."
    },
    {
        "Example Number": 247,
        "Gorgias Code": ":- dynamic rainy_day/0, extended_work_hours/0, networking_event/0, school_reunion/0, vacation_planned/0.\nrule(r1, update_project_plan, []) :- rainy_day.\nrule(r2, go_to(park), []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- rainy_day, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- rainy_day, extended_work_hours, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- vacation_planned.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(park), update_project_plan).\ncomplement(update_project_plan, go_to(park)).\ncomplement(rainy_day, extended_work_hours).\ncomplement(extended_work_hours, rainy_day).",
        "NL Translation": "If it is a rainy day, I update the project plan. If I have extended work hours, I go to the park. However, if it is both a rainy day and I have extended work hours, I prefer to update the project plan. But if the weather is good as well, I prefer to go to the park. I can't at the same time go to the park and update the project plan. Rainy day and extended work hours aren't compatible. If there is a networking event, I prefer to update the project plan over going to the park. If there is a school reunion, I prefer to update the project plan over going to the park. If I have a vacation planned, I prefer the choice of updating the project plan to going to the park. If I have a vacation planned, I prefer the choice of updating the project plan to the previous preferences."
    },
    {
        "Example Number": 258,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, hail_storm/0, networking_event/0\nrule(r1, visit_family, []) :- invitation_from_friend.\nrule(r2, attend_meeting, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hail_storm.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_meeting, visit_family).\ncomplement(visit_family, attend_meeting).",
        "NL Translation": "If I have an invitation from a friend, I can either visit family or attend a meeting. Generally, I prefer to visit family. However, if there is a hail storm, I prefer to attend the meeting. If there is a networking event, I prefer to visit family. I can't at the same time visit family and attend a meeting."
    },
    {
        "Example Number": 182,
        "Gorgias Code": ":- dynamic new_neighbor/0, humid_day/0\nrule(r1, swim_session, []) :- new_neighbor.\nrule(r2, take_train, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, swim_session).\ncomplement(swim_session, take_train).",
        "NL Translation": "If I have a new neighbor, I can either have a swim session or take the train. Generally, I prefer to have a swim session, but if it is a humid day, I prefer to take the train. I can't at the same time have a swim session and take the train."
    },
    {
        "Example Number": 213,
        "Gorgias Code": ":- dynamic party_invitation/0, birthday_today/0, got_bonus/0\nrule(r1, do_laundry, []) :- party_invitation.\nrule(r2, go_to(theater), []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), do_laundry).\ncomplement(do_laundry, go_to(theater)).",
        "NL Translation": "I can either do laundry or go to the theater if I have a party invitation. Generally, I prefer to do laundry. However, if today is my birthday, I prefer to go to the theater. If I got a bonus, I prefer to do laundry. I can't at the same time do laundry and go to the theater."
    },
    {
        "Example Number": 210,
        "Gorgias Code": ":- dynamic unexpected_guest/0, low_budget/0, moving_house/0\nrule(r1, attend_meeting, []) :- unexpected_guest.\nrule(r2, use_subway, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, attend_meeting).\ncomplement(attend_meeting, use_subway).",
        "NL Translation": "If there is an unexpected guest, I can either attend a meeting or use the subway. Generally, I prefer to attend the meeting but if I have a low budget, I prefer to use the subway. However, if I am moving house, I prefer to attend the meeting. I can't at the same time attend a meeting and use the subway."
    },
    {
        "Example Number": 292,
        "Gorgias Code": ":- dynamic hail_storm/0, project_extension/0\nrule(r1, swim_session, []) :- hail_storm.\nrule(r2, take_train, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, swim_session).\ncomplement(swim_session, take_train).",
        "NL Translation": "If there is a hail storm, I can either have a swim session or take a train. Generally, I prefer to have a swim session but if there is a project extension, I prefer to take the train. I can't at the same time have a swim session and take a train."
    },
    {
        "Example Number": 281,
        "Gorgias Code": ":- dynamic moving_house/0.\nrule(r1, pay_bills, []) :- moving_house.\nrule(r2, submit_timesheet, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\ncomplement(submit_timesheet, pay_bills).\ncomplement(pay_bills, submit_timesheet).",
        "NL Translation": "If I am moving house, I can either pay bills or submit a timesheet. Generally, I prefer to pay bills. I can't at the same time pay bills and submit a timesheet."
    },
    {
        "Example Number": 38,
        "Gorgias Code": ":- dynamic got_bonus/0, unexpected_guest/0.\nrule(r1, cycle_to_work, []) :- got_bonus.\nrule(r2, dispose_trash, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- got_bonus, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- got_bonus, unexpected_guest, good_investment.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, cycle_to_work).\ncomplement(cycle_to_work, dispose_trash).\ncomplement(got_bonus, unexpected_guest).\ncomplement(unexpected_guest, got_bonus).",
        "NL Translation": "If I got a bonus, I cycle to work. If I have an unexpected guest, I dispose of the trash. But if I got a bonus and I have an unexpected guest, I prefer to cycle to work. However, if I also have a good investment, I prefer to dispose of the trash. I can't at the same time cycle to work and dispose of the trash. Got bonus and unexpected guest aren't compatible."
    },
    {
        "Example Number": 114,
        "Gorgias Code": ":- dynamic urgent_deadline/0, extended_work_hours/0.\nrule(r1, take_train, []) :- urgent_deadline.\nrule(r2, ride_bike, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- urgent_deadline, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- urgent_deadline, extended_work_hours, holiday_season.\nrule(c1, prefer(p2, p1), []).\ncomplement(ride_bike, take_train).\ncomplement(take_train, ride_bike).\ncomplement(urgent_deadline, extended_work_hours).\ncomplement(extended_work_hours, urgent_deadline).",
        "NL Translation": "If I have an urgent deadline, I take the train. If I have extended work hours, I ride my bike. But if I have an urgent deadline and extended work hours, I prefer to take the train. However, if it is also the holiday season, I prefer to ride my bike. I can't at the same time take the train and ride my bike. Urgent deadline and extended work hours aren't compatible."
    },
    {
        "Example Number": 161,
        "Gorgias Code": ":- dynamic important_meeting/0, new_restaurant_to_try/0, weekend/0\nrule(r1, attend_meeting, []) :- important_meeting.\nrule(r2, order_taxi, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(order_taxi, attend_meeting).\ncomplement(attend_meeting, order_taxi).",
        "NL Translation": "I have an important meeting, so I can either attend the meeting or order a taxi. Generally, I prefer to attend the meeting, but if there is a new restaurant to try, I prefer to order a taxi. If it is the weekend, I prefer to attend the meeting. I can't at the same time attend the meeting and order a taxi."
    },
    {
        "Example Number": 160,
        "Gorgias Code": ":- dynamic new_neighbor/0.\nrule(r1, make_coffee, []) :- new_neighbor.\nrule(r2, join_fitness_class, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, make_coffee).\ncomplement(make_coffee, join_fitness_class).",
        "NL Translation": "If I have a new neighbor, I can either make coffee or join a fitness class. I prefer to make coffee. I can't at the same time make coffee and join a fitness class."
    },
    {
        "Example Number": 69,
        "Gorgias Code": ":- dynamic hot_day/0.\nrule(r1, ride_bike, []) :- hot_day.\nrule(r2, attend_meeting, []) :- hot_day.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_meeting, ride_bike).\ncomplement(ride_bike, attend_meeting).",
        "NL Translation": "It is a hot day. I can either ride my bike or attend a meeting. I prefer to ride my bike. I can't at the same time ride my bike and attend the meeting."
    },
    {
        "Example Number": 128,
        "Gorgias Code": ":- dynamic feeling_sick/0, networking_event/0, hot_day/0.\nrule(r1, go_to(theater), []) :- feeling_sick.\nrule(r2, organize_workspace, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- feeling_sick, networking_event.\nrule(p2, prefer(r2, r1), []) :- feeling_sick, networking_event, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- hot_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(organize_workspace, go_to(theater)).\ncomplement(go_to(theater), organize_workspace).\ncomplement(feeling_sick, networking_event).\ncomplement(networking_event, feeling_sick).",
        "NL Translation": "I can either go to the theater or organize my workspace. If I feel sick, I go to the theater. If there is a networking event, I organize my workspace. However, if I feel sick and there is a networking event, I prefer to go to the theater. If there is also a family emergency, I prefer to organize my workspace. I can't at the same time go to the theater and organize my workspace. Feeling sick and networking event aren't compatible. If it's a hot day, I prefer to go to the theater over organizing my workspace."
    },
    {
        "Example Number": 202,
        "Gorgias Code": ":- dynamic rainy_day/0, urgent_deadline/0, vacation_planned/0.\nrule(r1, go_to(cinema), []) :- rainy_day.\nrule(r2, attend_workshop, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- rainy_day, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- rainy_day, urgent_deadline, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- vacation_planned.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, go_to(cinema)).\ncomplement(go_to(cinema), attend_workshop).\ncomplement(rainy_day, urgent_deadline).\ncomplement(urgent_deadline, rainy_day).",
        "NL Translation": "If it is a rainy day, I go to the cinema. If there is an urgent deadline, I attend a workshop. However, if it is a rainy day and there is an urgent deadline, I prefer to go to the cinema. If it is also early morning, I prefer to attend the workshop. I can't at the same time attend the workshop and go to the cinema. Rainy day and urgent deadline aren't compatible. If I have a vacation planned, I prefer to deny the first preference. I can't at the same time prefer the second preference and deny the first preference."
    },
    {
        "Example Number": 297,
        "Gorgias Code": ":- dynamic important_meeting/0, urgent_deadline/0, expensive_event/0.\nrule(r1, go_shopping, []) :- important_meeting.\nrule(r2, take_picnic, []) :- urgent_deadline.\nrule(p1, prefer(r1, r2), []) :- important_meeting, urgent_deadline.\nrule(p2, prefer(r2, r1), []) :- important_meeting, urgent_deadline, morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, go_shopping).\ncomplement(go_shopping, take_picnic).\ncomplement(important_meeting, urgent_deadline).\ncomplement(urgent_deadline, important_meeting).",
        "NL Translation": "If I have an important meeting, I go shopping. If there is an urgent deadline, I take a picnic. But if I have both an important meeting and an urgent deadline, I prefer to go shopping. However, if it is also during the morning rush, I prefer to take a picnic. I can't at the same time go shopping and take a picnic. Important meeting and urgent deadline aren't compatible. If there is an expensive event, I prefer to go shopping over taking a picnic."
    },
    {
        "Example Number": 97,
        "Gorgias Code": ":- dynamic morning_rush/0, expensive_event/0, birthday_today/0\nrule(r1, host_dinner_party, []) :- morning_rush.\nrule(r2, give_presentation, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(give_presentation, host_dinner_party).\ncomplement(host_dinner_party, give_presentation).",
        "NL Translation": "I can either host a dinner party or give a presentation. If there is a morning rush, I can still choose between hosting a dinner party or giving a presentation. Generally, I prefer to host a dinner party. However, if it is an expensive event, I prefer to give a presentation. If it is my birthday today, I prefer to host a dinner party. I can't at the same time host a dinner party and give a presentation."
    },
    {
        "Example Number": 190,
        "Gorgias Code": ":- dynamic hail_storm/0, boss_in_office/0, humid_day/0\nrule(r1, plan_meals, []) :- hail_storm.\nrule(r2, schedule_meeting, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, plan_meals).\ncomplement(plan_meals, schedule_meeting).",
        "NL Translation": "If there is a hail storm, I can either plan meals or schedule a meeting. Generally, I prefer to plan meals, but if the boss is in the office, I prefer to schedule a meeting. However, if it is a humid day, I prefer to plan meals. I can't at the same time plan meals and schedule a meeting."
    }
]