[
    {
        "Example Number": 72,
        "Gorgias Code": ":- dynamic family_gathering/0, vacation_planned/0, boss_in_office/0.\nrule(r1, finish_report, []) :- family_gathering.\nrule(r2, book_ride_share, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- family_gathering, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- family_gathering, vacation_planned, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, finish_report).\ncomplement(finish_report, book_ride_share).\ncomplement(family_gathering, vacation_planned).\ncomplement(vacation_planned, family_gathering).",
        "NL Translation": "If there is a family gathering, I finish the report. If a vacation is planned, I book a ride share. However, if there is both a family gathering and a vacation planned, I prefer to finish the report. But if a friend is in town during that time, I prefer to book a ride share. I can't at the same time finish the report and book a ride share. Family gathering and vacation planned aren't compatible. If my boss is in the office, I prefer to finish the report over booking a ride share."
    },
    {
        "Example Number": 274,
        "Gorgias Code": ":- dynamic unexpected_expense/0, invitation_from_friend/0.\nrule(r1, book_ride_share, []) :- unexpected_expense.\nrule(r2, organize_workspace, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- unexpected_expense, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- unexpected_expense, invitation_from_friend, friend_in_town.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, book_ride_share).\ncomplement(book_ride_share, organize_workspace).\ncomplement(unexpected_expense, invitation_from_friend).\ncomplement(invitation_from_friend, unexpected_expense).",
        "NL Translation": "I can either book a ride share or organize my workspace. If there is an unexpected expense, I prefer to book a ride share. If I have an invitation from a friend, I prefer to organize my workspace. However, if there is both an unexpected expense and an invitation from a friend, I prefer to book a ride share. If there is also a friend in town, I prefer to organize my workspace. I can't at the same time book a ride share and organize my workspace. Unexpected expense and invitation from a friend aren't compatible."
    },
    {
        "Example Number": 75,
        "Gorgias Code": ":- dynamic new_neighbor/0.\nrule(r1, meditate, []) :- new_neighbor.\nrule(r2, yoga_session, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\ncomplement(yoga_session, meditate).\ncomplement(meditate, yoga_session).",
        "NL Translation": "If I have a new neighbor, I can either meditate or have a yoga session. Generally, I prefer to meditate. I can't at the same time meditate and have a yoga session."
    },
    {
        "Example Number": 153,
        "Gorgias Code": ":- dynamic party_invitation/0, discount_on_flight/0\nrule(r1, visit_museum, []) :- party_invitation.\nrule(r2, clean_house, []) :- party_invitation.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(clean_house, visit_museum).\ncomplement(visit_museum, clean_house).",
        "NL Translation": "I can either visit the museum or clean the house if I have a party invitation. Generally, I prefer to visit the museum, but if there is a discount on a flight, I prefer to clean the house. I can't at the same time visit the museum and clean the house."
    },
    {
        "Example Number": 34,
        "Gorgias Code": ":- dynamic job_interview/0, good_weather/0, deadline_missed/0.\nrule(r1, go_shopping, []) :- job_interview.\nrule(r2, give_presentation, []) :- good_weather.\nrule(p1, prefer(r1, r2), []) :- job_interview, good_weather.\nrule(p2, prefer(r2, r1), []) :- job_interview, good_weather, rainy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\ncomplement(give_presentation, go_shopping).\ncomplement(go_shopping, give_presentation).\ncomplement(job_interview, good_weather).\ncomplement(good_weather, job_interview).",
        "NL Translation": "If I have a job interview, I go shopping. If the weather is good, I give a presentation. But if I have a job interview and the weather is good, I prefer to go shopping. However, if it's also a rainy day, I prefer to give a presentation. I can't at the same time go shopping and give a presentation. Job interview and good weather aren't compatible. If I missed a deadline, I prefer to give a presentation over going shopping."
    },
    {
        "Example Number": 37,
        "Gorgias Code": ":- dynamic expensive_event/0, project_extension/0.\nrule(r1, drive_car, []) :- expensive_event.\nrule(r2, rent_car, []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- expensive_event, project_extension.\nrule(p2, prefer(r2, r1), []) :- expensive_event, project_extension, humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, drive_car).\ncomplement(drive_car, rent_car).\ncomplement(expensive_event, project_extension).\ncomplement(project_extension, expensive_event).",
        "NL Translation": "If there is an expensive event, I drive my car. If there is a project extension, I rent a car. But if there is both an expensive event and a project extension, I prefer to drive my car. However, if it is also a humid day, I prefer to rent a car. I can't at the same time drive my car and rent a car. Expensive event and project extension aren't compatible."
    },
    {
        "Example Number": 259,
        "Gorgias Code": ":- dynamic unexpected_expense/0.\nrule(r1, buy_groceries, []) :- unexpected_expense.\nrule(r2, join_fitness_class, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []).\ncomplement(join_fitness_class, buy_groceries).\ncomplement(buy_groceries, join_fitness_class).",
        "NL Translation": "If there is an unexpected expense, I can either buy groceries or join a fitness class. Generally, I prefer to buy groceries. I can't at the same time buy groceries and join a fitness class."
    },
    {
        "Example Number": 98,
        "Gorgias Code": ":- dynamic cloudy_day/0, windy_day/0.\nrule(r1, review_documents, []) :- cloudy_day.\nrule(r2, organize_workspace, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, windy_day.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, windy_day, holiday_season.\nrule(c1, prefer(p2, p1), []).\ncomplement(organize_workspace, review_documents).\ncomplement(review_documents, organize_workspace).\ncomplement(cloudy_day, windy_day).\ncomplement(windy_day, cloudy_day).",
        "NL Translation": "If it is a cloudy day, I review documents. If it is a windy day, I organize my workspace. However, if it is both a cloudy day and a windy day, I prefer to review documents. But if it is also the holiday season, I prefer to organize my workspace. I can't at the same time organize my workspace and review documents. Cloudy day and windy day aren't compatible."
    },
    {
        "Example Number": 193,
        "Gorgias Code": ":- dynamic hot_day/0, extended_work_hours/0, family_emergency/0, deadline_missed/0, wedding_anniversary/0.\nrule(r1, host_dinner_party, []) :- hot_day.\nrule(r2, use_subway, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []) :- hot_day, extended_work_hours.\nrule(p2, prefer(r2, r1), []) :- hot_day, extended_work_hours, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- deadline_missed.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(use_subway, host_dinner_party).\ncomplement(host_dinner_party, use_subway).\ncomplement(hot_day, extended_work_hours).\ncomplement(extended_work_hours, hot_day).",
        "NL Translation": "If it is a hot day, I can host a dinner party. If I have extended work hours, I can use the subway. If it is a hot day and I have extended work hours, I prefer to host a dinner party. However, if it is a hot day, I have extended work hours, and it is the weekend, I prefer to use the subway. I can't at the same time host a dinner party and use the subway. A hot day and extended work hours aren't compatible. If there is a family emergency, I prefer to host a dinner party over using the subway. If I missed a deadline, I prefer to host a dinner party over using the subway. If it is my wedding anniversary, I prefer to host a dinner party over using the subway. If I prefer to host a dinner party, I prefer that over using the subway."
    },
    {
        "Example Number": 289,
        "Gorgias Code": ":- dynamic holiday_season/0, unexpected_expense/0, afternoon/0.\nrule(r1, give_presentation, []) :- holiday_season.\nrule(r2, do_laundry, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- holiday_season, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- holiday_season, unexpected_expense, networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, give_presentation).\ncomplement(give_presentation, do_laundry).\ncomplement(holiday_season, unexpected_expense).\ncomplement(unexpected_expense, holiday_season).",
        "NL Translation": "During the holiday season, I can either give a presentation or do laundry. If there is an unexpected expense, I can also do laundry. However, if it is both the holiday season and there is an unexpected expense, I prefer to give a presentation. If there is also a networking event, I prefer to do laundry instead. In the afternoon, I prefer to give a presentation over doing laundry. I can't at the same time give a presentation and do laundry. The holiday season and unexpected expense are not compatible."
    },
    {
        "Example Number": 250,
        "Gorgias Code": ":- dynamic hail_storm/0, project_extension/0, community_event/0\nrule(r1, go_to(cinema), []) :- hail_storm.\nrule(r2, attend_workshop, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, go_to(cinema)).\ncomplement(go_to(cinema), attend_workshop).",
        "NL Translation": "If there is a hail storm, I can either go to the cinema or attend a workshop. Generally, I prefer to go to the cinema, but if there is a project extension, I prefer to attend the workshop. However, if there is a community event, I prefer to go to the cinema. I can't at the same time go to the cinema and attend a workshop."
    },
    {
        "Example Number": 51,
        "Gorgias Code": ":- dynamic job_interview/0, vacation_planned/0\nrule(r1, attend_concert, []) :- job_interview.\nrule(r2, attend_workshop, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- vacation_planned.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_workshop, attend_concert).\ncomplement(attend_concert, attend_workshop).",
        "NL Translation": "If I have a job interview, I can either attend a concert or attend a workshop. Generally, I prefer to attend the concert, but if I have a vacation planned, I prefer to attend the workshop. I can't at the same time attend a concert and attend a workshop."
    },
    {
        "Example Number": 82,
        "Gorgias Code": ":- dynamic extended_work_hours/0, job_interview/0, birthday_today/0, unexpected_expense/0, family_emergency/0.\nrule(r1, make_coffee, []) :- extended_work_hours.\nrule(r2, attend_workshop, []) :- job_interview.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, job_interview.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, job_interview, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_expense.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- family_emergency.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_workshop, make_coffee).\ncomplement(make_coffee, attend_workshop).\ncomplement(extended_work_hours, job_interview).\ncomplement(job_interview, extended_work_hours).",
        "NL Translation": "I can either make coffee or attend a workshop. If I have extended work hours, I make coffee. If I have a job interview, I attend a workshop. However, if I have both extended work hours and a job interview, I prefer to make coffee. If it's the holiday season and I have both extended work hours and a job interview, I prefer to attend the workshop. I cannot make coffee and attend a workshop at the same time. If today is my birthday, I prefer to make coffee over attending the workshop. If there is an unexpected expense, I prefer to make coffee over attending the workshop. If there is a family emergency, I prefer to make coffee over attending the workshop. I can't have both extended work hours and a job interview at the same time."
    },
    {
        "Example Number": 174,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, morning_run, []) :- extended_work_hours.\nrule(r2, attend_meeting, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(attend_meeting, morning_run).\ncomplement(morning_run, attend_meeting).",
        "NL Translation": "If I have extended work hours, I can either go for a morning run or attend a meeting. Generally, I prefer to go for a morning run. I can't at the same time go for a morning run and attend a meeting."
    },
    {
        "Example Number": 115,
        "Gorgias Code": ":- dynamic good_investment/0.\nrule(r1, plan_meals, []) :- good_investment.\nrule(r2, travel_abroad, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\ncomplement(travel_abroad, plan_meals).\ncomplement(plan_meals, travel_abroad).",
        "NL Translation": "When I have a good investment, I can either plan meals or travel abroad. Generally, I prefer to plan meals over traveling abroad. I can't at the same time plan meals and travel abroad."
    },
    {
        "Example Number": 269,
        "Gorgias Code": ":- dynamic new_neighbor/0, hot_day/0, urgent_deadline/0.\nrule(r1, join_fitness_class, []) :- new_neighbor.\nrule(r2, rent_car, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, hot_day.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, hot_day, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, join_fitness_class).\ncomplement(join_fitness_class, rent_car).\ncomplement(new_neighbor, hot_day).\ncomplement(hot_day, new_neighbor).",
        "NL Translation": "If I have a new neighbor, I join a fitness class. If it's a hot day, I rent a car. But if I have a new neighbor and it's a hot day, I prefer to join the fitness class. However, if I also have extended work hours, I prefer to rent the car. I can't at the same time join the fitness class and rent a car. New neighbor and hot day aren't compatible. If I have an urgent deadline, I prefer to join the fitness class over renting the car."
    },
    {
        "Example Number": 80,
        "Gorgias Code": ":- dynamic holiday_season/0, morning_rush/0, school_reunion/0.\nrule(r1, order_taxi, []) :- holiday_season.\nrule(r2, water_plants, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- holiday_season, morning_rush.\nrule(p2, prefer(r2, r1), []) :- holiday_season, morning_rush, good_weather.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(water_plants, order_taxi).\ncomplement(order_taxi, water_plants).\ncomplement(holiday_season, morning_rush).\ncomplement(morning_rush, holiday_season).",
        "NL Translation": "During the holiday season, I can either order a taxi or water the plants. If it is the holiday season and there is a morning rush, I prefer to order a taxi. However, if it is also a good weather day, I prefer to water the plants. If there is a school reunion, I prefer to order a taxi over watering the plants. I can't at the same time order a taxi and water the plants. The holiday season and morning rush are not compatible."
    },
    {
        "Example Number": 1,
        "Gorgias Code": ":- dynamic birthday_today/0, concert_nearby/0\nrule(r1, clean_house, []) :- birthday_today.\nrule(r2, call_client, []) :- birthday_today.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(call_client, clean_house).\ncomplement(clean_house, call_client).",
        "NL Translation": "If today is my birthday, I can either clean the house or call a client. Generally, I prefer to clean the house, but if there is a concert nearby, I prefer to call the client. I can't at the same time clean the house and call the client."
    },
    {
        "Example Number": 195,
        "Gorgias Code": ":- dynamic concert_nearby/0, morning_rush/0, community_event/0.\nrule(r1, visit_doctor, []) :- concert_nearby.\nrule(r2, submit_timesheet, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, morning_rush.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, morning_rush, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(submit_timesheet, visit_doctor).\ncomplement(visit_doctor, submit_timesheet).\ncomplement(concert_nearby, morning_rush).\ncomplement(morning_rush, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I visit the doctor. If it is morning rush, I submit the timesheet. But if there is a concert nearby and it is morning rush, I prefer to visit the doctor. However, if it is also my birthday today, I prefer to submit the timesheet. I can't at the same time submit the timesheet and visit the doctor. Concert nearby and morning rush aren't compatible. If there is a community event, I prefer to visit the doctor over submitting the timesheet."
    },
    {
        "Example Number": 217,
        "Gorgias Code": ":- dynamic moving_house/0, night_time/0, good_investment/0\nrule(r1, book_flight, []) :- moving_house.\nrule(r2, book_ride_share, []) :- moving_house.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- night_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_investment.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, book_flight).\ncomplement(book_flight, book_ride_share).",
        "NL Translation": "If I am moving house, I can either book a flight or book a ride share. Generally, I prefer to book a flight but if it is night time, I prefer to book a ride share. However, if I have a good investment, I prefer to book a flight. I can't at the same time book a flight and book a ride share."
    },
    {
        "Example Number": 120,
        "Gorgias Code": ":- dynamic cloudy_day/0, feeling_sick/0\nrule(r1, take_picnic, []) :- cloudy_day.\nrule(r2, attend_concert, []) :- cloudy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_concert, take_picnic).\ncomplement(take_picnic, attend_concert).",
        "NL Translation": "If it is a cloudy day, I can either take a picnic or attend a concert. Generally, I prefer to take a picnic but if I am feeling sick, I prefer to attend the concert. I can't at the same time take a picnic and attend a concert."
    },
    {
        "Example Number": 23,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, team_project_due/0.\nrule(r1, go_gym, []) :- invitation_from_friend.\nrule(r2, reply_emails, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, team_project_due.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, team_project_due, good_weather.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, go_gym).\ncomplement(go_gym, reply_emails).\ncomplement(invitation_from_friend, team_project_due).\ncomplement(team_project_due, invitation_from_friend).",
        "NL Translation": "If I have an invitation from a friend, I go to the gym. If I have a team project due, I reply to emails. But if I have an invitation from a friend and a team project due, I prefer to go to the gym. However, if I also have good weather, I prefer to reply to emails. I can't at the same time go to the gym and reply to emails. Invitation from a friend and team project due aren't compatible."
    },
    {
        "Example Number": 68,
        "Gorgias Code": ":- dynamic unexpected_guest/0, discount_on_flight/0, low_budget/0.\nrule(r1, review_documents, []) :- unexpected_guest.\nrule(r2, take_bus, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, discount_on_flight.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, discount_on_flight, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_bus, review_documents).\ncomplement(review_documents, take_bus).\ncomplement(unexpected_guest, discount_on_flight).\ncomplement(discount_on_flight, unexpected_guest).",
        "NL Translation": "If I have an unexpected guest, I review documents. If there is a discount on a flight, I take the bus. But if I have an unexpected guest and a discount on a flight, I prefer to review documents. However, if I also have an important meeting, I prefer to take the bus. I can't at the same time review documents and take the bus. Unexpected guest and discount on flight aren't compatible. If I have a low budget, I prefer to take the bus."
    },
    {
        "Example Number": 129,
        "Gorgias Code": ":- dynamic good_weather/0, school_reunion/0\nrule(r1, call_client, []) :- good_weather.\nrule(r2, host_dinner_party, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(host_dinner_party, call_client).\ncomplement(call_client, host_dinner_party).",
        "NL Translation": "If the weather is good, I can either call a client or host a dinner party. Generally, I prefer to call a client, but if there is a school reunion, I prefer to host a dinner party. I can't at the same time call a client and host a dinner party."
    },
    {
        "Example Number": 149,
        "Gorgias Code": ":- dynamic vacation_planned/0, snowstorm/0\nrule(r1, evening_walk, []) :- vacation_planned.\nrule(r2, rent_car, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- snowstorm.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, evening_walk).\ncomplement(evening_walk, rent_car).",
        "NL Translation": "If I have a vacation planned, I can either go for an evening walk or rent a car. Generally, I prefer to go for an evening walk, but if there is a snowstorm, I prefer to rent a car. I can't at the same time go for an evening walk and rent a car."
    },
    {
        "Example Number": 166,
        "Gorgias Code": ":- dynamic good_investment/0, team_project_due/0, new_restaurant_to_try/0\nrule(r1, rent_car, []) :- good_investment.\nrule(r2, update_project_plan, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, rent_car).\ncomplement(rent_car, update_project_plan).",
        "NL Translation": "I can either rent a car or update the project plan. Generally, I prefer to rent a car. However, if there is a team project due, I prefer to update the project plan. If there is a new restaurant to try, I prefer to rent a car. I can't at the same time rent a car and update the project plan."
    },
    {
        "Example Number": 29,
        "Gorgias Code": ":- dynamic hail_storm/0, discount_on_flight/0\nrule(r1, update_project_plan, []) :- hail_storm.\nrule(r2, go_to(theater), []) :- hail_storm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- discount_on_flight.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_to(theater), update_project_plan).\ncomplement(update_project_plan, go_to(theater)).",
        "NL Translation": "If there is a hail storm, I can either update the project plan or go to the theater. Generally, I prefer to update the project plan, but if there is a discount on a flight, I prefer to go to the theater. I can't at the same time update the project plan and go to the theater."
    },
    {
        "Example Number": 27,
        "Gorgias Code": ":- dynamic subscription_due/0, financial_aid/0, discount_on_flight/0.\nrule(r1, meditate, []) :- subscription_due.\nrule(r2, schedule_meeting, []) :- financial_aid.\nrule(p1, prefer(r1, r2), []) :- subscription_due, financial_aid.\nrule(p2, prefer(r2, r1), []) :- subscription_due, financial_aid, good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, meditate).\ncomplement(meditate, schedule_meeting).\ncomplement(subscription_due, financial_aid).\ncomplement(financial_aid, subscription_due).",
        "NL Translation": "If my subscription is due, I meditate. If I have financial aid, I schedule a meeting. But if I have both a subscription due and financial aid, I prefer to meditate. However, if I have a good investment along with a subscription due and financial aid, I prefer to schedule a meeting. I can't at the same time meditate and schedule a meeting. Subscription due and financial aid aren't compatible. If I have a discount on a flight, I prefer to meditate over scheduling a meeting."
    },
    {
        "Example Number": 261,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, lunch_time/0, new_restaurant_to_try/0.\nrule(r1, finish_report, []) :- invitation_from_friend.\nrule(r2, evening_walk, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- invitation_from_friend, lunch_time.\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend, lunch_time, unexpected_expense.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\ncomplement(evening_walk, finish_report).\ncomplement(finish_report, evening_walk).\ncomplement(invitation_from_friend, lunch_time).\ncomplement(lunch_time, invitation_from_friend).",
        "NL Translation": "If I have an invitation from a friend, I finish the report. If it's lunch time, I go for an evening walk. But if I have an invitation from a friend and it's lunch time, I prefer to finish the report. However, if there's also an unexpected expense, I prefer to go for an evening walk. I can't at the same time finish the report and go for an evening walk. Invitation from a friend and lunch time aren't compatible. If there's a new restaurant to try, I prefer to finish the report over going for an evening walk."
    },
    {
        "Example Number": 230,
        "Gorgias Code": ":- dynamic discount_on_flight/0, family_gathering/0\nrule(r1, visit_family, []) :- discount_on_flight.\nrule(r2, order_taxi, []) :- discount_on_flight.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_gathering.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, visit_family).\ncomplement(visit_family, order_taxi).",
        "NL Translation": "I can either visit family or order a taxi. If there is a discount on the flight, I can choose either option. Generally, I prefer to visit family, but if there is a family gathering, I prefer to order a taxi. I can't at the same time visit family and order a taxi."
    }
]