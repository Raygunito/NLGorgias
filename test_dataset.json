[
    {
        "Example Number": 449,
        "Gorgias Code": ":- dynamic subscription_due/0, new_neighbor/0, moving_house/0.\nrule(r1, prepare_report, []) :- subscription_due.\nrule(r2, go_shopping, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- subscription_due, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- subscription_due, new_neighbor, wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- moving_house.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, prepare_report).\ncomplement(prepare_report, go_shopping).\ncomplement(subscription_due, new_neighbor).\ncomplement(new_neighbor, subscription_due).",
        "NL Translation": "If there is a subscription due, I prepare a report. If there is a new neighbor, I go shopping. I prefer to prepare a report over going shopping if there is a subscription due and a new neighbor. However, if there is a subscription due, a new neighbor, and a wedding anniversary, I prefer to go shopping. If I am moving house, I prefer preparing a report over going shopping."
    },
    {
        "Example Number": 122,
        "Gorgias Code": ":- dynamic good_weather/0, urgent_deadline/0\nrule(r1, attend_meeting, []) :- good_weather.\nrule(r2, join_fitness_class, []) :- good_weather.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- urgent_deadline.\nrule(c1, prefer(p2, p1), []).\ncomplement(join_fitness_class, attend_meeting).\ncomplement(attend_meeting, join_fitness_class).",
        "NL Translation": "When there is good weather, I attend the meeting or join the fitness class. Generally, I prefer to attend the meeting but if there is an urgent deadline, I prefer to join the fitness class. I can't at the same time attend the meeting and join the fitness class."
    },
    {
        "Example Number": 582,
        "Gorgias Code": ":- dynamic vacation_planned/0, lunch_time/0, cloudy_day/0, holiday_season/0, early_morning/0.\nrule(r1, ride_bike, []) :- vacation_planned.\nrule(r2, make_coffee, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, lunch_time.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, lunch_time, got_bonus.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- holiday_season.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- early_morning.\nrule(c5, prefer(c4, c3), []).\ncomplement(make_coffee, ride_bike).\ncomplement(ride_bike, make_coffee).\ncomplement(vacation_planned, lunch_time).\ncomplement(lunch_time, vacation_planned).",
        "NL Translation": "\"If there is a vacation planned, I ride a bike. If it's lunchtime, I make coffee. If both are true, I prefer to ride a bike, but if I also got a bonus, I prefer to make coffee. If it's a cloudy day, I prefer to make coffee over riding a bike. If it's the holiday season, I prefer to ride a bike over making coffee. If it's early morning, I prefer making coffee over riding a bike.\""
    },
    {
        "Example Number": 385,
        "Gorgias Code": ":- dynamic family_emergency/0, early_morning/0, weekend/0.\nrule(r1, update_project_plan, []) :- family_emergency.\nrule(r2, drive_car, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- family_emergency, early_morning.\nrule(p2, prefer(r2, r1), []) :- family_emergency, early_morning, relationship_break.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, update_project_plan).\ncomplement(update_project_plan, drive_car).\ncomplement(family_emergency, early_morning).\ncomplement(early_morning, family_emergency).",
        "NL Translation": "\"If there is a family emergency, I update the project plan. If it's early morning, I drive the car. But if there is both a family emergency and it's early morning, I prefer to update the project plan; however, if there is also a relationship break, I prefer to drive the car. I can't at the same time update the project plan and drive the car, and family emergency and early morning are not compatible. If it's the weekend, I prefer to update the project plan over driving the car.\""
    },
    {
        "Example Number": 970,
        "Gorgias Code": ":- dynamic hail_storm/0, windy_day/0, got_bonus/0.\nrule(r1, rent_car, []) :- hail_storm.\nrule(r2, buy_groceries, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- hail_storm, windy_day.\nrule(p2, prefer(r2, r1), []) :- hail_storm, windy_day, birthday_today.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, rent_car).\ncomplement(rent_car, buy_groceries).\ncomplement(hail_storm, windy_day).\ncomplement(windy_day, hail_storm).",
        "NL Translation": "\"If there is a hail storm, I rent a car. If it's a windy day, I buy groceries. If both conditions are met, I prefer to rent a car, however if it's also my birthday today, I prefer to buy groceries. I can't at the same time rent a car and buy groceries, and hail storm and windy day are not compatible.\""
    },
    {
        "Example Number": 684,
        "Gorgias Code": ":- dynamic early_morning/0, school_reunion/0, unexpected_guest/0.\nrule(r1, go_to_bar, []) :- early_morning.\nrule(r2, make_coffee, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- early_morning, school_reunion.\nrule(p2, prefer(r2, r1), []) :- early_morning, school_reunion, concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- unexpected_guest.\nrule(c3, prefer(c2, c1), []).\ncomplement(make_coffee, go_to_bar).\ncomplement(go_to_bar, make_coffee).\ncomplement(early_morning, school_reunion).\ncomplement(school_reunion, early_morning).",
        "NL Translation": "If it is early morning, I go to the bar. If there is a school reunion, I make coffee. If both early morning and school reunion, I prefer to go to the bar, but if there is also a concert nearby, I prefer to make coffee. If there is an unexpected guest, I prefer to go to the bar over making coffee."
    },
    {
        "Example Number": 710,
        "Gorgias Code": ":- dynamic lunch_time/0, expensive_event/0\nrule(r1, cook_dinner, []) :- lunch_time.\nrule(r2, travel_abroad, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(travel_abroad, cook_dinner).\ncomplement(cook_dinner, travel_abroad).",
        "NL Translation": "\"When it is lunch time, I can either cook dinner or travel abroad. Generally, I prefer to cook dinner but if there is an expensive event, I prefer to travel abroad. I can't at the same time cook dinner and travel abroad.\""
    },
    {
        "Example Number": 114,
        "Gorgias Code": ":- dynamic networking_event/0, wedding_anniversary/0, windy_day/0, hail_storm/0, new_neighbor/0.\nrule(r1, give_presentation, []) :- networking_event.\nrule(r2, organize_workspace, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- networking_event, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- networking_event, wedding_anniversary, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- hail_storm.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_neighbor.\nrule(c5, prefer(c4, c3), []).\ncomplement(organize_workspace, give_presentation).\ncomplement(give_presentation, organize_workspace).\ncomplement(networking_event, wedding_anniversary).\ncomplement(wedding_anniversary, networking_event).",
        "NL Translation": "If there is a networking event, I give a presentation. If it's a wedding anniversary, I organize my workspace. I prefer giving a presentation over organizing my workspace if there is a networking event and a wedding anniversary. However, if there is a new restaurant to try, I prefer organizing my workspace over giving a presentation. I can't give a presentation and organize my workspace at the same time. If it's a windy day, I prefer giving a presentation over organizing my workspace. If there is a hail storm, I prefer organizing my workspace over giving a presentation. If there is a new neighbor, I prefer giving a presentation over organizing my workspace."
    },
    {
        "Example Number": 310,
        "Gorgias Code": ":- dynamic relationship_break/0, cloudy_day/0\nrule(r1, take_train, []) :- relationship_break.\nrule(r2, drive_car, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, take_train).\ncomplement(take_train, drive_car).",
        "NL Translation": "When there is a relationship break, I either take the train or drive the car. Generally, I prefer to take the train but if it is a cloudy day I prefer to drive the car. I cannot take the train and drive the car at the same time."
    },
    {
        "Example Number": 725,
        "Gorgias Code": ":- dynamic new_neighbor/0, unexpected_expense/0\nrule(r1, meditate, []) :- new_neighbor.\nrule(r2, take_train, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_expense.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_train, meditate).\ncomplement(meditate, take_train).",
        "NL Translation": "When there is a new neighbor, I meditate or take the train. Generally, I prefer to meditate but if there is an unexpected expense, I prefer to take the train. I cannot meditate and take the train at the same time."
    },
    {
        "Example Number": 617,
        "Gorgias Code": ":- dynamic night_time/0, concert_nearby/0, cloudy_day/0\nrule(r1, dispose_trash, []) :- night_time.\nrule(r2, host_dinner_party, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(host_dinner_party, dispose_trash).\ncomplement(dispose_trash, host_dinner_party).",
        "NL Translation": "If it is night time, I dispose of trash or host a dinner party. Generally, I prefer to dispose of trash, but if there is a concert nearby, I prefer to host a dinner party. However, if it is a cloudy day, I prefer to dispose of trash over hosting a dinner party. I cannot dispose of trash and host a dinner party at the same time."
    },
    {
        "Example Number": 534,
        "Gorgias Code": ":- dynamic wedding_anniversary/0, holiday_season/0\nrule(r1, take_bus, []) :- wedding_anniversary.\nrule(r2, rent_car, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- holiday_season.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, take_bus).\ncomplement(take_bus, rent_car).",
        "NL Translation": "When there is a wedding anniversary, I take the bus or rent a car. Generally, I prefer to take the bus but if it is the holiday season, I prefer to rent a car."
    },
    {
        "Example Number": 136,
        "Gorgias Code": ":- dynamic tax_refund/0, project_extension/0\nrule(r1, organize_workspace, []) :- tax_refund.\nrule(r2, use_subway, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- project_extension.\nrule(c1, prefer(p2, p1), []).\ncomplement(use_subway, organize_workspace).\ncomplement(organize_workspace, use_subway).",
        "NL Translation": "If I have a tax refund, I organize my workspace. If I have a tax refund, I use the subway. I prefer to organize my workspace over using the subway. If I have a project extension, I prefer to use the subway over organizing my workspace."
    },
    {
        "Example Number": 565,
        "Gorgias Code": ":- dynamic concert_nearby/0, unexpected_expense/0\nrule(r1, schedule_meeting, []) :- concert_nearby.\nrule(r2, cycle_to_work, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- unexpected_expense.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, schedule_meeting).\ncomplement(schedule_meeting, cycle_to_work).",
        "NL Translation": "If there is a nearby concert, I schedule a meeting or cycle to work. Generally, I prefer to schedule a meeting but if there is an unexpected expense, I prefer to cycle to work."
    },
    {
        "Example Number": 87,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, go_to(restaurant), []) :- extended_work_hours.\nrule(r2, cycle_to_work, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(cycle_to_work, go_to(restaurant)).\ncomplement(go_to(restaurant), cycle_to_work).",
        "NL Translation": "When I have extended work hours, I go to a restaurant. Otherwise, I cycle to work. I prefer to go to a restaurant over cycling to work. Cycling to work and going to a restaurant are mutually exclusive."
    },
    {
        "Example Number": 81,
        "Gorgias Code": ":- dynamic subscription_due/0, family_gathering/0, client_feedback/0, wedding_anniversary/0, school_reunion/0.\nrule(r1, organize_workspace, []) :- subscription_due.\nrule(r2, go_to(cinema), []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- subscription_due, family_gathering.\nrule(p2, prefer(r2, r1), []) :- subscription_due, family_gathering, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- school_reunion.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(cinema), organize_workspace).\ncomplement(organize_workspace, go_to(cinema)).\ncomplement(subscription_due, family_gathering).\ncomplement(family_gathering, subscription_due).",
        "NL Translation": "\"When there is a subscription due, I organize my workspace. If there is a family gathering, I go to the cinema. If both the subscription is due and there is a family gathering, I prefer to organize my workspace; however, if I am also moving house, I prefer to go to the cinema. I can't at the same time organize my workspace and go to the cinema. Subscription due and family gathering are not compatible. If there is client feedback, I prefer to go to the cinema. If there is a wedding anniversary, I prefer to organize my workspace. If there is a school reunion, I prefer to go to the cinema.\""
    },
    {
        "Example Number": 793,
        "Gorgias Code": ":- dynamic moving_house/0, hail_storm/0.\nrule(r1, meditate, []) :- moving_house.\nrule(r2, buy_groceries, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- moving_house, hail_storm.\nrule(p2, prefer(r2, r1), []) :- moving_house, hail_storm, new_neighbor.\nrule(c1, prefer(p2, p1), []).\ncomplement(buy_groceries, meditate).\ncomplement(meditate, buy_groceries).\ncomplement(moving_house, hail_storm).\ncomplement(hail_storm, moving_house).",
        "NL Translation": "\"If I am moving house, I meditate. If there is a hail storm, I buy groceries. But if I am moving house and there is a hail storm, I prefer to meditate; however, if there is also a new neighbor, I prefer to buy groceries. I can't at the same time buy groceries and meditate, and moving house and hail storm aren't compatible.\""
    },
    {
        "Example Number": 621,
        "Gorgias Code": ":- dynamic weekend/0, new_neighbor/0.\nrule(r1, order_taxi, []) :- weekend.\nrule(r2, attend_meeting, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []) :- weekend, new_neighbor.\nrule(p2, prefer(r2, r1), []) :- weekend, new_neighbor, school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, order_taxi).\ncomplement(order_taxi, attend_meeting).\ncomplement(weekend, new_neighbor).\ncomplement(new_neighbor, weekend).",
        "NL Translation": "If it is the weekend, I order a taxi. If there is a new neighbor, I attend a meeting. However, if it is the weekend and there is a new neighbor, I prefer to order a taxi. If it is the weekend, there is a new neighbor, and there is a school reunion, I prefer to attend the meeting."
    },
    {
        "Example Number": 299,
        "Gorgias Code": ":- dynamic school_reunion/0, relationship_break/0, team_project_due/0, urgent_deadline/0, subscription_due/0.\nrule(r1, finish_report, []) :- school_reunion.\nrule(r2, visit_doctor, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- school_reunion, relationship_break.\nrule(p2, prefer(r2, r1), []) :- school_reunion, relationship_break, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- urgent_deadline.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- subscription_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(visit_doctor, finish_report).\ncomplement(finish_report, visit_doctor).\ncomplement(school_reunion, relationship_break).\ncomplement(relationship_break, school_reunion).",
        "NL Translation": "If there is a school reunion, I finish the report. If there is a relationship break, I visit the doctor. If both the school reunion and relationship break occur, I prefer to finish the report; however, if there is also an invitation from a friend, I prefer to visit the doctor. If there is a team project due, I prefer to finish the report over visiting the doctor. If there is an urgent deadline, I prefer to visit the doctor over finishing the report. If there is a subscription due, I prefer to finish the report over visiting the doctor."
    },
    {
        "Example Number": 415,
        "Gorgias Code": ":- dynamic unexpected_guest/0, unexpected_expense/0, snowstorm/0.\nrule(r1, go_to(restaurant), []) :- unexpected_guest.\nrule(r2, attend_meeting, []) :- unexpected_expense.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, unexpected_expense.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, unexpected_expense, new_restaurant_to_try.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- snowstorm.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_meeting, go_to(restaurant)).\ncomplement(go_to(restaurant), attend_meeting).\ncomplement(unexpected_guest, unexpected_expense).\ncomplement(unexpected_expense, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I go to a restaurant. If there is an unexpected expense, I attend a meeting. But if there are both an unexpected guest and unexpected expense, I prefer to go to a restaurant; however, if there is a new restaurant to try, I prefer to attend a meeting. In case of a snowstorm, I prefer to attend a meeting over going to a restaurant. I cannot go to a restaurant and attend a meeting at the same time, and unexpected guests and unexpected expenses are not compatible."
    },
    {
        "Example Number": 17,
        "Gorgias Code": ":- dynamic financial_aid/0, family_gathering/0, relationship_break/0.\nrule(r1, take_bus, []) :- financial_aid.\nrule(r2, do_laundry, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []) :- financial_aid, family_gathering.\nrule(p2, prefer(r2, r1), []) :- financial_aid, family_gathering, holiday_season.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- relationship_break.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, take_bus).\ncomplement(take_bus, do_laundry).\ncomplement(financial_aid, family_gathering).\ncomplement(family_gathering, financial_aid).",
        "NL Translation": "If I have financial aid, I take the bus. If there is a family gathering, I do laundry. If I have both financial aid and a family gathering, I prefer to take the bus; however, if it's also the holiday season, I prefer to do laundry. In case of a relationship break, I prefer taking the bus over doing laundry."
    },
    {
        "Example Number": 573,
        "Gorgias Code": ":- dynamic humid_day/0, hail_storm/0, community_event/0, school_reunion/0, birthday_today/0.\nrule(r1, go_gym, []) :- humid_day.\nrule(r2, water_plants, []) :- hail_storm.\nrule(p1, prefer(r1, r2), []) :- humid_day, hail_storm.\nrule(p2, prefer(r2, r1), []) :- humid_day, hail_storm, moving_house.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- birthday_today.\nrule(c5, prefer(c4, c3), []).\ncomplement(water_plants, go_gym).\ncomplement(go_gym, water_plants).\ncomplement(humid_day, hail_storm).\ncomplement(hail_storm, humid_day).",
        "NL Translation": "If it is a humid day, I go to the gym or water the plants. Generally, I prefer to go to the gym, but if there is a hail storm, I prefer to water the plants. However, if it is both a humid day and hail storm, I prefer to go to the gym. If there is a community event, I prefer to water the plants. If there is a school reunion, I prefer to go to the gym. If it is my birthday today, I prefer to water the plants."
    },
    {
        "Example Number": 587,
        "Gorgias Code": ":- dynamic snowstorm/0.\nrule(r1, prepare_report, []) :- snowstorm.\nrule(r2, visit_museum, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\ncomplement(visit_museum, prepare_report).\ncomplement(prepare_report, visit_museum).",
        "NL Translation": "When there is a snowstorm, I prepare a report. When there is a snowstorm, I visit the museum. I prefer to prepare a report over visiting the museum. I can't at the same time visit the museum and prepare a report."
    },
    {
        "Example Number": 939,
        "Gorgias Code": ":- dynamic relationship_break/0, subscription_due/0\nrule(r1, attend_concert, []) :- relationship_break.\nrule(r2, give_presentation, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(give_presentation, attend_concert).\ncomplement(attend_concert, give_presentation).",
        "NL Translation": "If there is a relationship break, attend a concert or give a presentation. Generally, prefer attending a concert but if the subscription is due, prefer giving a presentation. Can't attend a concert and give a presentation at the same time."
    },
    {
        "Example Number": 627,
        "Gorgias Code": ":- dynamic deadline_missed/0.\nrule(r1, prepare_report, []) :- deadline_missed.\nrule(r2, book_ride_share, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_ride_share, prepare_report).\ncomplement(prepare_report, book_ride_share).",
        "NL Translation": "When the deadline is missed, I prepare a report or book a ride share. I prefer to prepare a report over booking a ride share."
    },
    {
        "Example Number": 728,
        "Gorgias Code": ":- dynamic party_invitation/0, new_restaurant_to_try/0, wedding_anniversary/0.\nrule(r1, yoga_session, []) :- party_invitation.\nrule(r2, use_subway, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- party_invitation, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- party_invitation, new_restaurant_to_try, school_reunion.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- wedding_anniversary.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, yoga_session).\ncomplement(yoga_session, use_subway).\ncomplement(party_invitation, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, party_invitation).",
        "NL Translation": "\"If there is a party invitation, I attend a yoga session. If there is a new restaurant to try, I use the subway. If both the party invitation and new restaurant to try are present, I prefer the yoga session; however, if there is also a school reunion, I prefer using the subway. If there is a wedding anniversary, I prefer using the subway over attending a yoga session. I cannot attend a yoga session and use the subway at the same time, and party invitation and new restaurant to try are not compatible.\""
    },
    {
        "Example Number": 316,
        "Gorgias Code": ":- dynamic holiday_season/0, networking_event/0\nrule(r1, host_dinner_party, []) :- holiday_season.\nrule(r2, order_taxi, []) :- holiday_season.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- networking_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(order_taxi, host_dinner_party).\ncomplement(host_dinner_party, order_taxi).",
        "NL Translation": "\"When it is holiday season, I either host a dinner party or order a taxi. Generally, I prefer to host a dinner party but if there is a networking event, I prefer to order a taxi. I can't at the same time host a dinner party and order a taxi.\""
    },
    {
        "Example Number": 512,
        "Gorgias Code": ":- dynamic tax_refund/0, dusk/0, subscription_due/0.\nrule(r1, make_coffee, []) :- tax_refund.\nrule(r2, visit_museum, []) :- dusk.\nrule(p1, prefer(r1, r2), []) :- tax_refund, dusk.\nrule(p2, prefer(r2, r1), []) :- tax_refund, dusk, early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(visit_museum, make_coffee).\ncomplement(make_coffee, visit_museum).\ncomplement(tax_refund, dusk).\ncomplement(dusk, tax_refund).",
        "NL Translation": "If I have a tax refund, I make coffee. If it's dusk, I visit the museum. If I have both a tax refund and it's dusk, I prefer to make coffee; however, if it's also early morning, I prefer to visit the museum. I can't at the same time make coffee and visit the museum, and tax refund and dusk aren't compatible. If there is a subscription due, I prefer to make coffee over visiting the museum."
    },
    {
        "Example Number": 106,
        "Gorgias Code": ":- dynamic dusk/0, team_project_due/0\nrule(r1, go_to(theater), []) :- dusk.\nrule(r2, reply_emails, []) :- dusk.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\ncomplement(reply_emails, go_to(theater)).\ncomplement(go_to(theater), reply_emails).",
        "NL Translation": "When it is dusk, I can either go to the theater or reply to emails. Generally, I prefer to go to the theater but if I have a team project due, I prefer to reply to emails."
    },
    {
        "Example Number": 345,
        "Gorgias Code": ":- dynamic got_bonus/0.\nrule(r1, swim_session, []) :- got_bonus.\nrule(r2, prepare_report, []) :- got_bonus.\nrule(p1, prefer(r1, r2), []).\ncomplement(prepare_report, swim_session).\ncomplement(swim_session, prepare_report).",
        "NL Translation": "When I got a bonus, I either have a swim session or prepare a report. I prefer to have a swim session over preparing a report. I cannot have a swim session and prepare a report at the same time."
    },
    {
        "Example Number": 700,
        "Gorgias Code": ":- dynamic extended_work_hours/0.\nrule(r1, prepare_report, []) :- extended_work_hours.\nrule(r2, swim_session, []) :- extended_work_hours.\nrule(p1, prefer(r1, r2), []).\ncomplement(swim_session, prepare_report).\ncomplement(prepare_report, swim_session).",
        "NL Translation": "When there are extended work hours, I either prepare a report or have a swim session. I prefer to prepare a report over having a swim session. I cannot prepare a report and have a swim session at the same time."
    },
    {
        "Example Number": 849,
        "Gorgias Code": ":- dynamic school_reunion/0, vacation_planned/0.\nrule(r1, go_to(cinema), []) :- school_reunion.\nrule(r2, submit_timesheet, []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []) :- school_reunion, vacation_planned.\nrule(p2, prefer(r2, r1), []) :- school_reunion, vacation_planned, early_morning.\nrule(c1, prefer(p2, p1), []).\ncomplement(submit_timesheet, go_to(cinema)).\ncomplement(go_to(cinema), submit_timesheet).\ncomplement(school_reunion, vacation_planned).\ncomplement(vacation_planned, school_reunion).",
        "NL Translation": "If there is a school reunion, I go to the cinema. If I have a vacation planned, I submit a timesheet. If I have both a school reunion and a vacation planned, I prefer to go to the cinema; however, if it's also early morning, I prefer to submit a timesheet. I can't at the same time go to the cinema and submit a timesheet, and school reunion and vacation planned are not compatible."
    },
    {
        "Example Number": 83,
        "Gorgias Code": ":- dynamic unexpected_guest/0, tax_refund/0, concert_nearby/0, discount_on_flight/0, job_interview/0.\nrule(r1, cycling_session, []) :- unexpected_guest.\nrule(r2, organize_workspace, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, tax_refund.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, tax_refund, expensive_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- job_interview.\nrule(c5, prefer(c4, c3), []).\ncomplement(organize_workspace, cycling_session).\ncomplement(cycling_session, organize_workspace).\ncomplement(unexpected_guest, tax_refund).\ncomplement(tax_refund, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I have a cycling session. If I receive a tax refund, I organize my workspace. If both happen, I prefer to have a cycling session, but if there is also an expensive event, I prefer to organize my workspace. I can't do both at the same time. If there is a concert nearby, I prefer to organize my workspace, and if there is a discount on a flight, I prefer to have a cycling session. If there is a job interview, I prefer to have a cycling session over organizing my workspace."
    },
    {
        "Example Number": 848,
        "Gorgias Code": ":- dynamic new_neighbor/0, family_gathering/0, financial_aid/0\nrule(r1, cycle_to_work, []) :- new_neighbor.\nrule(r2, dispose_trash, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- financial_aid.\nrule(c3, prefer(c2, c1), []).\ncomplement(dispose_trash, cycle_to_work).\ncomplement(cycle_to_work, dispose_trash).",
        "NL Translation": "\"When there is a new neighbor, I either cycle to work or dispose of trash. Generally, I prefer to cycle to work but if there is a family gathering, I prefer to dispose of trash. If there is financial aid, I prefer to cycle to work over disposing of trash. I can't at the same time cycle to work and dispose of trash.\""
    },
    {
        "Example Number": 717,
        "Gorgias Code": ":- dynamic relationship_break/0, party_invitation/0\nrule(r1, prepare_report, []) :- relationship_break.\nrule(r2, read_book, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- party_invitation.\nrule(c1, prefer(p2, p1), []).\ncomplement(read_book, prepare_report).\ncomplement(prepare_report, read_book).",
        "NL Translation": "When there is a relationship break, I prepare a report or read a book. Generally, I prefer to prepare a report but if there is a party invitation, I prefer to read a book. I can't at the same time prepare a report and read a book."
    },
    {
        "Example Number": 34,
        "Gorgias Code": ":- dynamic birthday_today/0, important_meeting/0, concert_nearby/0.\nrule(r1, cook_dinner, []) :- birthday_today.\nrule(r2, cycle_to_work, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- birthday_today, important_meeting.\nrule(p2, prefer(r2, r1), []) :- birthday_today, important_meeting, dusk.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycle_to_work, cook_dinner).\ncomplement(cook_dinner, cycle_to_work).\ncomplement(birthday_today, important_meeting).\ncomplement(important_meeting, birthday_today).",
        "NL Translation": "\"If it is your birthday today, you cook dinner. If you have an important meeting, you cycle to work. If it's both your birthday and an important meeting, you prefer to cook dinner; however, if it's also dusk, you prefer to cycle to work. You cannot both cycle to work and cook dinner, and having a birthday today and an important meeting are not compatible. If there is a concert nearby, you prefer to cook dinner over cycling to work.\""
    },
    {
        "Example Number": 288,
        "Gorgias Code": ":- dynamic good_weather/0, expensive_event/0, got_bonus/0, rainy_day/0, windy_day/0.\nrule(r1, organize_workspace, []) :- good_weather.\nrule(r2, go_to(park), []) :- expensive_event.\nrule(p1, prefer(r1, r2), []) :- good_weather, expensive_event.\nrule(p2, prefer(r2, r1), []) :- good_weather, expensive_event, family_emergency.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- rainy_day.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- windy_day.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to(park), organize_workspace).\ncomplement(organize_workspace, go_to(park)).\ncomplement(good_weather, expensive_event).\ncomplement(expensive_event, good_weather).",
        "NL Translation": "If there is good weather, I organize my workspace or go to the park. Generally, I prefer to organize my workspace, but if there is an expensive event, I prefer to go to the park. However, if there is a family emergency, I prefer to go to the park. Additionally, if I have received a bonus, I prefer to organize my workspace. On a rainy day, I prefer to go to the park. On a windy day, I prefer to organize my workspace."
    },
    {
        "Example Number": 698,
        "Gorgias Code": ":- dynamic new_neighbor/0, important_meeting/0.\nrule(r1, review_documents, []) :- new_neighbor.\nrule(r2, drive_car, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, important_meeting.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, important_meeting, school_reunion.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, review_documents).\ncomplement(review_documents, drive_car).\ncomplement(new_neighbor, important_meeting).\ncomplement(important_meeting, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I review documents. If there is an important meeting, I drive the car. If there is both a new neighbor and an important meeting, I prefer to review documents. However, if there is also a school reunion, I prefer to drive the car. I cannot review documents and drive the car at the same time, and having a new neighbor and an important meeting are not compatible."
    },
    {
        "Example Number": 634,
        "Gorgias Code": ":- dynamic weekend/0.\nrule(r1, take_picnic, []) :- weekend.\nrule(r2, dispose_trash, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\ncomplement(dispose_trash, take_picnic).\ncomplement(take_picnic, dispose_trash).",
        "NL Translation": "When it is the weekend, I either take a picnic or dispose trash. Generally, I prefer to take a picnic over disposing trash. I cannot do both take a picnic and dispose trash at the same time."
    },
    {
        "Example Number": 600,
        "Gorgias Code": ":- dynamic early_morning/0.\nrule(r1, schedule_meeting, []) :- early_morning.\nrule(r2, make_coffee, []) :- early_morning.\nrule(p1, prefer(r1, r2), []).\ncomplement(make_coffee, schedule_meeting).\ncomplement(schedule_meeting, make_coffee).",
        "NL Translation": "When it is early morning, I schedule a meeting or make coffee. Generally, I prefer to schedule a meeting over making coffee. I can't at the same time make coffee and schedule a meeting."
    },
    {
        "Example Number": 155,
        "Gorgias Code": ":- dynamic new_neighbor/0, team_project_due/0, lunch_time/0\nrule(r1, morning_run, []) :- new_neighbor.\nrule(r2, buy_groceries, []) :- new_neighbor.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- team_project_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- lunch_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(buy_groceries, morning_run).\ncomplement(morning_run, buy_groceries).",
        "NL Translation": "\"If there is a new neighbor, I can either go for a morning run or buy groceries. Generally, I prefer to go for a morning run but if there is a team project due, I prefer to buy groceries. However, if it is lunchtime, I prefer to go for a morning run over buying groceries. I can't at the same time go for a morning run and buy groceries.\""
    },
    {
        "Example Number": 198,
        "Gorgias Code": ":- dynamic night_time/0.\nrule(r1, book_flight, []) :- night_time.\nrule(r2, plan_meals, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\ncomplement(plan_meals, book_flight).\ncomplement(book_flight, plan_meals).",
        "NL Translation": "If it is night time, I book a flight or plan meals. Generally, I prefer to book a flight over planning meals. I cannot book a flight and plan meals at the same time."
    },
    {
        "Example Number": 127,
        "Gorgias Code": ":- dynamic humid_day/0, feeling_sick/0, client_feedback/0\nrule(r1, explore_city, []) :- humid_day.\nrule(r2, schedule_meeting, []) :- humid_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- feeling_sick.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\ncomplement(schedule_meeting, explore_city).\ncomplement(explore_city, schedule_meeting).",
        "NL Translation": "If it is a humid day, I explore the city or schedule a meeting. Generally, I prefer to explore the city but if I am feeling sick, I prefer to schedule a meeting. However, if there is client feedback, I prefer to explore the city. I cannot explore the city and schedule a meeting at the same time."
    },
    {
        "Example Number": 186,
        "Gorgias Code": ":- dynamic feeling_sick/0, family_gathering/0, birthday_today/0\nrule(r1, cook_dinner, []) :- feeling_sick.\nrule(r2, review_documents, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- family_gathering.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\ncomplement(review_documents, cook_dinner).\ncomplement(cook_dinner, review_documents).",
        "NL Translation": "If I am feeling sick, I cook dinner. If I am feeling sick, I review documents. Generally, I prefer to cook dinner but if there is a family gathering, I prefer to review documents. However, if it is my birthday today, I prefer to cook dinner. I can't at the same time cook dinner and review documents."
    },
    {
        "Example Number": 518,
        "Gorgias Code": ":- dynamic family_gathering/0, project_extension/0, new_neighbor/0.\nrule(r1, visit_museum, []) :- family_gathering.\nrule(r2, go_to(cinema), []) :- project_extension.\nrule(p1, prefer(r1, r2), []) :- family_gathering, project_extension.\nrule(p2, prefer(r2, r1), []) :- family_gathering, project_extension, humid_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(cinema), visit_museum).\ncomplement(visit_museum, go_to(cinema)).\ncomplement(family_gathering, project_extension).\ncomplement(project_extension, family_gathering).",
        "NL Translation": "If there is a family gathering, I visit the museum. If there is a project extension, I go to the cinema. If both are present, I prefer to visit the museum; however, if it's also a humid day, I prefer to go to the cinema. I cannot visit the museum and go to the cinema at the same time, and family gathering and project extension are not compatible. If there is a new neighbor, I prefer to visit the museum over going to the cinema."
    },
    {
        "Example Number": 408,
        "Gorgias Code": ":- dynamic birthday_today/0, early_morning/0, important_meeting/0.\nrule(r1, dispose_trash, []) :- birthday_today.\nrule(r2, update_project_plan, []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- birthday_today, early_morning.\nrule(p2, prefer(r2, r1), []) :- birthday_today, early_morning, friend_in_town.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\ncomplement(update_project_plan, dispose_trash).\ncomplement(dispose_trash, update_project_plan).\ncomplement(birthday_today, early_morning).\ncomplement(early_morning, birthday_today).",
        "NL Translation": "If it is your birthday today, you should dispose of the trash. If it is early morning, you should update the project plan. If it is both your birthday and early morning, you should dispose of the trash; however, if a friend is in town as well, you should update the project plan. If there is an important meeting, you should prefer updating the project plan over disposing of the trash."
    },
    {
        "Example Number": 715,
        "Gorgias Code": ":- dynamic medical_appointment/0, new_restaurant_to_try/0.\nrule(r1, evening_walk, []) :- medical_appointment.\nrule(r2, drive_car, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- medical_appointment, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- medical_appointment, new_restaurant_to_try, morning_rush.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, evening_walk).\ncomplement(evening_walk, drive_car).\ncomplement(medical_appointment, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, medical_appointment).",
        "NL Translation": "If there is a medical appointment, I go for an evening walk. If there is a new restaurant to try, I drive the car. If I have both a medical appointment and a new restaurant to try, I prefer to go for an evening walk; however, if it's also during the morning rush, I prefer to drive the car."
    },
    {
        "Example Number": 15,
        "Gorgias Code": ":- dynamic snowstorm/0, low_budget/0, good_weather/0\nrule(r1, go_to(cinema), []) :- snowstorm.\nrule(r2, go_to(theater), []) :- snowstorm.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), go_to(cinema)).\ncomplement(go_to(cinema), go_to(theater)).",
        "NL Translation": "\"When there is a snowstorm, I go to the cinema or the theater. Generally, I prefer to go to the cinema but if I have a low budget, I prefer to go to the theater. However, if the weather is good, I prefer to go to the cinema. I can't at the same time go to the cinema and the theater.\""
    },
    {
        "Example Number": 932,
        "Gorgias Code": ":- dynamic concert_nearby/0, unexpected_guest/0.\nrule(r1, take_picnic, []) :- concert_nearby.\nrule(r2, book_ride_share, []) :- unexpected_guest.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, unexpected_guest.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, unexpected_guest, job_interview.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, take_picnic).\ncomplement(take_picnic, book_ride_share).\ncomplement(concert_nearby, unexpected_guest).\ncomplement(unexpected_guest, concert_nearby).",
        "NL Translation": "If there is a nearby concert, I take a picnic. If there is an unexpected guest, I book a ride share. If both the concert is nearby and there is an unexpected guest, I prefer to book a ride share. However, if there is also a job interview, I prefer to take a picnic. I can't at the same time take a picnic and book a ride share, and concert nearby and unexpected guest aren't compatible."
    },
    {
        "Example Number": 964,
        "Gorgias Code": ":- dynamic afternoon/0, wedding_anniversary/0\nrule(r1, prepare_report, []) :- afternoon.\nrule(r2, evening_walk, []) :- afternoon.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- wedding_anniversary.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, prepare_report).\ncomplement(prepare_report, evening_walk).",
        "NL Translation": "When it is afternoon, I prepare a report or go for an evening walk. Generally, I prefer to prepare a report but if it is our wedding anniversary, I prefer to go for an evening walk."
    },
    {
        "Example Number": 459,
        "Gorgias Code": ":- dynamic important_meeting/0, morning_rush/0, party_invitation/0.\nrule(r1, swim_session, []) :- important_meeting.\nrule(r2, use_subway, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []) :- important_meeting, morning_rush.\nrule(p2, prefer(r2, r1), []) :- important_meeting, morning_rush, unexpected_expense.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(use_subway, swim_session).\ncomplement(swim_session, use_subway).\ncomplement(important_meeting, morning_rush).\ncomplement(morning_rush, important_meeting).",
        "NL Translation": "If there is an important meeting, I have a swim session. If it's the morning rush, I use the subway. If both the important meeting and morning rush occur, I prefer the swim session; however, if there is also an unexpected expense, I prefer to use the subway. I cannot have both the swim session and use the subway, and important meeting and morning rush are not compatible. If there is a party invitation, I prefer the swim session over using the subway."
    },
    {
        "Example Number": 642,
        "Gorgias Code": ":- dynamic weekend/0, low_budget/0\nrule(r1, submit_timesheet, []) :- weekend.\nrule(r2, dispose_trash, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- low_budget.\nrule(c1, prefer(p2, p1), []).\ncomplement(dispose_trash, submit_timesheet).\ncomplement(submit_timesheet, dispose_trash).",
        "NL Translation": "When it is the weekend, I can either submit my timesheet or dispose of the trash. Generally, I prefer to submit my timesheet, but if I have a low budget, I prefer to dispose of the trash. I cannot do both at the same time."
    },
    {
        "Example Number": 829,
        "Gorgias Code": ":- dynamic family_gathering/0, windy_day/0\nrule(r1, dispose_trash, []) :- family_gathering.\nrule(r2, schedule_meeting, []) :- family_gathering.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- windy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(schedule_meeting, dispose_trash).\ncomplement(dispose_trash, schedule_meeting).",
        "NL Translation": "When there is a family gathering, I dispose of the trash or schedule a meeting. Generally, I prefer to dispose of the trash, but if it is a windy day, I prefer to schedule a meeting. I cannot dispose of the trash and schedule a meeting at the same time."
    },
    {
        "Example Number": 585,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, concert_nearby/0\nrule(r1, organize_workspace, []) :- new_restaurant_to_try.\nrule(r2, take_bus, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- concert_nearby.\nrule(c1, prefer(p2, p1), []).\ncomplement(take_bus, organize_workspace).\ncomplement(organize_workspace, take_bus).",
        "NL Translation": "If there is a new restaurant to try, I organize my workspace or take the bus. Generally, I prefer to organize my workspace, but if there is a concert nearby, I prefer to take the bus."
    },
    {
        "Example Number": 764,
        "Gorgias Code": ":- dynamic weekend/0.\nrule(r1, explore_city, []) :- weekend.\nrule(r2, book_flight, []) :- weekend.\nrule(p1, prefer(r1, r2), []).\ncomplement(book_flight, explore_city).\ncomplement(explore_city, book_flight).",
        "NL Translation": "\"When it is the weekend, I explore the city or book a flight. I generally prefer to explore the city over booking a flight.\""
    },
    {
        "Example Number": 611,
        "Gorgias Code": ":- dynamic networking_event/0, lunch_time/0\nrule(r1, attend_workshop, []) :- networking_event.\nrule(r2, rent_car, []) :- networking_event.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, attend_workshop).\ncomplement(attend_workshop, rent_car).",
        "NL Translation": "When there is a networking event, I attend a workshop or rent a car. Generally, I prefer to attend a workshop but if it is lunch time, I prefer to rent a car. I can't at the same time rent a car and attend a workshop."
    },
    {
        "Example Number": 846,
        "Gorgias Code": ":- dynamic job_interview/0, wedding_anniversary/0, good_weather/0, friend_in_town/0, concert_nearby/0.\nrule(r1, update_project_plan, []) :- job_interview.\nrule(r2, meditate, []) :- wedding_anniversary.\nrule(p1, prefer(r1, r2), []) :- job_interview, wedding_anniversary.\nrule(p2, prefer(r2, r1), []) :- job_interview, wedding_anniversary, weekend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- good_weather.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- friend_in_town.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- concert_nearby.\nrule(c5, prefer(c4, c3), []).\ncomplement(meditate, update_project_plan).\ncomplement(update_project_plan, meditate).\ncomplement(job_interview, wedding_anniversary).\ncomplement(wedding_anniversary, job_interview).",
        "NL Translation": "If there is a job interview, I update the project plan. If it's my wedding anniversary, I meditate. If I have both a job interview and wedding anniversary, I prefer to update the project plan; however, if it's also the weekend, I prefer to meditate. I can't at the same time update the project plan and meditate. Good weather makes me prefer updating the project plan over meditating. If a friend is in town, I prefer updating the project plan over meditating. If there is a concert nearby, I prefer meditating over updating the project plan."
    },
    {
        "Example Number": 752,
        "Gorgias Code": ":- dynamic lunch_time/0, rainy_day/0, feeling_sick/0, job_interview/0, concert_nearby/0.\nrule(r1, organize_workspace, []) :- lunch_time.\nrule(r2, schedule_meeting, []) :- rainy_day.\nrule(p1, prefer(r1, r2), []) :- lunch_time, rainy_day.\nrule(p2, prefer(r2, r1), []) :- lunch_time, rainy_day, networking_event.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- concert_nearby.\nrule(c5, prefer(c4, c3), []).\ncomplement(schedule_meeting, organize_workspace).\ncomplement(organize_workspace, schedule_meeting).\ncomplement(lunch_time, rainy_day).\ncomplement(rainy_day, lunch_time).",
        "NL Translation": "\"When it is lunch time, I organize my workspace. If it's a rainy day, I schedule a meeting. I prefer to organize my workspace over scheduling a meeting if it's lunch time and a rainy day. However, if there is a networking event, I prefer to schedule a meeting over organizing my workspace. If I am feeling sick, I prefer to organize my workspace over scheduling a meeting. If there is a job interview, I prefer to schedule a meeting over organizing my workspace. If there is a concert nearby, I prefer to organize my workspace over scheduling a meeting. I can't at the same time schedule a meeting and organize my workspace, and lunch time and rainy day are not compatible.\""
    },
    {
        "Example Number": 866,
        "Gorgias Code": ":- dynamic birthday_today/0, subscription_due/0, early_morning/0.\nrule(r1, explore_city, []) :- birthday_today.\nrule(r2, cook_dinner, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- birthday_today, subscription_due.\nrule(p2, prefer(r2, r1), []) :- birthday_today, subscription_due, extended_work_hours.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- early_morning.\nrule(c3, prefer(c2, c1), []).\ncomplement(cook_dinner, explore_city).\ncomplement(explore_city, cook_dinner).\ncomplement(birthday_today, subscription_due).\ncomplement(subscription_due, birthday_today).",
        "NL Translation": "If it is your birthday today, you explore the city. If your subscription is due, you cook dinner. If both your birthday is today and your subscription is due, you prefer to explore the city; however, if you also have extended work hours, you prefer to cook dinner. You cannot explore the city and cook dinner at the same time, and your birthday being today and your subscription being due are not compatible. If it is early morning, you prefer to explore the city over cooking dinner."
    },
    {
        "Example Number": 803,
        "Gorgias Code": ":- dynamic deadline_missed/0, client_feedback/0, community_event/0\nrule(r1, prepare_report, []) :- deadline_missed.\nrule(r2, book_ride_share, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- community_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, prepare_report).\ncomplement(prepare_report, book_ride_share).",
        "NL Translation": "\"If the deadline is missed, I prepare a report or book a ride share. Generally, I prefer to prepare a report but if there is client feedback, I prefer to book a ride share. If there is a community event, I prefer to prepare a report over booking a ride share.\""
    },
    {
        "Example Number": 664,
        "Gorgias Code": ":- dynamic vacation_planned/0, early_morning/0, boss_in_office/0\nrule(r1, cook_dinner, []) :- vacation_planned.\nrule(r2, go_to(cinema), []) :- vacation_planned.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- early_morning.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- boss_in_office.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(cinema), cook_dinner).\ncomplement(cook_dinner, go_to(cinema)).",
        "NL Translation": "\"If I have a vacation planned, I cook dinner. If there is an early morning, I go to the cinema. Generally, I prefer to cook dinner over going to the cinema. However, if the boss is in the office, I prefer to go to the cinema. I can't cook dinner and go to the cinema at the same time.\""
    },
    {
        "Example Number": 376,
        "Gorgias Code": ":- dynamic morning_rush/0, new_restaurant_to_try/0, family_emergency/0, job_interview/0, team_project_due/0.\nrule(r1, evening_walk, []) :- morning_rush.\nrule(r2, use_subway, []) :- new_restaurant_to_try.\nrule(p1, prefer(r1, r2), []) :- morning_rush, new_restaurant_to_try.\nrule(p2, prefer(r2, r1), []) :- morning_rush, new_restaurant_to_try, invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- family_emergency.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- team_project_due.\nrule(c5, prefer(c4, c3), []).\ncomplement(use_subway, evening_walk).\ncomplement(evening_walk, use_subway).\ncomplement(morning_rush, new_restaurant_to_try).\ncomplement(new_restaurant_to_try, morning_rush).",
        "NL Translation": "\"If there is a morning rush, I take an evening walk. If there is a new restaurant to try, I use the subway. I prefer an evening walk over using the subway if there is a morning rush and a new restaurant to try. However, if there is an invitation from a friend, I prefer using the subway over an evening walk. In case of a family emergency, I prefer using the subway over an evening walk. If there is a job interview, I prefer an evening walk over using the subway. If there is a team project due, I prefer using the subway over an evening walk. I cannot both use the subway and take an evening walk, and morning rush and new restaurant to try are not compatible.\""
    },
    {
        "Example Number": 269,
        "Gorgias Code": ":- dynamic tax_refund/0.\nrule(r1, go_to_bar, []) :- tax_refund.\nrule(r2, drive_car, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []).\ncomplement(drive_car, go_to_bar).\ncomplement(go_to_bar, drive_car).",
        "NL Translation": "When there is a tax refund, I either go to the bar or drive the car. I generally prefer to go to the bar over driving the car. I cannot go to the bar and drive the car at the same time."
    },
    {
        "Example Number": 338,
        "Gorgias Code": ":- dynamic night_time/0, invitation_from_friend/0\nrule(r1, evening_walk, []) :- night_time.\nrule(r2, attend_meeting, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- invitation_from_friend.\nrule(c1, prefer(p2, p1), []).\ncomplement(attend_meeting, evening_walk).\ncomplement(evening_walk, attend_meeting).",
        "NL Translation": "When it is night time, I can either go for an evening walk or attend a meeting. Generally, I prefer to go for an evening walk but if I have an invitation from a friend, I prefer to attend the meeting. I can't at the same time go for an evening walk and attend a meeting."
    },
    {
        "Example Number": 469,
        "Gorgias Code": ":- dynamic early_morning/0, hot_day/0.\nrule(r1, morning_run, []) :- early_morning.\nrule(r2, review_documents, []) :- hot_day.\nrule(p1, prefer(r1, r2), []) :- early_morning, hot_day.\nrule(p2, prefer(r2, r1), []) :- early_morning, hot_day, tax_refund.\nrule(c1, prefer(p2, p1), []).\ncomplement(review_documents, morning_run).\ncomplement(morning_run, review_documents).\ncomplement(early_morning, hot_day).\ncomplement(hot_day, early_morning).",
        "NL Translation": "\"If it is early morning, I do a morning run. If it is a hot day, I review documents. If it is both early morning and a hot day, I prefer to do a morning run; however, if there is also a tax refund, I prefer to review documents. I cannot do a morning run and review documents at the same time, and early morning and hot day are not compatible.\""
    },
    {
        "Example Number": 948,
        "Gorgias Code": ":- dynamic school_reunion/0, invitation_from_friend/0, humid_day/0.\nrule(r1, attend_concert, []) :- school_reunion.\nrule(r2, book_flight, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []) :- school_reunion, invitation_from_friend.\nrule(p2, prefer(r2, r1), []) :- school_reunion, invitation_from_friend, client_feedback.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- humid_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_flight, attend_concert).\ncomplement(attend_concert, book_flight).\ncomplement(school_reunion, invitation_from_friend).\ncomplement(invitation_from_friend, school_reunion).",
        "NL Translation": "If there is a school reunion, I attend a concert. If I receive an invitation from a friend, I book a flight. If both the school reunion and the invitation from a friend are present, I prefer attending the concert; however, if there is also client feedback, I prefer booking a flight. If it is a humid day, I prefer booking a flight over attending the concert. I cannot both attend a concert and book a flight, and school reunion and invitation from a friend are incompatible."
    },
    {
        "Example Number": 420,
        "Gorgias Code": ":- dynamic invitation_from_friend/0, hot_day/0, party_invitation/0\nrule(r1, explore_city, []) :- invitation_from_friend.\nrule(r2, do_laundry, []) :- invitation_from_friend.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- hot_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- party_invitation.\nrule(c3, prefer(c2, c1), []).\ncomplement(do_laundry, explore_city).\ncomplement(explore_city, do_laundry).",
        "NL Translation": "\"If there is an invitation from a friend, I explore the city or do laundry. Generally, I prefer to explore the city but if it is a hot day, I prefer to do laundry. However, if there is a party invitation, I prefer to explore the city over doing laundry. I can't at the same time explore the city and do laundry.\""
    },
    {
        "Example Number": 614,
        "Gorgias Code": ":- dynamic important_meeting/0, subscription_due/0, networking_event/0\nrule(r1, update_project_plan, []) :- important_meeting.\nrule(r2, attend_workshop, []) :- important_meeting.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- subscription_due.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- networking_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(attend_workshop, update_project_plan).\ncomplement(update_project_plan, attend_workshop).",
        "NL Translation": "If there is an important meeting, I update the project plan or attend a workshop. Generally, I prefer to update the project plan, but if the subscription is due, I prefer to attend a workshop. However, if there is a networking event, I prefer to update the project plan. I can't update the project plan and attend a workshop at the same time."
    },
    {
        "Example Number": 255,
        "Gorgias Code": ":- dynamic deadline_missed/0, expensive_event/0\nrule(r1, schedule_meeting, []) :- deadline_missed.\nrule(r2, visit_museum, []) :- deadline_missed.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- expensive_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(visit_museum, schedule_meeting).\ncomplement(schedule_meeting, visit_museum).",
        "NL Translation": "If the deadline is missed, I either schedule a meeting or visit the museum. Generally, I prefer to schedule a meeting but if it is an expensive event, I prefer to visit the museum."
    },
    {
        "Example Number": 666,
        "Gorgias Code": ":- dynamic new_restaurant_to_try/0, early_morning/0, low_budget/0.\nrule(r1, give_presentation, []) :- new_restaurant_to_try.\nrule(r2, go_to(theater), []) :- early_morning.\nrule(p1, prefer(r1, r2), []) :- new_restaurant_to_try, early_morning.\nrule(p2, prefer(r2, r1), []) :- new_restaurant_to_try, early_morning, discount_on_flight.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- low_budget.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(theater), give_presentation).\ncomplement(give_presentation, go_to(theater)).\ncomplement(new_restaurant_to_try, early_morning).\ncomplement(early_morning, new_restaurant_to_try).",
        "NL Translation": "\"If there is a new restaurant to try, I give a presentation. If it's early morning, I go to the theater. However, if there is a new restaurant to try and it's early morning, I prefer to give a presentation. But if there is a new restaurant to try, it's early morning, and there is a discount on the flight, I prefer to go to the theater. I can't at the same time go to the theater and give a presentation, and having a low budget is not compatible with preferring to give a presentation over going to the theater.\""
    },
    {
        "Example Number": 648,
        "Gorgias Code": ":- dynamic new_neighbor/0, relationship_break/0, expensive_event/0.\nrule(r1, visit_museum, []) :- new_neighbor.\nrule(r2, take_picnic, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, relationship_break.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, relationship_break, cloudy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- expensive_event.\nrule(c3, prefer(c2, c1), []).\ncomplement(take_picnic, visit_museum).\ncomplement(visit_museum, take_picnic).\ncomplement(new_neighbor, relationship_break).\ncomplement(relationship_break, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I visit the museum. If there is a relationship break, I take a picnic. If both conditions are met, I prefer to visit the museum, however, if it's also a cloudy day, I prefer to take a picnic. I can't at the same time visit the museum and take a picnic, and having a new neighbor and a relationship break are not compatible. If there is an expensive event, I prefer to take a picnic over visiting the museum."
    },
    {
        "Example Number": 67,
        "Gorgias Code": ":- dynamic concert_nearby/0, snowstorm/0, got_bonus/0, new_restaurant_to_try/0, low_budget/0.\nrule(r1, review_documents, []) :- concert_nearby.\nrule(r2, finish_report, []) :- snowstorm.\nrule(p1, prefer(r1, r2), []) :- concert_nearby, snowstorm.\nrule(p2, prefer(r2, r1), []) :- concert_nearby, snowstorm, windy_day.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- got_bonus.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- new_restaurant_to_try.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- low_budget.\nrule(c5, prefer(c4, c3), []).\ncomplement(finish_report, review_documents).\ncomplement(review_documents, finish_report).\ncomplement(concert_nearby, snowstorm).\ncomplement(snowstorm, concert_nearby).",
        "NL Translation": "If there is a concert nearby, I review documents. If there is a snowstorm, I finish the report. If both the concert is nearby and there is a snowstorm, I prefer to review documents; however, if it's also a windy day, I prefer to finish the report. If I got a bonus, I prefer to finish the report over reviewing documents. If there is a new restaurant to try, I prefer to review documents. If there is a low budget, I prefer to review documents over finishing the report."
    },
    {
        "Example Number": 334,
        "Gorgias Code": ":- dynamic feeling_sick/0.\nrule(r1, drive_car, []) :- feeling_sick.\nrule(r2, water_plants, []) :- feeling_sick.\nrule(p1, prefer(r1, r2), []).\ncomplement(water_plants, drive_car).\ncomplement(drive_car, water_plants).",
        "NL Translation": "When feeling sick, I drive the car or water the plants. I prefer to drive the car over watering the plants. I can't at the same time water the plants and drive the car."
    },
    {
        "Example Number": 246,
        "Gorgias Code": ":- dynamic party_invitation/0, community_event/0.\nrule(r1, visit_family, []) :- party_invitation.\nrule(r2, evening_walk, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- party_invitation, community_event.\nrule(p2, prefer(r2, r1), []) :- party_invitation, community_event, cloudy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(evening_walk, visit_family).\ncomplement(visit_family, evening_walk).\ncomplement(party_invitation, community_event).\ncomplement(community_event, party_invitation).",
        "NL Translation": "If there is a party invitation, I visit family. If there is a community event, I go for an evening walk. If there is both a party invitation and a community event, I prefer to visit family. However, if it's a cloudy day, I prefer to go for an evening walk. I cannot visit family and go for an evening walk at the same time, and party invitation and community event are not compatible."
    },
    {
        "Example Number": 584,
        "Gorgias Code": ":- dynamic deadline_missed/0, subscription_due/0.\nrule(r1, plan_meals, []) :- deadline_missed.\nrule(r2, go_gym, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- deadline_missed, subscription_due.\nrule(p2, prefer(r2, r1), []) :- deadline_missed, subscription_due, rainy_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(go_gym, plan_meals).\ncomplement(plan_meals, go_gym).\ncomplement(deadline_missed, subscription_due).\ncomplement(subscription_due, deadline_missed).",
        "NL Translation": "If the deadline is missed, plan meals. If the subscription is due, go to the gym. If both the deadline is missed and the subscription is due, prefer to plan meals; however, if it's also a rainy day, prefer to go to the gym. You cannot plan meals and go to the gym at the same time, and a missed deadline and a due subscription are not compatible."
    },
    {
        "Example Number": 481,
        "Gorgias Code": ":- dynamic cloudy_day/0, tax_refund/0, windy_day/0.\nrule(r1, use_subway, []) :- cloudy_day.\nrule(r2, go_gym, []) :- tax_refund.\nrule(p1, prefer(r1, r2), []) :- cloudy_day, tax_refund.\nrule(p2, prefer(r2, r1), []) :- cloudy_day, tax_refund, low_budget.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- windy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_gym, use_subway).\ncomplement(use_subway, go_gym).\ncomplement(cloudy_day, tax_refund).\ncomplement(tax_refund, cloudy_day).",
        "NL Translation": "If it is a cloudy day, I use the subway or go to the gym. Generally, I prefer to use the subway, but if I have a tax refund, I prefer to go to the gym. However, if it is a windy day, I prefer to go to the gym. I cannot use the subway and go to the gym at the same time, and cloudy day and tax refund are not compatible."
    },
    {
        "Example Number": 260,
        "Gorgias Code": ":- dynamic new_neighbor/0, relationship_break/0, birthday_today/0, client_feedback/0, wedding_anniversary/0.\nrule(r1, go_to_bar, []) :- new_neighbor.\nrule(r2, meditate, []) :- relationship_break.\nrule(p1, prefer(r1, r2), []) :- new_neighbor, relationship_break.\nrule(p2, prefer(r2, r1), []) :- new_neighbor, relationship_break, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- birthday_today.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- wedding_anniversary.\nrule(c5, prefer(c4, c3), []).\ncomplement(meditate, go_to_bar).\ncomplement(go_to_bar, meditate).\ncomplement(new_neighbor, relationship_break).\ncomplement(relationship_break, new_neighbor).",
        "NL Translation": "If there is a new neighbor, I go to the bar. If there is a relationship break, I meditate. If both the new neighbor and relationship break are present, I prefer to go to the bar; however, if there is also an urgent deadline, I prefer to meditate. If today is my birthday, I prefer to go to the bar. If there is client feedback, I prefer to meditate. If there is a wedding anniversary, I prefer to go to the bar. If there is a wedding anniversary, I prefer to meditate."
    },
    {
        "Example Number": 409,
        "Gorgias Code": ":- dynamic lunch_time/0, community_event/0\nrule(r1, travel_abroad, []) :- lunch_time.\nrule(r2, cycle_to_work, []) :- lunch_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- community_event.\nrule(c1, prefer(p2, p1), []).\ncomplement(cycle_to_work, travel_abroad).\ncomplement(travel_abroad, cycle_to_work).",
        "NL Translation": "\"When it is lunch time, I can travel abroad or cycle to work. Generally, I prefer to travel abroad but if there is a community event, I prefer to cycle to work. I can't at the same time travel abroad and cycle to work.\""
    },
    {
        "Example Number": 172,
        "Gorgias Code": ":- dynamic lunch_time/0, subscription_due/0.\nrule(r1, go_to(cinema), []) :- lunch_time.\nrule(r2, drive_car, []) :- subscription_due.\nrule(p1, prefer(r1, r2), []) :- lunch_time, subscription_due.\nrule(p2, prefer(r2, r1), []) :- lunch_time, subscription_due, important_meeting.\nrule(c1, prefer(p2, p1), []).\ncomplement(drive_car, go_to(cinema)).\ncomplement(go_to(cinema), drive_car).\ncomplement(lunch_time, subscription_due).\ncomplement(subscription_due, lunch_time).",
        "NL Translation": "\"If it is lunch time, I go to the cinema. If the subscription is due, I drive the car. But if it is both lunch time and the subscription is due, I prefer to go to the cinema. However, if it is lunch time, the subscription is due, and there is an important meeting, I prefer to drive the car. I can't at the same time drive the car and go to the cinema, and lunch time and subscription due are not compatible.\""
    },
    {
        "Example Number": 774,
        "Gorgias Code": ":- dynamic morning_rush/0.\nrule(r1, call_client, []) :- morning_rush.\nrule(r2, dispose_trash, []) :- morning_rush.\nrule(p1, prefer(r1, r2), []).\ncomplement(dispose_trash, call_client).\ncomplement(call_client, dispose_trash).",
        "NL Translation": "When there is a morning rush, I call the client or dispose of the trash. I prefer to call the client over disposing of the trash. I cannot do both calling the client and disposing of the trash."
    },
    {
        "Example Number": 227,
        "Gorgias Code": ":- dynamic good_investment/0, morning_rush/0, subscription_due/0\nrule(r1, attend_concert, []) :- good_investment.\nrule(r2, drive_car, []) :- good_investment.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- morning_rush.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- subscription_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(drive_car, attend_concert).\ncomplement(attend_concert, drive_car).",
        "NL Translation": "If there is a good investment, I attend the concert or drive the car. Generally, I prefer to attend the concert but if there is a morning rush, I prefer to drive the car. However, if there is a subscription due, I prefer to attend the concert. I can't at the same time drive the car and attend the concert."
    },
    {
        "Example Number": 208,
        "Gorgias Code": ":- dynamic client_feedback/0.\nrule(r1, meditate, []) :- client_feedback.\nrule(r2, reply_emails, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\ncomplement(reply_emails, meditate).\ncomplement(meditate, reply_emails).",
        "NL Translation": "When there is client feedback, I either meditate or reply to emails. I prefer to meditate over replying to emails. I cannot meditate and reply to emails at the same time."
    },
    {
        "Example Number": 38,
        "Gorgias Code": ":- dynamic unexpected_guest/0, concert_nearby/0.\nrule(r1, update_project_plan, []) :- unexpected_guest.\nrule(r2, rent_car, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- unexpected_guest, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- unexpected_guest, concert_nearby, humid_day.\nrule(c1, prefer(p2, p1), []).\ncomplement(rent_car, update_project_plan).\ncomplement(update_project_plan, rent_car).\ncomplement(unexpected_guest, concert_nearby).\ncomplement(concert_nearby, unexpected_guest).",
        "NL Translation": "If there is an unexpected guest, I update the project plan. If there is a concert nearby, I rent a car. However, if there is both an unexpected guest and a concert nearby, I prefer to update the project plan. But if it's also a humid day, I prefer to rent a car. I can't at the same time rent a car and update the project plan, and unexpected guest and concert nearby are not compatible."
    },
    {
        "Example Number": 258,
        "Gorgias Code": ":- dynamic job_interview/0.\nrule(r1, yoga_session, []) :- job_interview.\nrule(r2, review_documents, []) :- job_interview.\nrule(p1, prefer(r1, r2), []).\ncomplement(review_documents, yoga_session).\ncomplement(yoga_session, review_documents).",
        "NL Translation": "When there is a job interview, I either have a yoga session or review documents. I prefer to have a yoga session over reviewing documents. I cannot have both a yoga session and review documents at the same time."
    },
    {
        "Example Number": 250,
        "Gorgias Code": ":- dynamic afternoon/0, friend_in_town/0.\nrule(r1, book_ride_share, []) :- afternoon.\nrule(r2, meditate, []) :- friend_in_town.\nrule(p1, prefer(r1, r2), []) :- afternoon, friend_in_town.\nrule(p2, prefer(r2, r1), []) :- afternoon, friend_in_town, lunch_time.\nrule(c1, prefer(p2, p1), []).\ncomplement(meditate, book_ride_share).\ncomplement(book_ride_share, meditate).\ncomplement(afternoon, friend_in_town).\ncomplement(friend_in_town, afternoon).",
        "NL Translation": "\"If it is afternoon, I book a ride share. If a friend is in town, I meditate. If it is both afternoon and a friend is in town, I prefer to book a ride share; however, if it is also lunch time, I prefer to meditate. I can't at the same time meditate and book a ride share, and afternoon and having a friend in town are not compatible.\""
    },
    {
        "Example Number": 641,
        "Gorgias Code": ":- dynamic low_budget/0, concert_nearby/0, important_meeting/0, client_feedback/0, early_morning/0.\nrule(r1, submit_timesheet, []) :- low_budget.\nrule(r2, plan_meals, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- low_budget, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- low_budget, concert_nearby, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- important_meeting.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- client_feedback.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- early_morning.\nrule(c5, prefer(c4, c3), []).\ncomplement(plan_meals, submit_timesheet).\ncomplement(submit_timesheet, plan_meals).\ncomplement(low_budget, concert_nearby).\ncomplement(concert_nearby, low_budget).",
        "NL Translation": "\"If there is a low budget, I submit timesheet. If there is a concert nearby, I plan meals. If there is both a low budget and a concert nearby, I prefer to submit timesheet; however, if there is also an urgent deadline, I prefer to plan meals. If there is an important meeting, I prefer to submit timesheet. If there is client feedback, I prefer to plan meals. If there is an early morning, I prefer to submit timesheet over planning meals.\""
    },
    {
        "Example Number": 811,
        "Gorgias Code": ":- dynamic night_time/0, good_investment/0, feeling_sick/0\nrule(r1, explore_city, []) :- night_time.\nrule(r2, go_shopping, []) :- night_time.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- good_investment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- feeling_sick.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_shopping, explore_city).\ncomplement(explore_city, go_shopping).",
        "NL Translation": "\"If it is night time, I explore the city or go shopping. Generally, I prefer to explore the city but if it is a good investment, I prefer to go shopping. However, if I am feeling sick, I prefer to explore the city. I can't at the same time explore the city and go shopping.\""
    },
    {
        "Example Number": 204,
        "Gorgias Code": ":- dynamic team_project_due/0.\nrule(r1, make_coffee, []) :- team_project_due.\nrule(r2, go_shopping, []) :- team_project_due.\nrule(p1, prefer(r1, r2), []).\ncomplement(go_shopping, make_coffee).\ncomplement(make_coffee, go_shopping).",
        "NL Translation": "\"When there is a team project due, I make coffee or go shopping. I prefer to make coffee over going shopping.\""
    },
    {
        "Example Number": 889,
        "Gorgias Code": ":- dynamic client_feedback/0, tax_refund/0, afternoon/0\nrule(r1, use_subway, []) :- client_feedback.\nrule(r2, cycling_session, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- tax_refund.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\ncomplement(cycling_session, use_subway).\ncomplement(use_subway, cycling_session).",
        "NL Translation": "\"If there is client feedback, I use the subway or have a cycling session. Generally, I prefer to use the subway but if there is a tax refund, I prefer a cycling session. If it is the afternoon, I prefer having a cycling session over using the subway. I can't at the same time use the subway and have a cycling session.\""
    },
    {
        "Example Number": 899,
        "Gorgias Code": ":- dynamic moving_house/0, windy_day/0, team_project_due/0.\nrule(r1, cycle_to_work, []) :- moving_house.\nrule(r2, join_fitness_class, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- moving_house, windy_day.\nrule(p2, prefer(r2, r1), []) :- moving_house, windy_day, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- team_project_due.\nrule(c3, prefer(c2, c1), []).\ncomplement(join_fitness_class, cycle_to_work).\ncomplement(cycle_to_work, join_fitness_class).\ncomplement(moving_house, windy_day).\ncomplement(windy_day, moving_house).",
        "NL Translation": "\"If I am moving house, I cycle to work. If it's a windy day, I join a fitness class. But if I am moving house and it's a windy day, I prefer to cycle to work. However, if it's also an important meeting day, I prefer to join a fitness class. I can't at the same time cycle to work and join a fitness class, and moving house and windy day aren't compatible.\""
    },
    {
        "Example Number": 196,
        "Gorgias Code": ":- dynamic relationship_break/0, concert_nearby/0, discount_on_flight/0.\nrule(r1, attend_meeting, []) :- relationship_break.\nrule(r2, rent_car, []) :- concert_nearby.\nrule(p1, prefer(r1, r2), []) :- relationship_break, concert_nearby.\nrule(p2, prefer(r2, r1), []) :- relationship_break, concert_nearby, urgent_deadline.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- discount_on_flight.\nrule(c3, prefer(c2, c1), []).\ncomplement(rent_car, attend_meeting).\ncomplement(attend_meeting, rent_car).\ncomplement(relationship_break, concert_nearby).\ncomplement(concert_nearby, relationship_break).",
        "NL Translation": "\"If there is a relationship break, I attend a meeting. If there is a concert nearby, I rent a car. But if there is both a relationship break and a concert nearby, I prefer to attend the meeting, however if there is also an urgent deadline I prefer to rent a car. I can't at the same time attend a meeting and rent a car, and a relationship break and a concert nearby aren't compatible. If there is a discount on a flight, I prefer to attend a meeting over renting a car.\""
    },
    {
        "Example Number": 937,
        "Gorgias Code": ":- dynamic extended_work_hours/0, client_feedback/0, school_reunion/0.\nrule(r1, review_documents, []) :- extended_work_hours.\nrule(r2, plan_meals, []) :- client_feedback.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, client_feedback.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, client_feedback, deadline_missed.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- school_reunion.\nrule(c3, prefer(c2, c1), []).\ncomplement(plan_meals, review_documents).\ncomplement(review_documents, plan_meals).\ncomplement(extended_work_hours, client_feedback).\ncomplement(client_feedback, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I review documents. If there is client feedback, I plan meals. If both extended work hours and client feedback are present, I prefer to review documents; however, if the deadline is missed, I prefer to plan meals. If there is a school reunion, I prefer to review documents over planning meals."
    },
    {
        "Example Number": 384,
        "Gorgias Code": ":- dynamic extended_work_hours/0, school_reunion/0, cloudy_day/0.\nrule(r1, schedule_meeting, []) :- extended_work_hours.\nrule(r2, call_client, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- extended_work_hours, school_reunion.\nrule(p2, prefer(r2, r1), []) :- extended_work_hours, school_reunion, party_invitation.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- cloudy_day.\nrule(c3, prefer(c2, c1), []).\ncomplement(call_client, schedule_meeting).\ncomplement(schedule_meeting, call_client).\ncomplement(extended_work_hours, school_reunion).\ncomplement(school_reunion, extended_work_hours).",
        "NL Translation": "If I have extended work hours, I schedule a meeting. If there is a school reunion, I call the client. If I have both extended work hours and a school reunion, I prefer to schedule a meeting; however, if there is also a party invitation, I prefer to call the client. If it is a cloudy day, I prefer to schedule a meeting over calling the client."
    },
    {
        "Example Number": 810,
        "Gorgias Code": ":- dynamic client_feedback/0, networking_event/0, afternoon/0, job_interview/0, invitation_from_friend/0.\nrule(r1, schedule_meeting, []) :- client_feedback.\nrule(r2, attend_concert, []) :- networking_event.\nrule(p1, prefer(r1, r2), []) :- client_feedback, networking_event.\nrule(p2, prefer(r2, r1), []) :- client_feedback, networking_event, lunch_time.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- afternoon.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- invitation_from_friend.\nrule(c5, prefer(c4, c3), []).\ncomplement(attend_concert, schedule_meeting).\ncomplement(schedule_meeting, attend_concert).\ncomplement(client_feedback, networking_event).\ncomplement(networking_event, client_feedback).",
        "NL Translation": "If there is client feedback, I schedule a meeting. If there is a networking event, I attend a concert. I prefer to schedule a meeting over attending a concert if there is client feedback and a networking event. However, if there is client feedback, a networking event, and it is lunchtime, I prefer to attend a concert. I prefer attending a concert over scheduling a meeting if there is client feedback, a networking event, and it is lunchtime. In the afternoon, I prefer scheduling a meeting over attending a concert. If there is a job interview, I prefer attending a concert over scheduling a meeting. If there is an invitation from a friend, I prefer scheduling a meeting over attending a concert."
    },
    {
        "Example Number": 150,
        "Gorgias Code": ":- dynamic job_interview/0, school_reunion/0.\nrule(r1, meditate, []) :- job_interview.\nrule(r2, book_ride_share, []) :- school_reunion.\nrule(p1, prefer(r1, r2), []) :- job_interview, school_reunion.\nrule(p2, prefer(r2, r1), []) :- job_interview, school_reunion, hail_storm.\nrule(c1, prefer(p2, p1), []).\ncomplement(book_ride_share, meditate).\ncomplement(meditate, book_ride_share).\ncomplement(job_interview, school_reunion).\ncomplement(school_reunion, job_interview).",
        "NL Translation": "\"If there is a job interview, I meditate. If there is a school reunion, I book a ride share. If both a job interview and a school reunion are present, I prefer to meditate; however, if there is also a hail storm, I prefer to book a ride share. I can't at the same time meditate and book a ride share, and job interview and school reunion aren't compatible.\""
    },
    {
        "Example Number": 390,
        "Gorgias Code": ":- dynamic vacation_planned/0, community_event/0, night_time/0.\nrule(r1, take_train, []) :- vacation_planned.\nrule(r2, book_ride_share, []) :- community_event.\nrule(p1, prefer(r1, r2), []) :- vacation_planned, community_event.\nrule(p2, prefer(r2, r1), []) :- vacation_planned, community_event, medical_appointment.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- night_time.\nrule(c3, prefer(c2, c1), []).\ncomplement(book_ride_share, take_train).\ncomplement(take_train, book_ride_share).\ncomplement(vacation_planned, community_event).\ncomplement(community_event, vacation_planned).",
        "NL Translation": "\"If I have a vacation planned, I take the train. If there is a community event, I book a ride share. If I have both a vacation planned and a community event, I prefer to take the train; however, if there is also a medical appointment, I prefer to book a ride share. I cannot at the same time book a ride share and take the train, and having a vacation planned and a community event are not compatible. If it is night time, I prefer to take the train.\""
    },
    {
        "Example Number": 411,
        "Gorgias Code": ":- dynamic discount_on_flight/0, low_budget/0, weekend/0.\nrule(r1, clean_house, []) :- discount_on_flight.\nrule(r2, yoga_session, []) :- low_budget.\nrule(p1, prefer(r1, r2), []) :- discount_on_flight, low_budget.\nrule(p2, prefer(r2, r1), []) :- discount_on_flight, low_budget, important_meeting.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- weekend.\nrule(c3, prefer(c2, c1), []).\ncomplement(yoga_session, clean_house).\ncomplement(clean_house, yoga_session).\ncomplement(discount_on_flight, low_budget).\ncomplement(low_budget, discount_on_flight).",
        "NL Translation": "If there is a discount on the flight, I clean the house. If I am on a low budget, I attend a yoga session. If there is a discount on the flight and I am on a low budget, I prefer to clean the house. If there is a discount on the flight, I am on a low budget, and there is an important meeting, I prefer to attend a yoga session. I can't at the same time attend a yoga session and clean the house, and having a discount on the flight and being on a low budget are incompatible. On weekends, I prefer to attend a yoga session over cleaning the house."
    },
    {
        "Example Number": 46,
        "Gorgias Code": ":- dynamic project_extension/0.\nrule(r1, go_shopping, []) :- project_extension.\nrule(r2, yoga_session, []) :- project_extension.\nrule(p1, prefer(r1, r2), []).\ncomplement(yoga_session, go_shopping).\ncomplement(go_shopping, yoga_session).",
        "NL Translation": "If there is a project extension, I go shopping or attend a yoga session. I prefer to go shopping over attending a yoga session. I cannot go shopping and attend a yoga session at the same time."
    },
    {
        "Example Number": 183,
        "Gorgias Code": ":- dynamic windy_day/0, afternoon/0, job_interview/0\nrule(r1, water_plants, []) :- windy_day.\nrule(r2, go_to(restaurant), []) :- windy_day.\nrule(p1, prefer(r1, r2), []).\nrule(p2, prefer(r2, r1), []) :- afternoon.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- job_interview.\nrule(c3, prefer(c2, c1), []).\ncomplement(go_to(restaurant), water_plants).\ncomplement(water_plants, go_to(restaurant)).",
        "NL Translation": "\"If it is a windy day, I water plants or go to a restaurant. Generally, I prefer to water plants but if it is afternoon, I prefer to go to a restaurant. However, if I have a job interview, I prefer to water plants. I can't at the same time water plants and go to a restaurant.\""
    },
    {
        "Example Number": 636,
        "Gorgias Code": ":- dynamic community_event/0, windy_day/0, concert_nearby/0, new_neighbor/0, new_restaurant_to_try/0.\nrule(r1, attend_workshop, []) :- community_event.\nrule(r2, go_to_bar, []) :- windy_day.\nrule(p1, prefer(r1, r2), []) :- community_event, windy_day.\nrule(p2, prefer(r2, r1), []) :- community_event, windy_day, boss_in_office.\nrule(c1, prefer(p2, p1), []).\nrule(c2, prefer(p1, p2), []) :- concert_nearby.\nrule(c3, prefer(c2, c1), []).\nrule(c2, prefer(p1, p2), []) :- new_neighbor.\nrule(c3, prefer(c2, c1), []).\nrule(c4, prefer(c1, c2), []) :- new_restaurant_to_try.\nrule(c5, prefer(c4, c3), []).\ncomplement(go_to_bar, attend_workshop).\ncomplement(attend_workshop, go_to_bar).\ncomplement(community_event, windy_day).\ncomplement(windy_day, community_event).",
        "NL Translation": "If there is a community event, I attend a workshop. If it's a windy day, I go to a bar. If both the community event and windy day occur, I prefer to attend a workshop; however, if the boss is in the office, I prefer to go to a bar. If there is a concert nearby, I prefer to go to a bar. If there is a new neighbor, I prefer to attend a workshop. If there is a new restaurant to try, I prefer to go to a bar."
    }
]